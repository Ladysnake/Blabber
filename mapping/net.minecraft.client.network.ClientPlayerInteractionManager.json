{
	"title": "net.minecraft.client.multiplayer.MultiPlayerGameMode",
	"items": [
		{
			"forge": "net.minecraft.client.multiplayer.MultiPlayerGameMode",
			"fabric": "net.minecraft.client.network.ClientPlayerInteractionManager"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "minecraft",
			"fabric": "client"
		},
		{
			"forge": "connection",
			"fabric": "networkHandler"
		},
		{
			"forge": "destroyBlockPos",
			"fabric": "currentBreakingPos"
		},
		{
			"forge": "destroyingItem",
			"fabric": "selectedStack"
		},
		{
			"forge": "destroyProgress",
			"fabric": "currentBreakingProgress"
		},
		{
			"forge": "destroyTicks",
			"fabric": "blockBreakingSoundCooldown"
		},
		{
			"forge": "destroyDelay",
			"fabric": "blockBreakingCooldown"
		},
		{
			"forge": "isDestroying",
			"fabric": "breakingBlock"
		},
		{
			"forge": "localPlayerMode",
			"fabric": "gameMode"
		},
		{
			"forge": "previousLocalPlayerMode",
			"fabric": "previousGameMode"
		},
		{
			"forge": "carriedIndex",
			"fabric": "lastSelectedSlot"
		},
		{
			"forge": "adjustPlayer(Player arg0)",
			"fabric": "copyAbilities(PlayerEntity player)"
		},
		{
			"forge": "adjustPlayer(Player arg0)",
			"fabric": "copyAbilities(PlayerEntity player)"
		},
		{
			"forge": "setLocalMode(GameType arg0, GameType arg1)",
			"fabric": "setGameModes(GameMode gameMode, GameMode previousGameMode)"
		},
		{
			"forge": "setLocalMode(GameType arg0)",
			"fabric": "setGameMode(GameMode gameMode)"
		},
		{
			"forge": "canHurtPlayer()",
			"fabric": "hasStatusBars()"
		},
		{
			"forge": "destroyBlock(BlockPos arg0)",
			"fabric": "breakBlock(BlockPos pos)"
		},
		{
			"forge": "startDestroyBlock(BlockPos arg0, Direction arg1)",
			"fabric": "attackBlock(BlockPos pos, Direction direction)"
		},
		{
			"forge": "stopDestroyBlock()",
			"fabric": "cancelBlockBreaking()"
		},
		{
			"forge": "continueDestroyBlock(BlockPos arg0, Direction arg1)",
			"fabric": "updateBlockBreakingProgress(BlockPos pos, Direction direction)"
		},
		{
			"forge": "startPrediction(ClientLevel arg0, PredictiveAction arg1)",
			"fabric": "sendSequencedPacket(ClientWorld world, SequencedPacketCreator packetCreator)"
		},
		{
			"forge": "getPickRange()",
			"fabric": "getReachDistance()"
		},
		{
			"forge": "tick()",
			"fabric": "tick()"
		},
		{
			"forge": "sameDestroyTarget(BlockPos arg0)",
			"fabric": "isCurrentlyBreaking(BlockPos pos)"
		},
		{
			"forge": "ensureHasSentCarriedItem()",
			"fabric": "syncSelectedSlot()"
		},
		{
			"forge": "useItemOn(LocalPlayer arg0, InteractionHand arg1, BlockHitResult arg2)",
			"fabric": "interactBlock(ClientPlayerEntity player, Hand hand, BlockHitResult hitResult)"
		},
		{
			"forge": "performUseItemOn(LocalPlayer arg0, InteractionHand arg1, BlockHitResult arg2)",
			"fabric": "interactBlockInternal(ClientPlayerEntity player, Hand hand, BlockHitResult hitResult)"
		},
		{
			"forge": "useItem(Player arg0, InteractionHand arg1)",
			"fabric": "interactItem(PlayerEntity player, Hand hand)"
		},
		{
			"forge": "createPlayer(ClientLevel arg0, StatsCounter arg1, ClientRecipeBook arg2)",
			"fabric": "createPlayer(ClientWorld world, StatHandler statHandler, ClientRecipeBook recipeBook)"
		},
		{
			"forge": "createPlayer(ClientLevel arg0, StatsCounter arg1, ClientRecipeBook arg2, boolean arg3, boolean arg4)",
			"fabric": "createPlayer(ClientWorld world, StatHandler statHandler, ClientRecipeBook recipeBook, boolean lastSneaking, boolean lastSprinting)"
		},
		{
			"forge": "attack(Player arg0, Entity arg1)",
			"fabric": "attackEntity(PlayerEntity player, Entity target)"
		},
		{
			"forge": "interact(Player arg0, Entity arg1, InteractionHand arg2)",
			"fabric": "interactEntity(PlayerEntity player, Entity entity, Hand hand)"
		},
		{
			"forge": "interactAt(Player arg0, Entity arg1, EntityHitResult arg2, InteractionHand arg3)",
			"fabric": "interactEntityAtLocation(PlayerEntity player, Entity entity, EntityHitResult hitResult, Hand hand)"
		},
		{
			"forge": "handleInventoryMouseClick(int arg0, int arg1, int arg2, ClickType arg3, Player arg4)",
			"fabric": "clickSlot(int syncId, int slotId, int button, SlotActionType actionType, PlayerEntity player)"
		},
		{
			"forge": "handlePlaceRecipe(int arg0, Recipe<?> arg1, boolean arg2)",
			"fabric": "clickRecipe(int syncId, Recipe<?> recipe, boolean craftAll)"
		},
		{
			"forge": "handleInventoryButtonClick(int arg0, int arg1)",
			"fabric": "clickButton(int syncId, int buttonId)"
		},
		{
			"forge": "handleCreativeModeItemAdd(ItemStack arg0, int arg1)",
			"fabric": "clickCreativeStack(ItemStack stack, int slotId)"
		},
		{
			"forge": "handleCreativeModeItemDrop(ItemStack arg0)",
			"fabric": "dropCreativeStack(ItemStack stack)"
		},
		{
			"forge": "releaseUsingItem(Player arg0)",
			"fabric": "stopUsingItem(PlayerEntity player)"
		},
		{
			"forge": "hasExperience()",
			"fabric": "hasExperienceBar()"
		},
		{
			"forge": "hasMissTime()",
			"fabric": "hasLimitedAttackSpeed()"
		},
		{
			"forge": "hasInfiniteItems()",
			"fabric": "hasCreativeInventory()"
		},
		{
			"forge": "hasFarPickRange()",
			"fabric": "hasExtendedReach()"
		},
		{
			"forge": "isServerControlledInventory()",
			"fabric": "hasRidingInventory()"
		},
		{
			"forge": "isAlwaysFlying()",
			"fabric": "isFlyingLocked()"
		},
		{
			"forge": "getPreviousPlayerMode()",
			"fabric": "getPreviousGameMode()"
		},
		{
			"forge": "getPlayerMode()",
			"fabric": "getCurrentGameMode()"
		},
		{
			"forge": "isDestroying()",
			"fabric": "isBreakingBlock()"
		},
		{
			"forge": "getDestroyStage()",
			"fabric": "getBlockBreakingProgress()"
		},
		{
			"forge": "handlePickItem(int arg0)",
			"fabric": "pickFromInventory(int slot)"
		}
	]
}