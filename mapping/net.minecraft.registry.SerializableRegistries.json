{
	"title": "net.minecraft.core.RegistrySynchronization",
	"items": [
		{
			"forge": "net.minecraft.core.RegistrySynchronization",
			"fabric": "net.minecraft.registry.SerializableRegistries"
		},
		{
			"forge": "NETWORKABLE_REGISTRIES",
			"fabric": "REGISTRIES"
		},
		{
			"forge": "NETWORKABLE_REGISTRIES",
			"fabric": "REGISTRIES"
		},
		{
			"forge": "NETWORK_CODEC",
			"fabric": "CODEC"
		},
		{
			"forge": "put(com.google.common.collect.ImmutableMap$Builder<ResourceKey<? extends Registry<?>>, RegistrySynchronization$NetworkedRegistryData<?>> arg0, ResourceKey<? extends Registry<E>> arg1, com.mojang.serialization.Codec<E> arg2)",
			"fabric": "add(com.google.common.collect.ImmutableMap$Builder<RegistryKey<? extends Registry<?>>, SerializableRegistries$Info<?>> builder, RegistryKey<? extends Registry<E>> key, com.mojang.serialization.Codec<E> networkCodec)"
		},
		{
			"forge": "put(com.google.common.collect.ImmutableMap$Builder<ResourceKey<? extends Registry<?>>, RegistrySynchronization$NetworkedRegistryData<?>> arg0, ResourceKey<? extends Registry<E>> arg1, com.mojang.serialization.Codec<E> arg2)",
			"fabric": "add(com.google.common.collect.ImmutableMap$Builder<RegistryKey<? extends Registry<?>>, SerializableRegistries$Info<?>> builder, RegistryKey<? extends Registry<E>> key, com.mojang.serialization.Codec<E> networkCodec)"
		},
		{
			"forge": "ownedNetworkableRegistries(RegistryAccess arg0)",
			"fabric": "stream(DynamicRegistryManager dynamicRegistryManager)"
		},
		{
			"forge": "getNetworkCodec(ResourceKey<? extends Registry<E>> arg0)",
			"fabric": "getNetworkCodec(RegistryKey<? extends Registry<E>> registryRef)"
		},
		{
			"forge": "makeNetworkCodec()",
			"fabric": "createCodec()"
		},
		{
			"forge": "captureMap(com.mojang.serialization.codecs.UnboundedMapCodec<K, V> arg0)",
			"fabric": "createDynamicRegistryManagerCodec(com.mojang.serialization.codecs.UnboundedMapCodec<K, V> networkCodec)"
		},
		{
			"forge": "networkedRegistries(LayeredRegistryAccess<RegistryLayer> arg0)",
			"fabric": "streamDynamicEntries(CombinedDynamicRegistries<ServerDynamicRegistryType> combinedRegistries)"
		},
		{
			"forge": "networkSafeRegistries(LayeredRegistryAccess<RegistryLayer> arg0)",
			"fabric": "streamRegistryManagerEntries(CombinedDynamicRegistries<ServerDynamicRegistryType> combinedRegistries)"
		}
	]
}