{
	"title": "net.minecraft.server.packs.resources.ReloadableResourceManager",
	"items": [
		{
			"forge": "net.minecraft.server.packs.resources.ReloadableResourceManager",
			"fabric": "net.minecraft.resource.ReloadableResourceManagerImpl"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "resources",
			"fabric": "activeManager"
		},
		{
			"forge": "listeners",
			"fabric": "reloaders"
		},
		{
			"forge": "type",
			"fabric": "type"
		},
		{
			"forge": "close()",
			"fabric": "registerReloader(ResourceReloader reloader)"
		},
		{
			"forge": "registerReloadListener(PreparableReloadListener arg0)",
			"fabric": "registerReloader(ResourceReloader reloader)"
		},
		{
			"forge": "createReload(Executor arg0, Executor arg1, CompletableFuture<Unit> arg2, List<PackResources> arg3)",
			"fabric": "reload(Executor prepareExecutor, Executor applyExecutor, CompletableFuture<Unit> initialStage, List<ResourcePack> packs)"
		},
		{
			"forge": "getResource(ResourceLocation arg0)",
			"fabric": "getResource(Identifier arg0)"
		},
		{
			"forge": "getNamespaces()",
			"fabric": "getAllNamespaces()"
		},
		{
			"forge": "getResourceStack(ResourceLocation arg0)",
			"fabric": "getAllResources(Identifier arg0)"
		},
		{
			"forge": "listResources(String arg0, Predicate<ResourceLocation> arg1)",
			"fabric": "findResources(String arg0, Predicate<Identifier> arg1)"
		},
		{
			"forge": "listResourceStacks(String arg0, Predicate<ResourceLocation> arg1)",
			"fabric": "findAllResources(String arg0, Predicate<Identifier> arg1)"
		},
		{
			"forge": "listPacks()",
			"fabric": "streamResourcePacks()"
		}
	]
}