{
	"title": "net.minecraft.server.packs.PathPackResources",
	"items": [
		{
			"forge": "net.minecraft.server.packs.PathPackResources",
			"fabric": "net.minecraft.resource.DirectoryResourcePack"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "PATH_JOINER",
			"fabric": "SEPARATOR_JOINER"
		},
		{
			"forge": "root",
			"fabric": "root"
		},
		{
			"forge": "getRootResource(String... arg0)",
			"fabric": "openRoot(String... arg0)"
		},
		{
			"forge": "getRootResource(String... arg0)",
			"fabric": "openRoot(String... arg0)"
		},
		{
			"forge": "validatePath(Path arg0)",
			"fabric": "isValidPath(Path path)"
		},
		{
			"forge": "getResource(PackType arg0, ResourceLocation arg1)",
			"fabric": "open(ResourceType arg0, Identifier arg1)"
		},
		{
			"forge": "getResource(ResourceLocation arg0, Path arg1)",
			"fabric": "open(Identifier id, Path path)"
		},
		{
			"forge": "returnFileIfExists(Path arg0)",
			"fabric": "open(Path path)"
		},
		{
			"forge": "listResources(PackType arg0, String arg1, String arg2, PackResources$ResourceOutput arg3)",
			"fabric": "findResources(ResourceType arg0, String arg1, String arg2, ResourcePack$ResultConsumer arg3)"
		},
		{
			"forge": "listPath(String arg0, Path arg1, List<String> arg2, PackResources$ResourceOutput arg3)",
			"fabric": "findResources(String namespace, Path path, List<String> prefixSegments, ResourcePack$ResultConsumer consumer)"
		},
		{
			"forge": "getNamespaces(PackType arg0)",
			"fabric": "getNamespaces(ResourceType arg0)"
		}
	]
}