{
	"title": "net.minecraft.world.item.BlockItem",
	"items": [
		{
			"forge": "net.minecraft.world.item.BlockItem",
			"fabric": "net.minecraft.item.BlockItem"
		},
		{
			"forge": "BLOCK_ENTITY_TAG",
			"fabric": "BLOCK_ENTITY_TAG_KEY"
		},
		{
			"forge": "BLOCK_ENTITY_TAG",
			"fabric": "BLOCK_ENTITY_TAG_KEY"
		},
		{
			"forge": "BLOCK_STATE_TAG",
			"fabric": "BLOCK_STATE_TAG_KEY"
		},
		{
			"forge": "block",
			"fabric": "block"
		},
		{
			"forge": "useOn(UseOnContext arg0)",
			"fabric": "useOnBlock(ItemUsageContext arg0)"
		},
		{
			"forge": "useOn(UseOnContext arg0)",
			"fabric": "useOnBlock(ItemUsageContext arg0)"
		},
		{
			"forge": "place(BlockPlaceContext arg0)",
			"fabric": "place(ItemPlacementContext context)"
		},
		{
			"forge": "getPlaceSound(BlockState arg0)",
			"fabric": "getPlaceSound(BlockState state)"
		},
		{
			"forge": "updatePlacementContext(BlockPlaceContext arg0)",
			"fabric": "getPlacementContext(ItemPlacementContext context)"
		},
		{
			"forge": "updateCustomBlockEntityTag(BlockPos arg0, Level arg1, Player arg2, ItemStack arg3, BlockState arg4)",
			"fabric": "postPlacement(BlockPos pos, World world, PlayerEntity player, ItemStack stack, BlockState state)"
		},
		{
			"forge": "getPlacementState(BlockPlaceContext arg0)",
			"fabric": "getPlacementState(ItemPlacementContext context)"
		},
		{
			"forge": "updateBlockStateFromTag(BlockPos arg0, Level arg1, ItemStack arg2, BlockState arg3)",
			"fabric": "placeFromNbt(BlockPos pos, World world, ItemStack stack, BlockState state)"
		},
		{
			"forge": "updateState(BlockState arg0, Property<T> arg1, String arg2)",
			"fabric": "with(BlockState state, Property<T> property, String name)"
		},
		{
			"forge": "canPlace(BlockPlaceContext arg0, BlockState arg1)",
			"fabric": "canPlace(ItemPlacementContext context, BlockState state)"
		},
		{
			"forge": "mustSurvive()",
			"fabric": "checkStatePlacement()"
		},
		{
			"forge": "placeBlock(BlockPlaceContext arg0, BlockState arg1)",
			"fabric": "place(ItemPlacementContext context, BlockState state)"
		},
		{
			"forge": "updateCustomBlockEntityTag(Level arg0, Player arg1, BlockPos arg2, ItemStack arg3)",
			"fabric": "writeNbtToBlockEntity(World world, PlayerEntity player, BlockPos pos, ItemStack stack)"
		},
		{
			"forge": "getDescriptionId()",
			"fabric": "getTranslationKey()"
		},
		{
			"forge": "appendHoverText(ItemStack arg0, Level arg1, List<Component> arg2, TooltipFlag arg3)",
			"fabric": "appendTooltip(ItemStack arg0, World arg1, List<Text> arg2, TooltipContext arg3)"
		},
		{
			"forge": "getBlock()",
			"fabric": "getBlock()"
		},
		{
			"forge": "registerBlocks(Map<Block, Item> arg0, Item arg1)",
			"fabric": "appendBlocks(Map<Block, Item> map, Item item)"
		},
		{
			"forge": "canFitInsideContainerItems()",
			"fabric": "canBeNested()"
		},
		{
			"forge": "onDestroyed(ItemEntity arg0)",
			"fabric": "onItemEntityDestroyed(ItemEntity arg0)"
		},
		{
			"forge": "getBlockEntityData(ItemStack arg0)",
			"fabric": "getBlockEntityNbt(ItemStack stack)"
		},
		{
			"forge": "setBlockEntityData(ItemStack arg0, BlockEntityType<?> arg1, CompoundTag arg2)",
			"fabric": "setBlockEntityNbt(ItemStack stack, BlockEntityType<?> blockEntityType, NbtCompound tag)"
		},
		{
			"forge": "requiredFeatures()",
			"fabric": "getRequiredFeatures()"
		}
	]
}