{
	"title": "net.minecraft.world.level.storage.DerivedLevelData",
	"items": [
		{
			"forge": "net.minecraft.world.level.storage.DerivedLevelData",
			"fabric": "net.minecraft.world.level.UnmodifiableLevelProperties"
		},
		{
			"forge": "worldData",
			"fabric": "saveProperties"
		},
		{
			"forge": "worldData",
			"fabric": "saveProperties"
		},
		{
			"forge": "wrapped",
			"fabric": "worldProperties"
		},
		{
			"forge": "getXSpawn()",
			"fabric": "getSpawnX()"
		},
		{
			"forge": "getXSpawn()",
			"fabric": "getSpawnX()"
		},
		{
			"forge": "getYSpawn()",
			"fabric": "getSpawnY()"
		},
		{
			"forge": "getZSpawn()",
			"fabric": "getSpawnZ()"
		},
		{
			"forge": "getSpawnAngle()",
			"fabric": "getSpawnAngle()"
		},
		{
			"forge": "getGameTime()",
			"fabric": "getTime()"
		},
		{
			"forge": "getDayTime()",
			"fabric": "getTimeOfDay()"
		},
		{
			"forge": "getLevelName()",
			"fabric": "getLevelName()"
		},
		{
			"forge": "getClearWeatherTime()",
			"fabric": "getClearWeatherTime()"
		},
		{
			"forge": "setClearWeatherTime(int arg0)",
			"fabric": "setClearWeatherTime(int arg0)"
		},
		{
			"forge": "isThundering()",
			"fabric": "isThundering()"
		},
		{
			"forge": "getThunderTime()",
			"fabric": "getThunderTime()"
		},
		{
			"forge": "isRaining()",
			"fabric": "isRaining()"
		},
		{
			"forge": "getRainTime()",
			"fabric": "getRainTime()"
		},
		{
			"forge": "getGameType()",
			"fabric": "getGameMode()"
		},
		{
			"forge": "setXSpawn(int arg0)",
			"fabric": "setSpawnX(int arg0)"
		},
		{
			"forge": "setYSpawn(int arg0)",
			"fabric": "setSpawnY(int arg0)"
		},
		{
			"forge": "setZSpawn(int arg0)",
			"fabric": "setSpawnZ(int arg0)"
		},
		{
			"forge": "setSpawnAngle(float arg0)",
			"fabric": "setSpawnAngle(float arg0)"
		},
		{
			"forge": "setGameTime(long arg0)",
			"fabric": "setTime(long arg0)"
		},
		{
			"forge": "setDayTime(long arg0)",
			"fabric": "setTimeOfDay(long arg0)"
		},
		{
			"forge": "setSpawn(BlockPos arg0, float arg1)",
			"fabric": "setSpawnPos(BlockPos arg0, float arg1)"
		},
		{
			"forge": "setThundering(boolean arg0)",
			"fabric": "setThundering(boolean arg0)"
		},
		{
			"forge": "setThunderTime(int arg0)",
			"fabric": "setThunderTime(int arg0)"
		},
		{
			"forge": "setRaining(boolean arg0)",
			"fabric": "setRaining(boolean arg0)"
		},
		{
			"forge": "setRainTime(int arg0)",
			"fabric": "setRainTime(int arg0)"
		},
		{
			"forge": "setGameType(GameType arg0)",
			"fabric": "setGameMode(GameMode arg0)"
		},
		{
			"forge": "isHardcore()",
			"fabric": "isHardcore()"
		},
		{
			"forge": "getAllowCommands()",
			"fabric": "areCommandsAllowed()"
		},
		{
			"forge": "isInitialized()",
			"fabric": "isInitialized()"
		},
		{
			"forge": "setInitialized(boolean arg0)",
			"fabric": "setInitialized(boolean arg0)"
		},
		{
			"forge": "getGameRules()",
			"fabric": "getGameRules()"
		},
		{
			"forge": "getWorldBorder()",
			"fabric": "getWorldBorder()"
		},
		{
			"forge": "setWorldBorder(WorldBorder$Settings arg0)",
			"fabric": "setWorldBorder(WorldBorder$Properties arg0)"
		},
		{
			"forge": "getDifficulty()",
			"fabric": "getDifficulty()"
		},
		{
			"forge": "isDifficultyLocked()",
			"fabric": "isDifficultyLocked()"
		},
		{
			"forge": "getScheduledEvents()",
			"fabric": "getScheduledEvents()"
		},
		{
			"forge": "getWanderingTraderSpawnDelay()",
			"fabric": "getWanderingTraderSpawnDelay()"
		},
		{
			"forge": "setWanderingTraderSpawnDelay(int arg0)",
			"fabric": "setWanderingTraderSpawnDelay(int arg0)"
		},
		{
			"forge": "getWanderingTraderSpawnChance()",
			"fabric": "getWanderingTraderSpawnChance()"
		},
		{
			"forge": "setWanderingTraderSpawnChance(int arg0)",
			"fabric": "setWanderingTraderSpawnChance(int arg0)"
		},
		{
			"forge": "getWanderingTraderId()",
			"fabric": "getWanderingTraderId()"
		},
		{
			"forge": "setWanderingTraderId(UUID arg0)",
			"fabric": "setWanderingTraderId(UUID arg0)"
		},
		{
			"forge": "fillCrashReportCategory(CrashReportCategory arg0, LevelHeightAccessor arg1)",
			"fabric": "populateCrashReport(CrashReportSection arg0, HeightLimitView arg1)"
		}
	]
}