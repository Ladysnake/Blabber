{
	"title": "net.minecraft.world.entity.NeutralMob",
	"items": [
		{
			"forge": "net.minecraft.world.entity.NeutralMob",
			"fabric": "net.minecraft.entity.mob.Angerable"
		},
		{
			"forge": "TAG_ANGER_TIME",
			"fabric": "ANGER_TIME_KEY"
		},
		{
			"forge": "TAG_ANGER_TIME",
			"fabric": "ANGER_TIME_KEY"
		},
		{
			"forge": "TAG_ANGRY_AT",
			"fabric": "ANGRY_AT_KEY"
		},
		{
			"forge": "getRemainingPersistentAngerTime()",
			"fabric": "getAngerTime()"
		},
		{
			"forge": "getRemainingPersistentAngerTime()",
			"fabric": "getAngerTime()"
		},
		{
			"forge": "setRemainingPersistentAngerTime(int arg0)",
			"fabric": "setAngerTime(int angerTime)"
		},
		{
			"forge": "getPersistentAngerTarget()",
			"fabric": "getAngryAt()"
		},
		{
			"forge": "setPersistentAngerTarget(UUID arg0)",
			"fabric": "setAngryAt(UUID angryAt)"
		},
		{
			"forge": "startPersistentAngerTimer()",
			"fabric": "chooseRandomAngerTime()"
		},
		{
			"forge": "addPersistentAngerSaveData(CompoundTag arg0)",
			"fabric": "writeAngerToNbt(NbtCompound nbt)"
		},
		{
			"forge": "readPersistentAngerSaveData(Level arg0, CompoundTag arg1)",
			"fabric": "readAngerFromNbt(World world, NbtCompound nbt)"
		},
		{
			"forge": "updatePersistentAnger(ServerLevel arg0, boolean arg1)",
			"fabric": "tickAngerLogic(ServerWorld world, boolean angerPersistent)"
		},
		{
			"forge": "isAngryAt(LivingEntity arg0)",
			"fabric": "shouldAngerAt(LivingEntity entity)"
		},
		{
			"forge": "isAngryAtAllPlayers(Level arg0)",
			"fabric": "isUniversallyAngry(World world)"
		},
		{
			"forge": "isAngry()",
			"fabric": "hasAngerTime()"
		},
		{
			"forge": "playerDied(Player arg0)",
			"fabric": "forgive(PlayerEntity player)"
		},
		{
			"forge": "forgetCurrentTargetAndRefreshUniversalAnger()",
			"fabric": "universallyAnger()"
		},
		{
			"forge": "stopBeingAngry()",
			"fabric": "stopAnger()"
		},
		{
			"forge": "getLastHurtByMob()",
			"fabric": "getAttacker()"
		},
		{
			"forge": "setLastHurtByMob(LivingEntity arg0)",
			"fabric": "setAttacker(LivingEntity attacker)"
		},
		{
			"forge": "setLastHurtByPlayer(Player arg0)",
			"fabric": "setAttacking(PlayerEntity attacking)"
		},
		{
			"forge": "setTarget(LivingEntity arg0)",
			"fabric": "setTarget(LivingEntity target)"
		},
		{
			"forge": "canAttack(LivingEntity arg0)",
			"fabric": "canTarget(LivingEntity target)"
		},
		{
			"forge": "getTarget()",
			"fabric": "getTarget()"
		}
	]
}