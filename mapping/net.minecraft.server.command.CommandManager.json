{
	"title": "net.minecraft.commands.Commands",
	"items": [
		{
			"forge": "net.minecraft.commands.Commands",
			"fabric": "net.minecraft.server.command.CommandManager"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "LEVEL_ALL",
			"fabric": "field_31837"
		},
		{
			"forge": "LEVEL_MODERATORS",
			"fabric": "field_31838"
		},
		{
			"forge": "LEVEL_GAMEMASTERS",
			"fabric": "field_31839"
		},
		{
			"forge": "LEVEL_ADMINS",
			"fabric": "field_31840"
		},
		{
			"forge": "LEVEL_OWNERS",
			"fabric": "field_31841"
		},
		{
			"forge": "dispatcher",
			"fabric": "dispatcher"
		},
		{
			"forge": "mapSource(com.mojang.brigadier.ParseResults<S> arg0, UnaryOperator<S> arg1)",
			"fabric": "withCommandSource(com.mojang.brigadier.ParseResults<S> parseResults, UnaryOperator<S> sourceMapper)"
		},
		{
			"forge": "mapSource(com.mojang.brigadier.ParseResults<S> arg0, UnaryOperator<S> arg1)",
			"fabric": "withCommandSource(com.mojang.brigadier.ParseResults<S> parseResults, UnaryOperator<S> sourceMapper)"
		},
		{
			"forge": "performPrefixedCommand(CommandSourceStack arg0, String arg1)",
			"fabric": "executeWithPrefix(ServerCommandSource source, String command)"
		},
		{
			"forge": "performCommand(com.mojang.brigadier.ParseResults<CommandSourceStack> arg0, String arg1)",
			"fabric": "execute(com.mojang.brigadier.ParseResults<ServerCommandSource> parseResults, String command)"
		},
		{
			"forge": "sendCommands(ServerPlayer arg0)",
			"fabric": "sendCommandTree(ServerPlayerEntity player)"
		},
		{
			"forge": "fillUsableCommands(com.mojang.brigadier.tree.CommandNode<CommandSourceStack> arg0, com.mojang.brigadier.tree.CommandNode<SharedSuggestionProvider> arg1, CommandSourceStack arg2, Map<com.mojang.brigadier.tree.CommandNode<CommandSourceStack>, com.mojang.brigadier.tree.CommandNode<SharedSuggestionProvider>> arg3)",
			"fabric": "makeTreeForSource(com.mojang.brigadier.tree.CommandNode<ServerCommandSource> tree, com.mojang.brigadier.tree.CommandNode<CommandSource> result, ServerCommandSource source, Map<com.mojang.brigadier.tree.CommandNode<ServerCommandSource>, com.mojang.brigadier.tree.CommandNode<CommandSource>> resultNodes)"
		},
		{
			"forge": "literal(String arg0)",
			"fabric": "literal(String literal)"
		},
		{
			"forge": "argument(String arg0, com.mojang.brigadier.arguments.ArgumentType<T> arg1)",
			"fabric": "argument(String name, com.mojang.brigadier.arguments.ArgumentType<T> type)"
		},
		{
			"forge": "createValidator(Commands$ParseFunction arg0)",
			"fabric": "getCommandValidator(CommandManager$CommandParser parser)"
		},
		{
			"forge": "getDispatcher()",
			"fabric": "getDispatcher()"
		},
		{
			"forge": "getParseException(com.mojang.brigadier.ParseResults<S> arg0)",
			"fabric": "getException(com.mojang.brigadier.ParseResults<S> parse)"
		},
		{
			"forge": "createValidationContext(HolderLookup$Provider arg0)",
			"fabric": "createRegistryAccess(RegistryWrapper$WrapperLookup registryLookup)"
		},
		{
			"forge": "validate()",
			"fabric": "checkMissing()"
		}
	]
}