{
	"title": "net.minecraft.commands.SharedSuggestionProvider",
	"items": [
		{
			"forge": "net.minecraft.commands.SharedSuggestionProvider",
			"fabric": "net.minecraft.command.CommandSource"
		},
		{
			"forge": "getOnlinePlayerNames()",
			"fabric": "getPlayerNames()"
		},
		{
			"forge": "getOnlinePlayerNames()",
			"fabric": "getPlayerNames()"
		},
		{
			"forge": "getCustomTabSugggestions()",
			"fabric": "getChatSuggestions()"
		},
		{
			"forge": "getSelectedEntities()",
			"fabric": "getEntitySuggestions()"
		},
		{
			"forge": "getAllTeams()",
			"fabric": "getTeamNames()"
		},
		{
			"forge": "getAvailableSounds()",
			"fabric": "getSoundIds()"
		},
		{
			"forge": "getRecipeNames()",
			"fabric": "getRecipeIds()"
		},
		{
			"forge": "customSuggestion(com.mojang.brigadier.context.CommandContext<?> arg0)",
			"fabric": "getCompletions(com.mojang.brigadier.context.CommandContext<?> context)"
		},
		{
			"forge": "getRelevantCoordinates()",
			"fabric": "getBlockPositionSuggestions()"
		},
		{
			"forge": "getAbsoluteCoordinates()",
			"fabric": "getPositionSuggestions()"
		},
		{
			"forge": "levels()",
			"fabric": "getWorldKeys()"
		},
		{
			"forge": "registryAccess()",
			"fabric": "getRegistryManager()"
		},
		{
			"forge": "enabledFeatures()",
			"fabric": "getEnabledFeatures()"
		},
		{
			"forge": "suggestRegistryElements(Registry<?> arg0, SharedSuggestionProvider$ElementSuggestionType arg1, com.mojang.brigadier.suggestion.SuggestionsBuilder arg2)",
			"fabric": "suggestIdentifiers(Registry<?> registry, CommandSource$SuggestedIdType suggestedIdType, com.mojang.brigadier.suggestion.SuggestionsBuilder builder)"
		},
		{
			"forge": "suggestRegistryElements(ResourceKey<? extends Registry<?>> arg0, SharedSuggestionProvider$ElementSuggestionType arg1, com.mojang.brigadier.suggestion.SuggestionsBuilder arg2, com.mojang.brigadier.context.CommandContext<?> arg3)",
			"fabric": "listIdSuggestions(RegistryKey<? extends Registry<?>> registryRef, CommandSource$SuggestedIdType suggestedIdType, com.mojang.brigadier.suggestion.SuggestionsBuilder builder, com.mojang.brigadier.context.CommandContext<?> context)"
		},
		{
			"forge": "hasPermission(int arg0)",
			"fabric": "hasPermissionLevel(int level)"
		},
		{
			"forge": "filterResources(Iterable<T> arg0, String arg1, Function<T, ResourceLocation> arg2, Consumer<T> arg3)",
			"fabric": "forEachMatching(Iterable<T> candidates, String remaining, Function<T, Identifier> identifier, Consumer<T> action)"
		},
		{
			"forge": "filterResources(Iterable<T> arg0, String arg1, String arg2, Function<T, ResourceLocation> arg3, Consumer<T> arg4)",
			"fabric": "forEachMatching(Iterable<T> candidates, String remaining, String prefix, Function<T, Identifier> identifier, Consumer<T> action)"
		},
		{
			"forge": "suggestResource(Iterable<ResourceLocation> arg0, com.mojang.brigadier.suggestion.SuggestionsBuilder arg1, String arg2)",
			"fabric": "suggestIdentifiers(Iterable<Identifier> candidates, com.mojang.brigadier.suggestion.SuggestionsBuilder builder, String prefix)"
		},
		{
			"forge": "suggestResource(Stream<ResourceLocation> arg0, com.mojang.brigadier.suggestion.SuggestionsBuilder arg1, String arg2)",
			"fabric": "suggestIdentifiers(Stream<Identifier> candidates, com.mojang.brigadier.suggestion.SuggestionsBuilder builder, String prefix)"
		},
		{
			"forge": "suggestResource(Iterable<ResourceLocation> arg0, com.mojang.brigadier.suggestion.SuggestionsBuilder arg1)",
			"fabric": "suggestIdentifiers(Iterable<Identifier> candidates, com.mojang.brigadier.suggestion.SuggestionsBuilder builder)"
		},
		{
			"forge": "suggestResource(Iterable<T> arg0, com.mojang.brigadier.suggestion.SuggestionsBuilder arg1, Function<T, ResourceLocation> arg2, Function<T, com.mojang.brigadier.Message> arg3)",
			"fabric": "suggestFromIdentifier(Iterable<T> candidates, com.mojang.brigadier.suggestion.SuggestionsBuilder builder, Function<T, Identifier> identifier, Function<T, com.mojang.brigadier.Message> tooltip)"
		},
		{
			"forge": "suggestResource(Stream<ResourceLocation> arg0, com.mojang.brigadier.suggestion.SuggestionsBuilder arg1)",
			"fabric": "suggestIdentifiers(Stream<Identifier> candidates, com.mojang.brigadier.suggestion.SuggestionsBuilder builder)"
		},
		{
			"forge": "suggestResource(Stream<T> arg0, com.mojang.brigadier.suggestion.SuggestionsBuilder arg1, Function<T, ResourceLocation> arg2, Function<T, com.mojang.brigadier.Message> arg3)",
			"fabric": "suggestFromIdentifier(Stream<T> candidates, com.mojang.brigadier.suggestion.SuggestionsBuilder builder, Function<T, Identifier> identifier, Function<T, com.mojang.brigadier.Message> tooltip)"
		},
		{
			"forge": "suggestCoordinates(String arg0, Collection<SharedSuggestionProvider$TextCoordinates> arg1, com.mojang.brigadier.suggestion.SuggestionsBuilder arg2, Predicate<String> arg3)",
			"fabric": "suggestPositions(String remaining, Collection<CommandSource$RelativePosition> candidates, com.mojang.brigadier.suggestion.SuggestionsBuilder builder, Predicate<String> predicate)"
		},
		{
			"forge": "suggest2DCoordinates(String arg0, Collection<SharedSuggestionProvider$TextCoordinates> arg1, com.mojang.brigadier.suggestion.SuggestionsBuilder arg2, Predicate<String> arg3)",
			"fabric": "suggestColumnPositions(String remaining, Collection<CommandSource$RelativePosition> candidates, com.mojang.brigadier.suggestion.SuggestionsBuilder builder, Predicate<String> predicate)"
		},
		{
			"forge": "suggest(Iterable<String> arg0, com.mojang.brigadier.suggestion.SuggestionsBuilder arg1)",
			"fabric": "suggestMatching(Iterable<String> candidates, com.mojang.brigadier.suggestion.SuggestionsBuilder builder)"
		},
		{
			"forge": "suggest(Stream<String> arg0, com.mojang.brigadier.suggestion.SuggestionsBuilder arg1)",
			"fabric": "suggestMatching(Stream<String> candidates, com.mojang.brigadier.suggestion.SuggestionsBuilder builder)"
		},
		{
			"forge": "suggest(String[] arg0, com.mojang.brigadier.suggestion.SuggestionsBuilder arg1)",
			"fabric": "suggestMatching(String[] candidates, com.mojang.brigadier.suggestion.SuggestionsBuilder builder)"
		},
		{
			"forge": "suggest(Iterable<T> arg0, com.mojang.brigadier.suggestion.SuggestionsBuilder arg1, Function<T, String> arg2, Function<T, com.mojang.brigadier.Message> arg3)",
			"fabric": "suggestMatching(Iterable<T> candidates, com.mojang.brigadier.suggestion.SuggestionsBuilder builder, Function<T, String> suggestionText, Function<T, com.mojang.brigadier.Message> tooltip)"
		},
		{
			"forge": "matchesSubStr(String arg0, String arg1)",
			"fabric": "shouldSuggest(String remaining, String candidate)"
		}
	]
}