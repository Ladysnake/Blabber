{
	"title": "net.minecraft.world.level.block.GrowingPlantHeadBlock",
	"items": [
		{
			"forge": "net.minecraft.world.level.block.GrowingPlantHeadBlock",
			"fabric": "net.minecraft.block.AbstractPlantStemBlock"
		},
		{
			"forge": "AGE",
			"fabric": "AGE"
		},
		{
			"forge": "AGE",
			"fabric": "AGE"
		},
		{
			"forge": "MAX_AGE",
			"fabric": "MAX_AGE"
		},
		{
			"forge": "growPerTickProbability",
			"fabric": "growthChance"
		},
		{
			"forge": "getStateForPlacement(LevelAccessor arg0)",
			"fabric": "getRandomGrowthState(WorldAccess arg0)"
		},
		{
			"forge": "getStateForPlacement(LevelAccessor arg0)",
			"fabric": "getRandomGrowthState(WorldAccess arg0)"
		},
		{
			"forge": "isRandomlyTicking(BlockState arg0)",
			"fabric": "hasRandomTicks(BlockState arg0)"
		},
		{
			"forge": "randomTick(BlockState arg0, ServerLevel arg1, BlockPos arg2, RandomSource arg3)",
			"fabric": "randomTick(BlockState arg0, ServerWorld arg1, BlockPos arg2, Random arg3)"
		},
		{
			"forge": "getGrowIntoState(BlockState arg0, RandomSource arg1)",
			"fabric": "age(BlockState state, Random random)"
		},
		{
			"forge": "getMaxAgeState(BlockState arg0)",
			"fabric": "withMaxAge(BlockState state)"
		},
		{
			"forge": "isMaxAge(BlockState arg0)",
			"fabric": "hasMaxAge(BlockState state)"
		},
		{
			"forge": "updateBodyAfterConvertedFromHead(BlockState arg0, BlockState arg1)",
			"fabric": "copyState(BlockState from, BlockState to)"
		},
		{
			"forge": "updateShape(BlockState arg0, Direction arg1, BlockState arg2, LevelAccessor arg3, BlockPos arg4, BlockPos arg5)",
			"fabric": "getStateForNeighborUpdate(BlockState arg0, Direction arg1, BlockState arg2, WorldAccess arg3, BlockPos arg4, BlockPos arg5)"
		},
		{
			"forge": "createBlockStateDefinition(StateDefinition$Builder<Block, BlockState> arg0)",
			"fabric": "appendProperties(StateManager$Builder<Block, BlockState> arg0)"
		},
		{
			"forge": "isValidBonemealTarget(LevelReader arg0, BlockPos arg1, BlockState arg2, boolean arg3)",
			"fabric": "isFertilizable(WorldView arg0, BlockPos arg1, BlockState arg2, boolean arg3)"
		},
		{
			"forge": "isBonemealSuccess(Level arg0, RandomSource arg1, BlockPos arg2, BlockState arg3)",
			"fabric": "canGrow(World arg0, Random arg1, BlockPos arg2, BlockState arg3)"
		},
		{
			"forge": "performBonemeal(ServerLevel arg0, RandomSource arg1, BlockPos arg2, BlockState arg3)",
			"fabric": "grow(ServerWorld arg0, Random arg1, BlockPos arg2, BlockState arg3)"
		},
		{
			"forge": "getBlocksToGrowWhenBonemealed(RandomSource arg0)",
			"fabric": "getGrowthLength(Random random)"
		},
		{
			"forge": "canGrowInto(BlockState arg0)",
			"fabric": "chooseStemState(BlockState state)"
		},
		{
			"forge": "getHeadBlock()",
			"fabric": "getStem()"
		}
	]
}