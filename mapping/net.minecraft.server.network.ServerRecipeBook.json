{
	"title": "net.minecraft.stats.ServerRecipeBook",
	"items": [
		{
			"forge": "net.minecraft.stats.ServerRecipeBook",
			"fabric": "net.minecraft.server.network.ServerRecipeBook"
		},
		{
			"forge": "RECIPE_BOOK_TAG",
			"fabric": "RECIPE_BOOK_KEY"
		},
		{
			"forge": "RECIPE_BOOK_TAG",
			"fabric": "RECIPE_BOOK_KEY"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "addRecipes(Collection<Recipe<?>> arg0, ServerPlayer arg1)",
			"fabric": "unlockRecipes(Collection<Recipe<?>> recipes, ServerPlayerEntity player)"
		},
		{
			"forge": "addRecipes(Collection<Recipe<?>> arg0, ServerPlayer arg1)",
			"fabric": "unlockRecipes(Collection<Recipe<?>> recipes, ServerPlayerEntity player)"
		},
		{
			"forge": "removeRecipes(Collection<Recipe<?>> arg0, ServerPlayer arg1)",
			"fabric": "lockRecipes(Collection<Recipe<?>> recipes, ServerPlayerEntity player)"
		},
		{
			"forge": "sendRecipes(ClientboundRecipePacket$State arg0, ServerPlayer arg1, List<ResourceLocation> arg2)",
			"fabric": "sendUnlockRecipesPacket(UnlockRecipesS2CPacket$Action action, ServerPlayerEntity player, List<Identifier> recipeIds)"
		},
		{
			"forge": "toNbt()",
			"fabric": "toNbt()"
		},
		{
			"forge": "fromNbt(CompoundTag arg0, RecipeManager arg1)",
			"fabric": "readNbt(NbtCompound nbt, RecipeManager recipeManager)"
		},
		{
			"forge": "loadRecipes(ListTag arg0, Consumer<Recipe<?>> arg1, RecipeManager arg2)",
			"fabric": "handleList(NbtList list, Consumer<Recipe<?>> handler, RecipeManager recipeManager)"
		},
		{
			"forge": "sendInitialRecipeBook(ServerPlayer arg0)",
			"fabric": "sendInitRecipesPacket(ServerPlayerEntity player)"
		}
	]
}