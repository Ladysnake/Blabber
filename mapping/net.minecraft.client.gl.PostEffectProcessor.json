{
	"title": "net.minecraft.client.renderer.PostChain",
	"items": [
		{
			"forge": "net.minecraft.client.renderer.PostChain",
			"fabric": "net.minecraft.client.gl.PostEffectProcessor"
		},
		{
			"forge": "MAIN_RENDER_TARGET",
			"fabric": "MAIN_TARGET_NAME"
		},
		{
			"forge": "MAIN_RENDER_TARGET",
			"fabric": "MAIN_TARGET_NAME"
		},
		{
			"forge": "screenTarget",
			"fabric": "mainTarget"
		},
		{
			"forge": "resourceManager",
			"fabric": "resourceManager"
		},
		{
			"forge": "name",
			"fabric": "name"
		},
		{
			"forge": "passes",
			"fabric": "passes"
		},
		{
			"forge": "customRenderTargets",
			"fabric": "targetsByName"
		},
		{
			"forge": "fullSizedTargets",
			"fabric": "defaultSizedTargets"
		},
		{
			"forge": "shaderOrthoMatrix",
			"fabric": "projectionMatrix"
		},
		{
			"forge": "screenWidth",
			"fabric": "width"
		},
		{
			"forge": "screenHeight",
			"fabric": "height"
		},
		{
			"forge": "time",
			"fabric": "time"
		},
		{
			"forge": "lastStamp",
			"fabric": "lastTickDelta"
		},
		{
			"forge": "load(TextureManager arg0, ResourceLocation arg1)",
			"fabric": "parseEffect(TextureManager textureManager, Identifier id)"
		},
		{
			"forge": "load(TextureManager arg0, ResourceLocation arg1)",
			"fabric": "parseEffect(TextureManager textureManager, Identifier id)"
		},
		{
			"forge": "parseTargetNode(com.google.gson.JsonElement arg0)",
			"fabric": "parseTarget(com.google.gson.JsonElement jsonTarget)"
		},
		{
			"forge": "parsePassNode(TextureManager arg0, com.google.gson.JsonElement arg1)",
			"fabric": "parsePass(TextureManager textureManager, com.google.gson.JsonElement jsonPass)"
		},
		{
			"forge": "parseUniformNode(com.google.gson.JsonElement arg0)",
			"fabric": "parseUniform(com.google.gson.JsonElement jsonUniform)"
		},
		{
			"forge": "getTempTarget(String arg0)",
			"fabric": "getSecondaryTarget(String name)"
		},
		{
			"forge": "addTempTarget(String arg0, int arg1, int arg2)",
			"fabric": "addTarget(String name, int width, int height)"
		},
		{
			"forge": "addPass(String arg0, RenderTarget arg1, RenderTarget arg2)",
			"fabric": "addPass(String programName, Framebuffer source, Framebuffer dest)"
		},
		{
			"forge": "updateOrthoMatrix()",
			"fabric": "setupProjectionMatrix()"
		},
		{
			"forge": "resize(int arg0, int arg1)",
			"fabric": "setupDimensions(int targetsWidth, int targetsHeight)"
		},
		{
			"forge": "process(float arg0)",
			"fabric": "render(float tickDelta)"
		},
		{
			"forge": "getName()",
			"fabric": "getName()"
		},
		{
			"forge": "getRenderTarget(String arg0)",
			"fabric": "getTarget(String name)"
		}
	]
}