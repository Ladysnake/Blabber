{
	"title": "net.minecraft.world.level.block.state.properties.Property",
	"items": [
		{
			"forge": "net.minecraft.world.level.block.state.properties.Property",
			"fabric": "net.minecraft.state.property.Property"
		},
		{
			"forge": "clazz",
			"fabric": "type"
		},
		{
			"forge": "clazz",
			"fabric": "type"
		},
		{
			"forge": "name",
			"fabric": "name"
		},
		{
			"forge": "hashCode",
			"fabric": "hashCodeCache"
		},
		{
			"forge": "codec",
			"fabric": "codec"
		},
		{
			"forge": "valueCodec",
			"fabric": "valueCodec"
		},
		{
			"forge": "value(T arg0)",
			"fabric": "createValue(T value)"
		},
		{
			"forge": "value(T arg0)",
			"fabric": "createValue(T value)"
		},
		{
			"forge": "value(StateHolder<?, ?> arg0)",
			"fabric": "createValue(State<?, ?> state)"
		},
		{
			"forge": "getAllValues()",
			"fabric": "stream()"
		},
		{
			"forge": "codec()",
			"fabric": "getCodec()"
		},
		{
			"forge": "valueCodec()",
			"fabric": "getValueCodec()"
		},
		{
			"forge": "getName()",
			"fabric": "getName()"
		},
		{
			"forge": "getValueClass()",
			"fabric": "getType()"
		},
		{
			"forge": "getPossibleValues()",
			"fabric": "getValues()"
		},
		{
			"forge": "getName(T arg0)",
			"fabric": "name(T value)"
		},
		{
			"forge": "getValue(String arg0)",
			"fabric": "parse(String name)"
		},
		{
			"forge": "generateHashCode()",
			"fabric": "computeHashCode()"
		},
		{
			"forge": "parseValue(com.mojang.serialization.DynamicOps<U> arg0, S arg1, U arg2)",
			"fabric": "parse(com.mojang.serialization.DynamicOps<U> ops, S state, U input)"
		}
	]
}