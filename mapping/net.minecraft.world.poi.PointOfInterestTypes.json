{
	"title": "net.minecraft.world.entity.ai.village.poi.PoiTypes",
	"items": [
		{
			"forge": "net.minecraft.world.entity.ai.village.poi.PoiTypes",
			"fabric": "net.minecraft.world.poi.PointOfInterestTypes"
		},
		{
			"forge": "ARMORER",
			"fabric": "ARMORER"
		},
		{
			"forge": "ARMORER",
			"fabric": "ARMORER"
		},
		{
			"forge": "BUTCHER",
			"fabric": "BUTCHER"
		},
		{
			"forge": "CARTOGRAPHER",
			"fabric": "CARTOGRAPHER"
		},
		{
			"forge": "CLERIC",
			"fabric": "CLERIC"
		},
		{
			"forge": "FARMER",
			"fabric": "FARMER"
		},
		{
			"forge": "FISHERMAN",
			"fabric": "FISHERMAN"
		},
		{
			"forge": "FLETCHER",
			"fabric": "FLETCHER"
		},
		{
			"forge": "LEATHERWORKER",
			"fabric": "LEATHERWORKER"
		},
		{
			"forge": "LIBRARIAN",
			"fabric": "LIBRARIAN"
		},
		{
			"forge": "MASON",
			"fabric": "MASON"
		},
		{
			"forge": "SHEPHERD",
			"fabric": "SHEPHERD"
		},
		{
			"forge": "TOOLSMITH",
			"fabric": "TOOLSMITH"
		},
		{
			"forge": "WEAPONSMITH",
			"fabric": "WEAPONSMITH"
		},
		{
			"forge": "HOME",
			"fabric": "HOME"
		},
		{
			"forge": "MEETING",
			"fabric": "MEETING"
		},
		{
			"forge": "BEEHIVE",
			"fabric": "BEEHIVE"
		},
		{
			"forge": "BEE_NEST",
			"fabric": "BEE_NEST"
		},
		{
			"forge": "NETHER_PORTAL",
			"fabric": "NETHER_PORTAL"
		},
		{
			"forge": "LODESTONE",
			"fabric": "LODESTONE"
		},
		{
			"forge": "LIGHTNING_ROD",
			"fabric": "LIGHTNING_ROD"
		},
		{
			"forge": "BEDS",
			"fabric": "BED_HEADS"
		},
		{
			"forge": "CAULDRONS",
			"fabric": "CAULDRONS"
		},
		{
			"forge": "TYPE_BY_STATE",
			"fabric": "POI_STATES_TO_TYPE"
		},
		{
			"forge": "getBlockStates(Block arg0)",
			"fabric": "getStatesOfBlock(Block block)"
		},
		{
			"forge": "getBlockStates(Block arg0)",
			"fabric": "getStatesOfBlock(Block block)"
		},
		{
			"forge": "createKey(String arg0)",
			"fabric": "of(String id)"
		},
		{
			"forge": "register(Registry<PoiType> arg0, ResourceKey<PoiType> arg1, Set<BlockState> arg2, int arg3, int arg4)",
			"fabric": "register(Registry<PointOfInterestType> registry, RegistryKey<PointOfInterestType> key, Set<BlockState> states, int ticketCount, int searchDistance)"
		},
		{
			"forge": "registerBlockStates(Holder<PoiType> arg0, Set<BlockState> arg1)",
			"fabric": "registerStates(RegistryEntry<PointOfInterestType> poiTypeEntry, Set<BlockState> states)"
		},
		{
			"forge": "forState(BlockState arg0)",
			"fabric": "getTypeForState(BlockState state)"
		},
		{
			"forge": "hasPoi(BlockState arg0)",
			"fabric": "isPointOfInterest(BlockState state)"
		},
		{
			"forge": "bootstrap(Registry<PoiType> arg0)",
			"fabric": "registerAndGetDefault(Registry<PointOfInterestType> registry)"
		}
	]
}