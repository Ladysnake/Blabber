{
	"title": "net.minecraft.client.renderer.texture.TextureManager",
	"items": [
		{
			"forge": "net.minecraft.client.renderer.texture.TextureManager",
			"fabric": "net.minecraft.client.texture.TextureManager"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "INTENTIONAL_MISSING_TEXTURE",
			"fabric": "MISSING_IDENTIFIER"
		},
		{
			"forge": "byPath",
			"fabric": "textures"
		},
		{
			"forge": "tickableTextures",
			"fabric": "tickListeners"
		},
		{
			"forge": "prefixRegister",
			"fabric": "dynamicIdCounters"
		},
		{
			"forge": "resourceManager",
			"fabric": "resourceContainer"
		},
		{
			"forge": "bindForSetup(ResourceLocation arg0)",
			"fabric": "bindTexture(Identifier id)"
		},
		{
			"forge": "bindForSetup(ResourceLocation arg0)",
			"fabric": "bindTexture(Identifier id)"
		},
		{
			"forge": "_bind(ResourceLocation arg0)",
			"fabric": "bindTextureInner(Identifier id)"
		},
		{
			"forge": "register(ResourceLocation arg0, AbstractTexture arg1)",
			"fabric": "registerTexture(Identifier id, AbstractTexture texture)"
		},
		{
			"forge": "safeClose(ResourceLocation arg0, AbstractTexture arg1)",
			"fabric": "closeTexture(Identifier id, AbstractTexture texture)"
		},
		{
			"forge": "loadTexture(ResourceLocation arg0, AbstractTexture arg1)",
			"fabric": "loadTexture(Identifier id, AbstractTexture texture)"
		},
		{
			"forge": "getTexture(ResourceLocation arg0)",
			"fabric": "getTexture(Identifier id)"
		},
		{
			"forge": "getTexture(ResourceLocation arg0, AbstractTexture arg1)",
			"fabric": "getOrDefault(Identifier id, AbstractTexture fallback)"
		},
		{
			"forge": "register(String arg0, DynamicTexture arg1)",
			"fabric": "registerDynamicTexture(String prefix, NativeImageBackedTexture texture)"
		},
		{
			"forge": "preload(ResourceLocation arg0, Executor arg1)",
			"fabric": "loadTextureAsync(Identifier id, Executor executor)"
		},
		{
			"forge": "execute(Runnable arg0)",
			"fabric": "runOnRenderThread(Runnable runnable)"
		},
		{
			"forge": "tick()",
			"fabric": "tick()"
		},
		{
			"forge": "release(ResourceLocation arg0)",
			"fabric": "destroyTexture(Identifier id)"
		},
		{
			"forge": "reload(PreparableReloadListener$PreparationBarrier arg0, ResourceManager arg1, ProfilerFiller arg2, ProfilerFiller arg3, Executor arg4, Executor arg5)",
			"fabric": "reload(ResourceReloader$Synchronizer arg0, ResourceManager arg1, Profiler arg2, Profiler arg3, Executor arg4, Executor arg5)"
		},
		{
			"forge": "dumpAllSheets(Path arg0)",
			"fabric": "dumpDynamicTextures(Path path)"
		},
		{
			"forge": "_dumpAllSheets(Path arg0)",
			"fabric": "dumpDynamicTexturesInternal(Path path)"
		}
	]
}