{
	"title": "net.minecraft.world.level.levelgen.structure.StructurePiece",
	"items": [
		{
			"forge": "net.minecraft.world.level.levelgen.structure.StructurePiece",
			"fabric": "net.minecraft.structure.StructurePiece"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "CAVE_AIR",
			"fabric": "AIR"
		},
		{
			"forge": "boundingBox",
			"fabric": "boundingBox"
		},
		{
			"forge": "orientation",
			"fabric": "facing"
		},
		{
			"forge": "mirror",
			"fabric": "mirror"
		},
		{
			"forge": "rotation",
			"fabric": "rotation"
		},
		{
			"forge": "genDepth",
			"fabric": "chainLength"
		},
		{
			"forge": "type",
			"fabric": "type"
		},
		{
			"forge": "SHAPE_CHECK_BLOCKS",
			"fabric": "BLOCKS_NEEDING_POST_PROCESSING"
		},
		{
			"forge": "makeBoundingBox(int arg0, int arg1, int arg2, Direction arg3, int arg4, int arg5, int arg6)",
			"fabric": "createBox(int x, int y, int z, Direction orientation, int width, int height, int depth)"
		},
		{
			"forge": "makeBoundingBox(int arg0, int arg1, int arg2, Direction arg3, int arg4, int arg5, int arg6)",
			"fabric": "createBox(int x, int y, int z, Direction orientation, int width, int height, int depth)"
		},
		{
			"forge": "getRandomHorizontalDirection(RandomSource arg0)",
			"fabric": "getRandomHorizontalDirection(Random random)"
		},
		{
			"forge": "createTag(StructurePieceSerializationContext arg0)",
			"fabric": "toNbt(StructureContext context)"
		},
		{
			"forge": "addAdditionalSaveData(StructurePieceSerializationContext arg0, CompoundTag arg1)",
			"fabric": "writeNbt(StructureContext context, NbtCompound nbt)"
		},
		{
			"forge": "addChildren(StructurePiece arg0, StructurePieceAccessor arg1, RandomSource arg2)",
			"fabric": "fillOpenings(StructurePiece start, StructurePiecesHolder holder, Random random)"
		},
		{
			"forge": "postProcess(WorldGenLevel arg0, StructureManager arg1, ChunkGenerator arg2, RandomSource arg3, BoundingBox arg4, ChunkPos arg5, BlockPos arg6)",
			"fabric": "generate(StructureWorldAccess world, StructureAccessor structureAccessor, ChunkGenerator chunkGenerator, Random random, BlockBox chunkBox, ChunkPos chunkPos, BlockPos pivot)"
		},
		{
			"forge": "getBoundingBox()",
			"fabric": "getBoundingBox()"
		},
		{
			"forge": "getGenDepth()",
			"fabric": "getChainLength()"
		},
		{
			"forge": "setGenDepth(int arg0)",
			"fabric": "setChainLength(int chainLength)"
		},
		{
			"forge": "isCloseToChunk(ChunkPos arg0, int arg1)",
			"fabric": "intersectsChunk(ChunkPos pos, int offset)"
		},
		{
			"forge": "getLocatorPosition()",
			"fabric": "getCenter()"
		},
		{
			"forge": "getWorldPos(int arg0, int arg1, int arg2)",
			"fabric": "offsetPos(int x, int y, int z)"
		},
		{
			"forge": "getWorldX(int arg0, int arg1)",
			"fabric": "applyXTransform(int x, int z)"
		},
		{
			"forge": "getWorldY(int arg0)",
			"fabric": "applyYTransform(int y)"
		},
		{
			"forge": "getWorldZ(int arg0, int arg1)",
			"fabric": "applyZTransform(int x, int z)"
		},
		{
			"forge": "placeBlock(WorldGenLevel arg0, BlockState arg1, int arg2, int arg3, int arg4, BoundingBox arg5)",
			"fabric": "addBlock(StructureWorldAccess world, BlockState block, int x, int y, int z, BlockBox box)"
		},
		{
			"forge": "canBeReplaced(LevelReader arg0, int arg1, int arg2, int arg3, BoundingBox arg4)",
			"fabric": "canAddBlock(WorldView world, int x, int y, int z, BlockBox box)"
		},
		{
			"forge": "getBlock(BlockGetter arg0, int arg1, int arg2, int arg3, BoundingBox arg4)",
			"fabric": "getBlockAt(BlockView world, int x, int y, int z, BlockBox box)"
		},
		{
			"forge": "isInterior(LevelReader arg0, int arg1, int arg2, int arg3, BoundingBox arg4)",
			"fabric": "isUnderSeaLevel(WorldView world, int x, int z, int y, BlockBox box)"
		},
		{
			"forge": "generateAirBox(WorldGenLevel arg0, BoundingBox arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7)",
			"fabric": "fill(StructureWorldAccess world, BlockBox bounds, int minX, int minY, int minZ, int maxX, int maxY, int maxZ)"
		},
		{
			"forge": "generateBox(WorldGenLevel arg0, BoundingBox arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, BlockState arg8, BlockState arg9, boolean arg10)",
			"fabric": "fillWithOutline(StructureWorldAccess world, BlockBox box, int minX, int minY, int minZ, int maxX, int maxY, int maxZ, BlockState outline, BlockState inside, boolean cantReplaceAir)"
		},
		{
			"forge": "generateBox(WorldGenLevel arg0, BoundingBox arg1, BoundingBox arg2, BlockState arg3, BlockState arg4, boolean arg5)",
			"fabric": "fillWithOutline(StructureWorldAccess world, BlockBox box, BlockBox fillBox, BlockState outline, BlockState inside, boolean cantReplaceAir)"
		},
		{
			"forge": "generateBox(WorldGenLevel arg0, BoundingBox arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, boolean arg8, RandomSource arg9, StructurePiece$BlockSelector arg10)",
			"fabric": "fillWithOutline(StructureWorldAccess world, BlockBox box, int minX, int minY, int minZ, int maxX, int maxY, int maxZ, boolean cantReplaceAir, Random random, StructurePiece$BlockRandomizer randomizer)"
		},
		{
			"forge": "generateBox(WorldGenLevel arg0, BoundingBox arg1, BoundingBox arg2, boolean arg3, RandomSource arg4, StructurePiece$BlockSelector arg5)",
			"fabric": "fillWithOutline(StructureWorldAccess world, BlockBox box, BlockBox fillBox, boolean cantReplaceAir, Random random, StructurePiece$BlockRandomizer randomizer)"
		},
		{
			"forge": "generateMaybeBox(WorldGenLevel arg0, BoundingBox arg1, RandomSource arg2, float arg3, int arg4, int arg5, int arg6, int arg7, int arg8, int arg9, BlockState arg10, BlockState arg11, boolean arg12, boolean arg13)",
			"fabric": "fillWithOutlineUnderSeaLevel(StructureWorldAccess world, BlockBox box, Random random, float blockChance, int minX, int minY, int minZ, int maxX, int maxY, int maxZ, BlockState outline, BlockState inside, boolean cantReplaceAir, boolean stayBelowSeaLevel)"
		},
		{
			"forge": "maybeGenerateBlock(WorldGenLevel arg0, BoundingBox arg1, RandomSource arg2, float arg3, int arg4, int arg5, int arg6, BlockState arg7)",
			"fabric": "addBlockWithRandomThreshold(StructureWorldAccess world, BlockBox bounds, Random random, float threshold, int x, int y, int z, BlockState state)"
		},
		{
			"forge": "generateUpperHalfSphere(WorldGenLevel arg0, BoundingBox arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7, BlockState arg8, boolean arg9)",
			"fabric": "fillHalfEllipsoid(StructureWorldAccess world, BlockBox bounds, int minX, int minY, int minZ, int maxX, int maxY, int maxZ, BlockState block, boolean cantReplaceAir)"
		},
		{
			"forge": "fillColumnDown(WorldGenLevel arg0, BlockState arg1, int arg2, int arg3, int arg4, BoundingBox arg5)",
			"fabric": "fillDownwards(StructureWorldAccess world, BlockState state, int x, int y, int z, BlockBox box)"
		},
		{
			"forge": "isReplaceableByStructures(BlockState arg0)",
			"fabric": "canReplace(BlockState state)"
		},
		{
			"forge": "createChest(WorldGenLevel arg0, BoundingBox arg1, RandomSource arg2, int arg3, int arg4, int arg5, ResourceLocation arg6)",
			"fabric": "addChest(StructureWorldAccess world, BlockBox boundingBox, Random random, int x, int y, int z, Identifier lootTableId)"
		},
		{
			"forge": "reorient(BlockGetter arg0, BlockPos arg1, BlockState arg2)",
			"fabric": "orientateChest(BlockView world, BlockPos pos, BlockState state)"
		},
		{
			"forge": "createChest(ServerLevelAccessor arg0, BoundingBox arg1, RandomSource arg2, BlockPos arg3, ResourceLocation arg4, BlockState arg5)",
			"fabric": "addChest(ServerWorldAccess world, BlockBox boundingBox, Random random, BlockPos pos, Identifier lootTableId, BlockState block)"
		},
		{
			"forge": "createDispenser(WorldGenLevel arg0, BoundingBox arg1, RandomSource arg2, int arg3, int arg4, int arg5, Direction arg6, ResourceLocation arg7)",
			"fabric": "addDispenser(StructureWorldAccess world, BlockBox boundingBox, Random random, int x, int y, int z, Direction facing, Identifier lootTableId)"
		},
		{
			"forge": "move(int arg0, int arg1, int arg2)",
			"fabric": "translate(int x, int y, int z)"
		},
		{
			"forge": "createBoundingBox(Stream<StructurePiece> arg0)",
			"fabric": "boundingBox(Stream<StructurePiece> pieces)"
		},
		{
			"forge": "findCollisionPiece(List<StructurePiece> arg0, BoundingBox arg1)",
			"fabric": "firstIntersecting(List<StructurePiece> pieces, BlockBox box)"
		},
		{
			"forge": "getOrientation()",
			"fabric": "getFacing()"
		},
		{
			"forge": "setOrientation(Direction arg0)",
			"fabric": "setOrientation(Direction orientation)"
		},
		{
			"forge": "getRotation()",
			"fabric": "getRotation()"
		},
		{
			"forge": "getMirror()",
			"fabric": "getMirror()"
		},
		{
			"forge": "getType()",
			"fabric": "getType()"
		}
	]
}