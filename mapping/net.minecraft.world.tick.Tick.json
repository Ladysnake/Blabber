{
	"title": "net.minecraft.world.ticks.SavedTick",
	"items": [
		{
			"forge": "net.minecraft.world.ticks.SavedTick",
			"fabric": "net.minecraft.world.tick.Tick"
		},
		{
			"forge": "type",
			"fabric": "type"
		},
		{
			"forge": "type",
			"fabric": "type"
		},
		{
			"forge": "pos",
			"fabric": "pos"
		},
		{
			"forge": "delay",
			"fabric": "delay"
		},
		{
			"forge": "priority",
			"fabric": "priority"
		},
		{
			"forge": "TAG_ID",
			"fabric": "TYPE_NBT_KEY"
		},
		{
			"forge": "TAG_X",
			"fabric": "X_NBT_KEY"
		},
		{
			"forge": "TAG_Y",
			"fabric": "Y_NBT_KEY"
		},
		{
			"forge": "TAG_Z",
			"fabric": "Z_NBT_KEY"
		},
		{
			"forge": "TAG_DELAY",
			"fabric": "DELAY_NBT_KEY"
		},
		{
			"forge": "TAG_PRIORITY",
			"fabric": "PRIORITY_NBT_KEY"
		},
		{
			"forge": "UNIQUE_TICK_HASH",
			"fabric": "HASH_STRATEGY"
		},
		{
			"forge": "loadTickList(ListTag arg0, Function<String, Optional<T>> arg1, ChunkPos arg2, Consumer<SavedTick<T>> arg3)",
			"fabric": "tick(NbtList tickList, Function<String, Optional<T>> nameToTypeFunction, ChunkPos pos, Consumer<Tick<T>> tickConsumer)"
		},
		{
			"forge": "loadTickList(ListTag arg0, Function<String, Optional<T>> arg1, ChunkPos arg2, Consumer<SavedTick<T>> arg3)",
			"fabric": "tick(NbtList tickList, Function<String, Optional<T>> nameToTypeFunction, ChunkPos pos, Consumer<Tick<T>> tickConsumer)"
		},
		{
			"forge": "loadTick(CompoundTag arg0, Function<String, Optional<T>> arg1)",
			"fabric": "fromNbt(NbtCompound nbt, Function<String, Optional<T>> nameToType)"
		},
		{
			"forge": "saveTick(String arg0, BlockPos arg1, int arg2, TickPriority arg3)",
			"fabric": "toNbt(String type, BlockPos pos, int delay, TickPriority priority)"
		},
		{
			"forge": "saveTick(ScheduledTick<T> arg0, Function<T, String> arg1, long arg2)",
			"fabric": "orderedTickToNbt(OrderedTick<T> orderedTick, Function<T, String> typeToNameFunction, long delay)"
		},
		{
			"forge": "save(Function<T, String> arg0)",
			"fabric": "toNbt(Function<T, String> typeToNameFunction)"
		},
		{
			"forge": "unpack(long arg0, long arg1)",
			"fabric": "createOrderedTick(long time, long subTickOrder)"
		},
		{
			"forge": "probe(T arg0, BlockPos arg1)",
			"fabric": "create(T type, BlockPos pos)"
		},
		{
			"forge": "type()",
			"fabric": "type()"
		},
		{
			"forge": "pos()",
			"fabric": "pos()"
		},
		{
			"forge": "delay()",
			"fabric": "delay()"
		},
		{
			"forge": "priority()",
			"fabric": "priority()"
		}
	]
}