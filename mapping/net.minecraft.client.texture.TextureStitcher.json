{
	"title": "net.minecraft.client.renderer.texture.Stitcher",
	"items": [
		{
			"forge": "net.minecraft.client.renderer.texture.Stitcher",
			"fabric": "net.minecraft.client.texture.TextureStitcher"
		},
		{
			"forge": "HOLDER_COMPARATOR",
			"fabric": "COMPARATOR"
		},
		{
			"forge": "HOLDER_COMPARATOR",
			"fabric": "COMPARATOR"
		},
		{
			"forge": "mipLevel",
			"fabric": "mipLevel"
		},
		{
			"forge": "texturesToBeStitched",
			"fabric": "holders"
		},
		{
			"forge": "storage",
			"fabric": "slots"
		},
		{
			"forge": "storageX",
			"fabric": "width"
		},
		{
			"forge": "storageY",
			"fabric": "height"
		},
		{
			"forge": "maxWidth",
			"fabric": "maxWidth"
		},
		{
			"forge": "maxHeight",
			"fabric": "maxHeight"
		},
		{
			"forge": "getWidth()",
			"fabric": "getWidth()"
		},
		{
			"forge": "getWidth()",
			"fabric": "getWidth()"
		},
		{
			"forge": "getHeight()",
			"fabric": "getHeight()"
		},
		{
			"forge": "registerSprite(T arg0)",
			"fabric": "add(T info)"
		},
		{
			"forge": "stitch()",
			"fabric": "stitch()"
		},
		{
			"forge": "gatherSprites(Stitcher$SpriteLoader<T> arg0)",
			"fabric": "getStitchedSprites(TextureStitcher$SpriteConsumer<T> consumer)"
		},
		{
			"forge": "smallestFittingMinTexel(int arg0, int arg1)",
			"fabric": "applyMipLevel(int size, int mipLevel)"
		},
		{
			"forge": "addToStorage(Stitcher$Holder<T> arg0)",
			"fabric": "fit(TextureStitcher$Holder<T> holder)"
		},
		{
			"forge": "expand(Stitcher$Holder<T> arg0)",
			"fabric": "growAndFit(TextureStitcher$Holder<T> holder)"
		}
	]
}