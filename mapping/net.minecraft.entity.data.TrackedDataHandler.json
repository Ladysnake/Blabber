{
	"title": "net.minecraft.network.syncher.EntityDataSerializer",
	"items": [
		{
			"forge": "net.minecraft.network.syncher.EntityDataSerializer",
			"fabric": "net.minecraft.entity.data.TrackedDataHandler"
		},
		{
			"forge": "write(FriendlyByteBuf arg0, T arg1)",
			"fabric": "write(PacketByteBuf buf, T value)"
		},
		{
			"forge": "write(FriendlyByteBuf arg0, T arg1)",
			"fabric": "write(PacketByteBuf buf, T value)"
		},
		{
			"forge": "read(FriendlyByteBuf arg0)",
			"fabric": "read(PacketByteBuf buf)"
		},
		{
			"forge": "createAccessor(int arg0)",
			"fabric": "create(int id)"
		},
		{
			"forge": "copy(T arg0)",
			"fabric": "copy(T value)"
		},
		{
			"forge": "simple(FriendlyByteBuf$Writer<T> arg0, FriendlyByteBuf$Reader<T> arg1)",
			"fabric": "of(PacketByteBuf$PacketWriter<T> writer, PacketByteBuf$PacketReader<T> reader)"
		},
		{
			"forge": "optional(FriendlyByteBuf$Writer<T> arg0, FriendlyByteBuf$Reader<T> arg1)",
			"fabric": "ofOptional(PacketByteBuf$PacketWriter<T> writer, PacketByteBuf$PacketReader<T> reader)"
		},
		{
			"forge": "simpleEnum(Class<T> arg0)",
			"fabric": "ofEnum(Class<T> enum_)"
		},
		{
			"forge": "simpleId(IdMap<T> arg0)",
			"fabric": "of(IndexedIterable<T> registry)"
		}
	]
}