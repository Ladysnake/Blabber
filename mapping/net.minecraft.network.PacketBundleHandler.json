{
	"title": "net.minecraft.network.protocol.BundlerInfo",
	"items": [
		{
			"forge": "net.minecraft.network.protocol.BundlerInfo",
			"fabric": "net.minecraft.network.PacketBundleHandler"
		},
		{
			"forge": "BUNDLER_PROVIDER",
			"fabric": "KEY"
		},
		{
			"forge": "BUNDLER_PROVIDER",
			"fabric": "KEY"
		},
		{
			"forge": "BUNDLE_SIZE_LIMIT",
			"fabric": "MAX_PACKETS"
		},
		{
			"forge": "EMPTY",
			"fabric": "NOOP"
		},
		{
			"forge": "createForPacket(Class<P> arg0, Function<Iterable<Packet<T>>, P> arg1, BundleDelimiterPacket<T> arg2)",
			"fabric": "create(Class<P> bundlePacketType, Function<Iterable<Packet<T>>, P> bundleFunction, BundleSplitterPacket<T> splitter)"
		},
		{
			"forge": "createForPacket(Class<P> arg0, Function<Iterable<Packet<T>>, P> arg1, BundleDelimiterPacket<T> arg2)",
			"fabric": "create(Class<P> bundlePacketType, Function<Iterable<Packet<T>>, P> bundleFunction, BundleSplitterPacket<T> splitter)"
		},
		{
			"forge": "unbundlePacket(Packet<?> arg0, Consumer<Packet<?>> arg1)",
			"fabric": "forEachPacket(Packet<?> packet, Consumer<Packet<?>> consumer)"
		},
		{
			"forge": "startPacketBundling(Packet<?> arg0)",
			"fabric": "createBundler(Packet<?> splitter)"
		}
	]
}