{
	"title": "net.minecraft.world.level.block.SculkVeinBlock",
	"items": [
		{
			"forge": "net.minecraft.world.level.block.SculkVeinBlock",
			"fabric": "net.minecraft.block.SculkVeinBlock"
		},
		{
			"forge": "WATERLOGGED",
			"fabric": "WATERLOGGED"
		},
		{
			"forge": "WATERLOGGED",
			"fabric": "WATERLOGGED"
		},
		{
			"forge": "veinSpreader",
			"fabric": "allGrowTypeGrower"
		},
		{
			"forge": "sameSpaceSpreader",
			"fabric": "samePositionOnlyGrower"
		},
		{
			"forge": "getSpreader()",
			"fabric": "getGrower()"
		},
		{
			"forge": "getSpreader()",
			"fabric": "getGrower()"
		},
		{
			"forge": "getSameSpaceSpreader()",
			"fabric": "getSamePositionOnlyGrower()"
		},
		{
			"forge": "regrow(LevelAccessor arg0, BlockPos arg1, BlockState arg2, Collection<Direction> arg3)",
			"fabric": "place(WorldAccess world, BlockPos pos, BlockState state, Collection<Direction> directions)"
		},
		{
			"forge": "onDischarged(LevelAccessor arg0, BlockState arg1, BlockPos arg2, RandomSource arg3)",
			"fabric": "spreadAtSamePosition(WorldAccess arg0, BlockState arg1, BlockPos arg2, Random arg3)"
		},
		{
			"forge": "attemptUseCharge(SculkSpreader$ChargeCursor arg0, LevelAccessor arg1, BlockPos arg2, RandomSource arg3, SculkSpreader arg4, boolean arg5)",
			"fabric": "spread(SculkSpreadManager$Cursor arg0, WorldAccess arg1, BlockPos arg2, Random arg3, SculkSpreadManager arg4, boolean arg5)"
		},
		{
			"forge": "attemptPlaceSculk(SculkSpreader arg0, LevelAccessor arg1, BlockPos arg2, RandomSource arg3)",
			"fabric": "convertToBlock(SculkSpreadManager spreadManager, WorldAccess world, BlockPos pos, Random random)"
		},
		{
			"forge": "hasSubstrateAccess(LevelAccessor arg0, BlockState arg1, BlockPos arg2)",
			"fabric": "veinCoversSculkReplaceable(WorldAccess world, BlockState state, BlockPos pos)"
		},
		{
			"forge": "updateShape(BlockState arg0, Direction arg1, BlockState arg2, LevelAccessor arg3, BlockPos arg4, BlockPos arg5)",
			"fabric": "getStateForNeighborUpdate(BlockState arg0, Direction arg1, BlockState arg2, WorldAccess arg3, BlockPos arg4, BlockPos arg5)"
		},
		{
			"forge": "createBlockStateDefinition(StateDefinition$Builder<Block, BlockState> arg0)",
			"fabric": "appendProperties(StateManager$Builder<Block, BlockState> arg0)"
		},
		{
			"forge": "canBeReplaced(BlockState arg0, BlockPlaceContext arg1)",
			"fabric": "canReplace(BlockState arg0, ItemPlacementContext arg1)"
		},
		{
			"forge": "getFluidState(BlockState arg0)",
			"fabric": "getFluidState(BlockState arg0)"
		}
	]
}