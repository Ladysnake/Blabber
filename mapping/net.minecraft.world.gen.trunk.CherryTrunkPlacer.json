{
	"title": "net.minecraft.world.level.levelgen.feature.trunkplacers.CherryTrunkPlacer",
	"items": [
		{
			"forge": "net.minecraft.world.level.levelgen.feature.trunkplacers.CherryTrunkPlacer",
			"fabric": "net.minecraft.world.gen.trunk.CherryTrunkPlacer"
		},
		{
			"forge": "BRANCH_START_CODEC",
			"fabric": "BRANCH_START_OFFSET_FROM_TOP_CODEC"
		},
		{
			"forge": "BRANCH_START_CODEC",
			"fabric": "BRANCH_START_OFFSET_FROM_TOP_CODEC"
		},
		{
			"forge": "CODEC",
			"fabric": "CODEC"
		},
		{
			"forge": "branchCount",
			"fabric": "branchCount"
		},
		{
			"forge": "branchHorizontalLength",
			"fabric": "branchHorizontalLength"
		},
		{
			"forge": "branchStartOffsetFromTop",
			"fabric": "branchStartOffsetFromTop"
		},
		{
			"forge": "secondBranchStartOffsetFromTop",
			"fabric": "secondBranchStartOffsetFromTop"
		},
		{
			"forge": "branchEndOffsetFromTop",
			"fabric": "branchEndOffsetFromTop"
		},
		{
			"forge": "type()",
			"fabric": "getType()"
		},
		{
			"forge": "type()",
			"fabric": "getType()"
		},
		{
			"forge": "placeTrunk(LevelSimulatedReader arg0, BiConsumer<BlockPos, BlockState> arg1, RandomSource arg2, int arg3, BlockPos arg4, TreeConfiguration arg5)",
			"fabric": "generate(TestableWorld arg0, BiConsumer<BlockPos, BlockState> arg1, Random arg2, int arg3, BlockPos arg4, TreeFeatureConfig arg5)"
		},
		{
			"forge": "generateBranch(LevelSimulatedReader arg0, BiConsumer<BlockPos, BlockState> arg1, RandomSource arg2, int arg3, BlockPos arg4, TreeConfiguration arg5, Function<BlockState, BlockState> arg6, Direction arg7, int arg8, boolean arg9, BlockPos$MutableBlockPos arg10)",
			"fabric": "generateBranch(TestableWorld world, BiConsumer<BlockPos, BlockState> replacer, Random random, int height, BlockPos startPos, TreeFeatureConfig config, Function<BlockState, BlockState> withAxisFunction, Direction direction, int branchStartOffset, boolean branchBelowHeight, BlockPos$Mutable mutablePos)"
		}
	]
}