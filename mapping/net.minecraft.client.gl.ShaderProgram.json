{
	"title": "net.minecraft.client.renderer.ShaderInstance",
	"items": [
		{
			"forge": "net.minecraft.client.renderer.ShaderInstance",
			"fabric": "net.minecraft.client.gl.ShaderProgram"
		},
		{
			"forge": "SHADER_PATH",
			"fabric": "SHADERS_DIRECTORY"
		},
		{
			"forge": "SHADER_PATH",
			"fabric": "SHADERS_DIRECTORY"
		},
		{
			"forge": "SHADER_CORE_PATH",
			"fabric": "CORE_DIRECTORY"
		},
		{
			"forge": "SHADER_INCLUDE_PATH",
			"fabric": "INCLUDE_DIRECTORY"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "DUMMY_UNIFORM",
			"fabric": "DEFAULT_UNIFORM"
		},
		{
			"forge": "ALWAYS_REAPPLY",
			"fabric": "field_32780"
		},
		{
			"forge": "lastAppliedShader",
			"fabric": "activeProgram"
		},
		{
			"forge": "lastProgramId",
			"fabric": "activeProgramGlRef"
		},
		{
			"forge": "samplerMap",
			"fabric": "samplers"
		},
		{
			"forge": "samplerNames",
			"fabric": "samplerNames"
		},
		{
			"forge": "samplerLocations",
			"fabric": "loadedSamplerIds"
		},
		{
			"forge": "uniforms",
			"fabric": "uniforms"
		},
		{
			"forge": "uniformLocations",
			"fabric": "loadedUniformIds"
		},
		{
			"forge": "uniformMap",
			"fabric": "loadedUniforms"
		},
		{
			"forge": "programId",
			"fabric": "glRef"
		},
		{
			"forge": "name",
			"fabric": "name"
		},
		{
			"forge": "dirty",
			"fabric": "dirty"
		},
		{
			"forge": "blend",
			"fabric": "blendState"
		},
		{
			"forge": "attributes",
			"fabric": "loadedAttributeIds"
		},
		{
			"forge": "attributeNames",
			"fabric": "attributeNames"
		},
		{
			"forge": "vertexProgram",
			"fabric": "vertexShader"
		},
		{
			"forge": "fragmentProgram",
			"fabric": "fragmentShader"
		},
		{
			"forge": "vertexFormat",
			"fabric": "format"
		},
		{
			"forge": "MODEL_VIEW_MATRIX",
			"fabric": "modelViewMat"
		},
		{
			"forge": "PROJECTION_MATRIX",
			"fabric": "projectionMat"
		},
		{
			"forge": "INVERSE_VIEW_ROTATION_MATRIX",
			"fabric": "viewRotationMat"
		},
		{
			"forge": "TEXTURE_MATRIX",
			"fabric": "textureMat"
		},
		{
			"forge": "SCREEN_SIZE",
			"fabric": "screenSize"
		},
		{
			"forge": "COLOR_MODULATOR",
			"fabric": "colorModulator"
		},
		{
			"forge": "LIGHT0_DIRECTION",
			"fabric": "light0Direction"
		},
		{
			"forge": "LIGHT1_DIRECTION",
			"fabric": "light1Direction"
		},
		{
			"forge": "GLINT_ALPHA",
			"fabric": "glintAlpha"
		},
		{
			"forge": "FOG_START",
			"fabric": "fogStart"
		},
		{
			"forge": "FOG_END",
			"fabric": "fogEnd"
		},
		{
			"forge": "FOG_COLOR",
			"fabric": "fogColor"
		},
		{
			"forge": "FOG_SHAPE",
			"fabric": "fogShape"
		},
		{
			"forge": "LINE_WIDTH",
			"fabric": "lineWidth"
		},
		{
			"forge": "GAME_TIME",
			"fabric": "gameTime"
		},
		{
			"forge": "CHUNK_OFFSET",
			"fabric": "chunkOffset"
		},
		{
			"forge": "getOrCreate(ResourceProvider arg0, Program$Type arg1, String arg2)",
			"fabric": "loadShader(ResourceFactory factory, ShaderStage$Type type, String name)"
		},
		{
			"forge": "getOrCreate(ResourceProvider arg0, Program$Type arg1, String arg2)",
			"fabric": "loadShader(ResourceFactory factory, ShaderStage$Type type, String name)"
		},
		{
			"forge": "parseBlendNode(com.google.gson.JsonObject arg0)",
			"fabric": "readBlendState(com.google.gson.JsonObject json)"
		},
		{
			"forge": "clear()",
			"fabric": "unbind()"
		},
		{
			"forge": "apply()",
			"fabric": "bind()"
		},
		{
			"forge": "markDirty()",
			"fabric": "markUniformsDirty()"
		},
		{
			"forge": "getUniform(String arg0)",
			"fabric": "getUniform(String name)"
		},
		{
			"forge": "safeGetUniform(String arg0)",
			"fabric": "getUniformOrDefault(String name)"
		},
		{
			"forge": "updateLocations()",
			"fabric": "loadReferences()"
		},
		{
			"forge": "parseSamplerNode(com.google.gson.JsonElement arg0)",
			"fabric": "readSampler(com.google.gson.JsonElement json)"
		},
		{
			"forge": "setSampler(String arg0, Object arg1)",
			"fabric": "addSampler(String name, Object sampler)"
		},
		{
			"forge": "parseUniformNode(com.google.gson.JsonElement arg0)",
			"fabric": "addUniform(com.google.gson.JsonElement json)"
		},
		{
			"forge": "getVertexProgram()",
			"fabric": "getVertexShader()"
		},
		{
			"forge": "getFragmentProgram()",
			"fabric": "getFragmentShader()"
		},
		{
			"forge": "attachToProgram()",
			"fabric": "attachReferencedShaders()"
		},
		{
			"forge": "getVertexFormat()",
			"fabric": "getFormat()"
		},
		{
			"forge": "getName()",
			"fabric": "getName()"
		},
		{
			"forge": "getId()",
			"fabric": "getGlRef()"
		}
	]
}