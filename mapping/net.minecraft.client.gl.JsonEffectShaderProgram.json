{
	"title": "net.minecraft.client.renderer.EffectInstance",
	"items": [
		{
			"forge": "net.minecraft.client.renderer.EffectInstance",
			"fabric": "net.minecraft.client.gl.JsonEffectShaderProgram"
		},
		{
			"forge": "EFFECT_SHADER_PATH",
			"fabric": "PROGRAM_DIRECTORY"
		},
		{
			"forge": "EFFECT_SHADER_PATH",
			"fabric": "PROGRAM_DIRECTORY"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "DUMMY_UNIFORM",
			"fabric": "DEFAULT_UNIFORM"
		},
		{
			"forge": "ALWAYS_REAPPLY",
			"fabric": "field_32683"
		},
		{
			"forge": "lastAppliedEffect",
			"fabric": "activeProgram"
		},
		{
			"forge": "lastProgramId",
			"fabric": "activeProgramGlRef"
		},
		{
			"forge": "samplerMap",
			"fabric": "samplerBinds"
		},
		{
			"forge": "samplerNames",
			"fabric": "samplerNames"
		},
		{
			"forge": "samplerLocations",
			"fabric": "samplerLocations"
		},
		{
			"forge": "uniforms",
			"fabric": "uniformData"
		},
		{
			"forge": "uniformLocations",
			"fabric": "uniformLocations"
		},
		{
			"forge": "uniformMap",
			"fabric": "uniformByName"
		},
		{
			"forge": "programId",
			"fabric": "glRef"
		},
		{
			"forge": "name",
			"fabric": "name"
		},
		{
			"forge": "dirty",
			"fabric": "uniformStateDirty"
		},
		{
			"forge": "blend",
			"fabric": "blendState"
		},
		{
			"forge": "attributes",
			"fabric": "attributeLocations"
		},
		{
			"forge": "attributeNames",
			"fabric": "attributeNames"
		},
		{
			"forge": "vertexProgram",
			"fabric": "vertexShader"
		},
		{
			"forge": "fragmentProgram",
			"fabric": "fragmentShader"
		},
		{
			"forge": "getOrCreate(ResourceManager arg0, Program$Type arg1, String arg2)",
			"fabric": "loadEffect(ResourceManager resourceManager, ShaderStage$Type type, String name)"
		},
		{
			"forge": "getOrCreate(ResourceManager arg0, Program$Type arg1, String arg2)",
			"fabric": "loadEffect(ResourceManager resourceManager, ShaderStage$Type type, String name)"
		},
		{
			"forge": "parseBlendNode(com.google.gson.JsonObject arg0)",
			"fabric": "deserializeBlendState(com.google.gson.JsonObject json)"
		},
		{
			"forge": "clear()",
			"fabric": "disable()"
		},
		{
			"forge": "apply()",
			"fabric": "enable()"
		},
		{
			"forge": "markDirty()",
			"fabric": "markUniformsDirty()"
		},
		{
			"forge": "getUniform(String arg0)",
			"fabric": "getUniformByName(String name)"
		},
		{
			"forge": "safeGetUniform(String arg0)",
			"fabric": "getUniformByNameOrDummy(String name)"
		},
		{
			"forge": "updateLocations()",
			"fabric": "finalizeUniformsAndSamplers()"
		},
		{
			"forge": "parseSamplerNode(com.google.gson.JsonElement arg0)",
			"fabric": "addSampler(com.google.gson.JsonElement json)"
		},
		{
			"forge": "setSampler(String arg0, IntSupplier arg1)",
			"fabric": "bindSampler(String samplerName, IntSupplier arg1)"
		},
		{
			"forge": "parseUniformNode(com.google.gson.JsonElement arg0)",
			"fabric": "addUniform(com.google.gson.JsonElement json)"
		},
		{
			"forge": "getVertexProgram()",
			"fabric": "getVertexShader()"
		},
		{
			"forge": "getFragmentProgram()",
			"fabric": "getFragmentShader()"
		},
		{
			"forge": "attachToProgram()",
			"fabric": "attachReferencedShaders()"
		},
		{
			"forge": "getName()",
			"fabric": "getName()"
		},
		{
			"forge": "getId()",
			"fabric": "getGlRef()"
		}
	]
}