{
	"title": "net.minecraft.client.renderer.block.BlockModelShaper",
	"items": [
		{
			"forge": "net.minecraft.client.renderer.block.BlockModelShaper",
			"fabric": "net.minecraft.client.render.block.BlockModels"
		},
		{
			"forge": "modelByStateCache",
			"fabric": "models"
		},
		{
			"forge": "modelByStateCache",
			"fabric": "models"
		},
		{
			"forge": "modelManager",
			"fabric": "modelManager"
		},
		{
			"forge": "getParticleIcon(BlockState arg0)",
			"fabric": "getModelParticleSprite(BlockState state)"
		},
		{
			"forge": "getParticleIcon(BlockState arg0)",
			"fabric": "getModelParticleSprite(BlockState state)"
		},
		{
			"forge": "getBlockModel(BlockState arg0)",
			"fabric": "getModel(BlockState state)"
		},
		{
			"forge": "getModelManager()",
			"fabric": "getModelManager()"
		},
		{
			"forge": "replaceCache(Map<BlockState, BakedModel> arg0)",
			"fabric": "setModels(Map<BlockState, BakedModel> models)"
		},
		{
			"forge": "stateToModelLocation(BlockState arg0)",
			"fabric": "getModelId(BlockState state)"
		},
		{
			"forge": "stateToModelLocation(ResourceLocation arg0, BlockState arg1)",
			"fabric": "getModelId(Identifier id, BlockState state)"
		},
		{
			"forge": "statePropertiesToString(Map<Property<?>, Comparable<?>> arg0)",
			"fabric": "propertyMapToString(Map<Property<?>, Comparable<?>> map)"
		},
		{
			"forge": "getValue(Property<T> arg0, Comparable<?> arg1)",
			"fabric": "propertyValueToString(Property<T> property, Comparable<?> value)"
		}
	]
}