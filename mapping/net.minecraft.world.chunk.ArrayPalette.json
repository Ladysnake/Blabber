{
	"title": "net.minecraft.world.level.chunk.LinearPalette",
	"items": [
		{
			"forge": "net.minecraft.world.level.chunk.LinearPalette",
			"fabric": "net.minecraft.world.chunk.ArrayPalette"
		},
		{
			"forge": "registry",
			"fabric": "idList"
		},
		{
			"forge": "registry",
			"fabric": "idList"
		},
		{
			"forge": "values",
			"fabric": "array"
		},
		{
			"forge": "resizeHandler",
			"fabric": "listener"
		},
		{
			"forge": "bits",
			"fabric": "indexBits"
		},
		{
			"forge": "size",
			"fabric": "size"
		},
		{
			"forge": "create(int arg0, IdMap<A> arg1, PaletteResize<A> arg2, List<A> arg3)",
			"fabric": "create(int bits, IndexedIterable<A> idList, PaletteResizeListener<A> listener, List<A> list)"
		},
		{
			"forge": "create(int arg0, IdMap<A> arg1, PaletteResize<A> arg2, List<A> arg3)",
			"fabric": "create(int bits, IndexedIterable<A> idList, PaletteResizeListener<A> listener, List<A> list)"
		},
		{
			"forge": "idFor(T arg0)",
			"fabric": "index(T arg0)"
		},
		{
			"forge": "maybeHas(Predicate<T> arg0)",
			"fabric": "hasAny(Predicate<T> arg0)"
		},
		{
			"forge": "valueFor(int arg0)",
			"fabric": "get(int arg0)"
		},
		{
			"forge": "read(FriendlyByteBuf arg0)",
			"fabric": "readPacket(PacketByteBuf arg0)"
		},
		{
			"forge": "write(FriendlyByteBuf arg0)",
			"fabric": "writePacket(PacketByteBuf arg0)"
		},
		{
			"forge": "getSerializedSize()",
			"fabric": "getPacketSize()"
		},
		{
			"forge": "getSize()",
			"fabric": "getSize()"
		},
		{
			"forge": "copy()",
			"fabric": "copy()"
		}
	]
}