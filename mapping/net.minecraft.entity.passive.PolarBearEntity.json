{
	"title": "net.minecraft.world.entity.animal.PolarBear",
	"items": [
		{
			"forge": "net.minecraft.world.entity.animal.PolarBear",
			"fabric": "net.minecraft.entity.passive.PolarBearEntity"
		},
		{
			"forge": "DATA_STANDING_ID",
			"fabric": "WARNING"
		},
		{
			"forge": "DATA_STANDING_ID",
			"fabric": "WARNING"
		},
		{
			"forge": "STAND_ANIMATION_TICKS",
			"fabric": "field_30352"
		},
		{
			"forge": "clientSideStandAnimationO",
			"fabric": "lastWarningAnimationProgress"
		},
		{
			"forge": "clientSideStandAnimation",
			"fabric": "warningAnimationProgress"
		},
		{
			"forge": "warningSoundTicks",
			"fabric": "warningSoundCooldown"
		},
		{
			"forge": "PERSISTENT_ANGER_TIME",
			"fabric": "ANGER_TIME_RANGE"
		},
		{
			"forge": "remainingPersistentAngerTime",
			"fabric": "angerTime"
		},
		{
			"forge": "persistentAngerTarget",
			"fabric": "angryAt"
		},
		{
			"forge": "getBreedOffspring(ServerLevel arg0, AgeableMob arg1)",
			"fabric": "createChild(ServerWorld arg0, PassiveEntity arg1)"
		},
		{
			"forge": "getBreedOffspring(ServerLevel arg0, AgeableMob arg1)",
			"fabric": "createChild(ServerWorld arg0, PassiveEntity arg1)"
		},
		{
			"forge": "isFood(ItemStack arg0)",
			"fabric": "isBreedingItem(ItemStack arg0)"
		},
		{
			"forge": "registerGoals()",
			"fabric": "initGoals()"
		},
		{
			"forge": "createAttributes()",
			"fabric": "createPolarBearAttributes()"
		},
		{
			"forge": "checkPolarBearSpawnRules(EntityType<PolarBear> arg0, LevelAccessor arg1, MobSpawnType arg2, BlockPos arg3, RandomSource arg4)",
			"fabric": "canSpawn(EntityType<PolarBearEntity> type, WorldAccess world, SpawnReason spawnReason, BlockPos pos, Random random)"
		},
		{
			"forge": "readAdditionalSaveData(CompoundTag arg0)",
			"fabric": "readCustomDataFromNbt(NbtCompound arg0)"
		},
		{
			"forge": "addAdditionalSaveData(CompoundTag arg0)",
			"fabric": "writeCustomDataToNbt(NbtCompound arg0)"
		},
		{
			"forge": "startPersistentAngerTimer()",
			"fabric": "chooseRandomAngerTime()"
		},
		{
			"forge": "setRemainingPersistentAngerTime(int arg0)",
			"fabric": "setAngerTime(int arg0)"
		},
		{
			"forge": "getRemainingPersistentAngerTime()",
			"fabric": "getAngerTime()"
		},
		{
			"forge": "setPersistentAngerTarget(UUID arg0)",
			"fabric": "setAngryAt(UUID arg0)"
		},
		{
			"forge": "getPersistentAngerTarget()",
			"fabric": "getAngryAt()"
		},
		{
			"forge": "getAmbientSound()",
			"fabric": "getAmbientSound()"
		},
		{
			"forge": "getHurtSound(DamageSource arg0)",
			"fabric": "getHurtSound(DamageSource arg0)"
		},
		{
			"forge": "getDeathSound()",
			"fabric": "getDeathSound()"
		},
		{
			"forge": "playStepSound(BlockPos arg0, BlockState arg1)",
			"fabric": "playStepSound(BlockPos arg0, BlockState arg1)"
		},
		{
			"forge": "playWarningSound()",
			"fabric": "playWarningSound()"
		},
		{
			"forge": "defineSynchedData()",
			"fabric": "initDataTracker()"
		},
		{
			"forge": "tick()",
			"fabric": "tick()"
		},
		{
			"forge": "getDimensions(Pose arg0)",
			"fabric": "getDimensions(EntityPose arg0)"
		},
		{
			"forge": "doHurtTarget(Entity arg0)",
			"fabric": "tryAttack(Entity arg0)"
		},
		{
			"forge": "isStanding()",
			"fabric": "isWarning()"
		},
		{
			"forge": "setStanding(boolean arg0)",
			"fabric": "setWarning(boolean warning)"
		},
		{
			"forge": "getStandingAnimationScale(float arg0)",
			"fabric": "getWarningAnimationProgress(float tickDelta)"
		},
		{
			"forge": "getWaterSlowDown()",
			"fabric": "getBaseMovementSpeedMultiplier()"
		},
		{
			"forge": "finalizeSpawn(ServerLevelAccessor arg0, DifficultyInstance arg1, MobSpawnType arg2, SpawnGroupData arg3, CompoundTag arg4)",
			"fabric": "initialize(ServerWorldAccess arg0, LocalDifficulty arg1, SpawnReason arg2, EntityData arg3, NbtCompound arg4)"
		}
	]
}