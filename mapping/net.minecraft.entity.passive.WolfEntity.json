{
	"title": "net.minecraft.world.entity.animal.Wolf",
	"items": [
		{
			"forge": "net.minecraft.world.entity.animal.Wolf",
			"fabric": "net.minecraft.entity.passive.WolfEntity"
		},
		{
			"forge": "DATA_INTERESTED_ID",
			"fabric": "BEGGING"
		},
		{
			"forge": "DATA_INTERESTED_ID",
			"fabric": "BEGGING"
		},
		{
			"forge": "DATA_COLLAR_COLOR",
			"fabric": "COLLAR_COLOR"
		},
		{
			"forge": "DATA_REMAINING_ANGER_TIME",
			"fabric": "ANGER_TIME"
		},
		{
			"forge": "PREY_SELECTOR",
			"fabric": "FOLLOW_TAMED_PREDICATE"
		},
		{
			"forge": "START_HEALTH",
			"fabric": "WILD_MAX_HEALTH"
		},
		{
			"forge": "TAME_HEALTH",
			"fabric": "TAMED_MAX_HEALTH"
		},
		{
			"forge": "interestedAngle",
			"fabric": "begAnimationProgress"
		},
		{
			"forge": "interestedAngleO",
			"fabric": "lastBegAnimationProgress"
		},
		{
			"forge": "isWet",
			"fabric": "furWet"
		},
		{
			"forge": "isShaking",
			"fabric": "canShakeWaterOff"
		},
		{
			"forge": "shakeAnim",
			"fabric": "shakeProgress"
		},
		{
			"forge": "shakeAnimO",
			"fabric": "lastShakeProgress"
		},
		{
			"forge": "PERSISTENT_ANGER_TIME",
			"fabric": "ANGER_TIME_RANGE"
		},
		{
			"forge": "persistentAngerTarget",
			"fabric": "angryAt"
		},
		{
			"forge": "registerGoals()",
			"fabric": "initGoals()"
		},
		{
			"forge": "registerGoals()",
			"fabric": "initGoals()"
		},
		{
			"forge": "createAttributes()",
			"fabric": "createWolfAttributes()"
		},
		{
			"forge": "defineSynchedData()",
			"fabric": "initDataTracker()"
		},
		{
			"forge": "playStepSound(BlockPos arg0, BlockState arg1)",
			"fabric": "playStepSound(BlockPos arg0, BlockState arg1)"
		},
		{
			"forge": "addAdditionalSaveData(CompoundTag arg0)",
			"fabric": "writeCustomDataToNbt(NbtCompound arg0)"
		},
		{
			"forge": "readAdditionalSaveData(CompoundTag arg0)",
			"fabric": "readCustomDataFromNbt(NbtCompound arg0)"
		},
		{
			"forge": "getAmbientSound()",
			"fabric": "getAmbientSound()"
		},
		{
			"forge": "getHurtSound(DamageSource arg0)",
			"fabric": "getHurtSound(DamageSource arg0)"
		},
		{
			"forge": "getDeathSound()",
			"fabric": "getDeathSound()"
		},
		{
			"forge": "getSoundVolume()",
			"fabric": "getSoundVolume()"
		},
		{
			"forge": "aiStep()",
			"fabric": "tickMovement()"
		},
		{
			"forge": "tick()",
			"fabric": "tick()"
		},
		{
			"forge": "cancelShake()",
			"fabric": "resetShake()"
		},
		{
			"forge": "die(DamageSource arg0)",
			"fabric": "onDeath(DamageSource arg0)"
		},
		{
			"forge": "isWet()",
			"fabric": "isFurWet()"
		},
		{
			"forge": "getWetShade(float arg0)",
			"fabric": "getFurWetBrightnessMultiplier(float tickDelta)"
		},
		{
			"forge": "getBodyRollAngle(float arg0, float arg1)",
			"fabric": "getShakeAnimationProgress(float tickDelta, float arg1)"
		},
		{
			"forge": "getHeadRollAngle(float arg0)",
			"fabric": "getBegAnimationProgress(float tickDelta)"
		},
		{
			"forge": "getStandingEyeHeight(Pose arg0, EntityDimensions arg1)",
			"fabric": "getActiveEyeHeight(EntityPose arg0, EntityDimensions arg1)"
		},
		{
			"forge": "getMaxHeadXRot()",
			"fabric": "getMaxLookPitchChange()"
		},
		{
			"forge": "hurt(DamageSource arg0, float arg1)",
			"fabric": "damage(DamageSource arg0, float arg1)"
		},
		{
			"forge": "doHurtTarget(Entity arg0)",
			"fabric": "tryAttack(Entity arg0)"
		},
		{
			"forge": "setTame(boolean arg0)",
			"fabric": "setTamed(boolean arg0)"
		},
		{
			"forge": "mobInteract(Player arg0, InteractionHand arg1)",
			"fabric": "interactMob(PlayerEntity arg0, Hand arg1)"
		},
		{
			"forge": "handleEntityEvent(byte arg0)",
			"fabric": "handleStatus(byte arg0)"
		},
		{
			"forge": "getTailAngle()",
			"fabric": "getTailAngle()"
		},
		{
			"forge": "isFood(ItemStack arg0)",
			"fabric": "isBreedingItem(ItemStack arg0)"
		},
		{
			"forge": "getMaxSpawnClusterSize()",
			"fabric": "getLimitPerChunk()"
		},
		{
			"forge": "getRemainingPersistentAngerTime()",
			"fabric": "getAngerTime()"
		},
		{
			"forge": "setRemainingPersistentAngerTime(int arg0)",
			"fabric": "setAngerTime(int arg0)"
		},
		{
			"forge": "startPersistentAngerTimer()",
			"fabric": "chooseRandomAngerTime()"
		},
		{
			"forge": "getPersistentAngerTarget()",
			"fabric": "getAngryAt()"
		},
		{
			"forge": "setPersistentAngerTarget(UUID arg0)",
			"fabric": "setAngryAt(UUID arg0)"
		},
		{
			"forge": "getCollarColor()",
			"fabric": "getCollarColor()"
		},
		{
			"forge": "setCollarColor(DyeColor arg0)",
			"fabric": "setCollarColor(DyeColor color)"
		},
		{
			"forge": "getBreedOffspring(ServerLevel arg0, AgeableMob arg1)",
			"fabric": "createChild(ServerWorld arg0, PassiveEntity arg1)"
		},
		{
			"forge": "setIsInterested(boolean arg0)",
			"fabric": "setBegging(boolean begging)"
		},
		{
			"forge": "canMate(Animal arg0)",
			"fabric": "canBreedWith(AnimalEntity arg0)"
		},
		{
			"forge": "isInterested()",
			"fabric": "isBegging()"
		},
		{
			"forge": "wantsToAttack(LivingEntity arg0, LivingEntity arg1)",
			"fabric": "canAttackWithOwner(LivingEntity arg0, LivingEntity arg1)"
		},
		{
			"forge": "canBeLeashed(Player arg0)",
			"fabric": "canBeLeashedBy(PlayerEntity arg0)"
		},
		{
			"forge": "getLeashOffset()",
			"fabric": "getLeashOffset()"
		},
		{
			"forge": "checkWolfSpawnRules(EntityType<Wolf> arg0, LevelAccessor arg1, MobSpawnType arg2, BlockPos arg3, RandomSource arg4)",
			"fabric": "canSpawn(EntityType<WolfEntity> type, WorldAccess world, SpawnReason spawnReason, BlockPos pos, Random random)"
		}
	]
}