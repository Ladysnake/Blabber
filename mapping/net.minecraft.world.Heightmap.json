{
	"title": "net.minecraft.world.level.levelgen.Heightmap",
	"items": [
		{
			"forge": "net.minecraft.world.level.levelgen.Heightmap",
			"fabric": "net.minecraft.world.Heightmap"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "NOT_AIR",
			"fabric": "NOT_AIR"
		},
		{
			"forge": "MATERIAL_MOTION_BLOCKING",
			"fabric": "SUFFOCATES"
		},
		{
			"forge": "data",
			"fabric": "storage"
		},
		{
			"forge": "isOpaque",
			"fabric": "blockPredicate"
		},
		{
			"forge": "chunk",
			"fabric": "chunk"
		},
		{
			"forge": "primeHeightmaps(ChunkAccess arg0, Set<Heightmap$Types> arg1)",
			"fabric": "populateHeightmaps(Chunk chunk, Set<Heightmap$Type> types)"
		},
		{
			"forge": "primeHeightmaps(ChunkAccess arg0, Set<Heightmap$Types> arg1)",
			"fabric": "populateHeightmaps(Chunk chunk, Set<Heightmap$Type> types)"
		},
		{
			"forge": "update(int arg0, int arg1, int arg2, BlockState arg3)",
			"fabric": "trackUpdate(int x, int y, int z, BlockState state)"
		},
		{
			"forge": "getFirstAvailable(int arg0, int arg1)",
			"fabric": "get(int x, int z)"
		},
		{
			"forge": "getHighestTaken(int arg0, int arg1)",
			"fabric": "method_35334(int x, int z)"
		},
		{
			"forge": "getFirstAvailable(int arg0)",
			"fabric": "get(int index)"
		},
		{
			"forge": "setHeight(int arg0, int arg1, int arg2)",
			"fabric": "set(int x, int z, int height)"
		},
		{
			"forge": "setRawData(ChunkAccess arg0, Heightmap$Types arg1, long[] arg2)",
			"fabric": "setTo(Chunk chunk, Heightmap$Type type, long[] values)"
		},
		{
			"forge": "getRawData()",
			"fabric": "asLongArray()"
		},
		{
			"forge": "getIndex(int arg0, int arg1)",
			"fabric": "toIndex(int x, int z)"
		}
	]
}