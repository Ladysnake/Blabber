{
	"title": "net.minecraft.world.level.levelgen.carver.CanyonWorldCarver",
	"items": [
		{
			"forge": "net.minecraft.world.level.levelgen.carver.CanyonWorldCarver",
			"fabric": "net.minecraft.world.gen.carver.RavineCarver"
		},
		{
			"forge": "isStartChunk(CanyonCarverConfiguration arg0, RandomSource arg1)",
			"fabric": "shouldCarve(RavineCarverConfig arg0, Random arg1)"
		},
		{
			"forge": "isStartChunk(CanyonCarverConfiguration arg0, RandomSource arg1)",
			"fabric": "shouldCarve(RavineCarverConfig arg0, Random arg1)"
		},
		{
			"forge": "carve(CarvingContext arg0, CanyonCarverConfiguration arg1, ChunkAccess arg2, Function<BlockPos, Holder<Biome>> arg3, RandomSource arg4, Aquifer arg5, ChunkPos arg6, CarvingMask arg7)",
			"fabric": "carve(CarverContext arg0, RavineCarverConfig arg1, Chunk arg2, Function<BlockPos, RegistryEntry<Biome>> arg3, Random arg4, AquiferSampler arg5, ChunkPos arg6, CarvingMask arg7)"
		},
		{
			"forge": "doCarve(CarvingContext arg0, CanyonCarverConfiguration arg1, ChunkAccess arg2, Function<BlockPos, Holder<Biome>> arg3, long arg4, Aquifer arg5, double arg6, double arg7, double arg8, float arg9, float arg10, float arg11, int arg12, int arg13, double arg14, CarvingMask arg15)",
			"fabric": "carveRavine(CarverContext context, RavineCarverConfig config, Chunk chunk, Function<BlockPos, RegistryEntry<Biome>> posToBiome, long seed, AquiferSampler aquiferSampler, double x, double y, double z, float width, float yaw, float pitch, int branchStartIndex, int branchCount, double yawPitchRatio, CarvingMask mask)"
		},
		{
			"forge": "initWidthFactors(CarvingContext arg0, CanyonCarverConfiguration arg1, RandomSource arg2)",
			"fabric": "createHorizontalStretchFactors(CarverContext context, RavineCarverConfig config, Random random)"
		},
		{
			"forge": "updateVerticalRadius(CanyonCarverConfiguration arg0, RandomSource arg1, double arg2, float arg3, float arg4)",
			"fabric": "getVerticalScale(RavineCarverConfig config, Random random, double pitch, float branchCount, float branchIndex)"
		},
		{
			"forge": "shouldSkip(CarvingContext arg0, float[] arg1, double arg2, double arg3, double arg4, int arg5)",
			"fabric": "isPositionExcluded(CarverContext context, float[] horizontalStretchFactors, double scaledRelativeX, double scaledRelativeY, double scaledRelativeZ, int y)"
		}
	]
}