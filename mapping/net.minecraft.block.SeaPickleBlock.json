{
	"title": "net.minecraft.world.level.block.SeaPickleBlock",
	"items": [
		{
			"forge": "net.minecraft.world.level.block.SeaPickleBlock",
			"fabric": "net.minecraft.block.SeaPickleBlock"
		},
		{
			"forge": "MAX_PICKLES",
			"fabric": "MAX_PICKLES"
		},
		{
			"forge": "MAX_PICKLES",
			"fabric": "MAX_PICKLES"
		},
		{
			"forge": "PICKLES",
			"fabric": "PICKLES"
		},
		{
			"forge": "WATERLOGGED",
			"fabric": "WATERLOGGED"
		},
		{
			"forge": "ONE_AABB",
			"fabric": "ONE_PICKLE_SHAPE"
		},
		{
			"forge": "TWO_AABB",
			"fabric": "TWO_PICKLES_SHAPE"
		},
		{
			"forge": "THREE_AABB",
			"fabric": "THREE_PICKLES_SHAPE"
		},
		{
			"forge": "FOUR_AABB",
			"fabric": "FOUR_PICKLES_SHAPE"
		},
		{
			"forge": "getStateForPlacement(BlockPlaceContext arg0)",
			"fabric": "getPlacementState(ItemPlacementContext arg0)"
		},
		{
			"forge": "getStateForPlacement(BlockPlaceContext arg0)",
			"fabric": "getPlacementState(ItemPlacementContext arg0)"
		},
		{
			"forge": "isDead(BlockState arg0)",
			"fabric": "isDry(BlockState state)"
		},
		{
			"forge": "mayPlaceOn(BlockState arg0, BlockGetter arg1, BlockPos arg2)",
			"fabric": "canPlantOnTop(BlockState arg0, BlockView arg1, BlockPos arg2)"
		},
		{
			"forge": "canSurvive(BlockState arg0, LevelReader arg1, BlockPos arg2)",
			"fabric": "canPlaceAt(BlockState arg0, WorldView arg1, BlockPos arg2)"
		},
		{
			"forge": "updateShape(BlockState arg0, Direction arg1, BlockState arg2, LevelAccessor arg3, BlockPos arg4, BlockPos arg5)",
			"fabric": "getStateForNeighborUpdate(BlockState arg0, Direction arg1, BlockState arg2, WorldAccess arg3, BlockPos arg4, BlockPos arg5)"
		},
		{
			"forge": "canBeReplaced(BlockState arg0, BlockPlaceContext arg1)",
			"fabric": "canReplace(BlockState arg0, ItemPlacementContext arg1)"
		},
		{
			"forge": "getShape(BlockState arg0, BlockGetter arg1, BlockPos arg2, CollisionContext arg3)",
			"fabric": "getOutlineShape(BlockState arg0, BlockView arg1, BlockPos arg2, ShapeContext arg3)"
		},
		{
			"forge": "getFluidState(BlockState arg0)",
			"fabric": "getFluidState(BlockState arg0)"
		},
		{
			"forge": "createBlockStateDefinition(StateDefinition$Builder<Block, BlockState> arg0)",
			"fabric": "appendProperties(StateManager$Builder<Block, BlockState> arg0)"
		},
		{
			"forge": "isValidBonemealTarget(LevelReader arg0, BlockPos arg1, BlockState arg2, boolean arg3)",
			"fabric": "isFertilizable(WorldView arg0, BlockPos arg1, BlockState arg2, boolean arg3)"
		},
		{
			"forge": "isBonemealSuccess(Level arg0, RandomSource arg1, BlockPos arg2, BlockState arg3)",
			"fabric": "canGrow(World arg0, Random arg1, BlockPos arg2, BlockState arg3)"
		},
		{
			"forge": "performBonemeal(ServerLevel arg0, RandomSource arg1, BlockPos arg2, BlockState arg3)",
			"fabric": "grow(ServerWorld arg0, Random arg1, BlockPos arg2, BlockState arg3)"
		},
		{
			"forge": "isPathfindable(BlockState arg0, BlockGetter arg1, BlockPos arg2, PathComputationType arg3)",
			"fabric": "canPathfindThrough(BlockState arg0, BlockView arg1, BlockPos arg2, NavigationType arg3)"
		}
	]
}