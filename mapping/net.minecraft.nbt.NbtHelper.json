{
	"title": "net.minecraft.nbt.NbtUtils",
	"items": [
		{
			"forge": "net.minecraft.nbt.NbtUtils",
			"fabric": "net.minecraft.nbt.NbtHelper"
		},
		{
			"forge": "YXZ_LISTTAG_INT_COMPARATOR",
			"fabric": "BLOCK_POS_COMPARATOR"
		},
		{
			"forge": "YXZ_LISTTAG_INT_COMPARATOR",
			"fabric": "BLOCK_POS_COMPARATOR"
		},
		{
			"forge": "YXZ_LISTTAG_DOUBLE_COMPARATOR",
			"fabric": "ENTITY_POS_COMPARATOR"
		},
		{
			"forge": "SNBT_DATA_TAG",
			"fabric": "DATA_KEY"
		},
		{
			"forge": "PROPERTIES_START",
			"fabric": "LEFT_CURLY_BRACKET"
		},
		{
			"forge": "PROPERTIES_END",
			"fabric": "RIGHT_CURLY_BRACKET"
		},
		{
			"forge": "ELEMENT_SEPARATOR",
			"fabric": "COMMA"
		},
		{
			"forge": "KEY_VALUE_SEPARATOR",
			"fabric": "COLON"
		},
		{
			"forge": "COMMA_SPLITTER",
			"fabric": "COMMA_SPLITTER"
		},
		{
			"forge": "COLON_SPLITTER",
			"fabric": "COLON_SPLITTER"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "INDENT",
			"fabric": "field_33229"
		},
		{
			"forge": "NOT_FOUND",
			"fabric": "field_33230"
		},
		{
			"forge": "readGameProfile(CompoundTag arg0)",
			"fabric": "toGameProfile(NbtCompound nbt)"
		},
		{
			"forge": "readGameProfile(CompoundTag arg0)",
			"fabric": "toGameProfile(NbtCompound nbt)"
		},
		{
			"forge": "writeGameProfile(CompoundTag arg0, com.mojang.authlib.GameProfile arg1)",
			"fabric": "writeGameProfile(NbtCompound nbt, com.mojang.authlib.GameProfile profile)"
		},
		{
			"forge": "compareNbt(Tag arg0, Tag arg1, boolean arg2)",
			"fabric": "matches(NbtElement standard, NbtElement subject, boolean ignoreListOrder)"
		},
		{
			"forge": "createUUID(UUID arg0)",
			"fabric": "fromUuid(UUID uuid)"
		},
		{
			"forge": "loadUUID(Tag arg0)",
			"fabric": "toUuid(NbtElement element)"
		},
		{
			"forge": "readBlockPos(CompoundTag arg0)",
			"fabric": "toBlockPos(NbtCompound nbt)"
		},
		{
			"forge": "writeBlockPos(BlockPos arg0)",
			"fabric": "fromBlockPos(BlockPos pos)"
		},
		{
			"forge": "readBlockState(HolderGetter<Block> arg0, CompoundTag arg1)",
			"fabric": "toBlockState(RegistryEntryLookup<Block> blockLookup, NbtCompound nbt)"
		},
		{
			"forge": "setValueHelper(S arg0, Property<T> arg1, String arg2, CompoundTag arg3, CompoundTag arg4)",
			"fabric": "withProperty(S state, Property<T> property, String key, NbtCompound properties, NbtCompound root)"
		},
		{
			"forge": "writeBlockState(BlockState arg0)",
			"fabric": "fromBlockState(BlockState state)"
		},
		{
			"forge": "writeFluidState(FluidState arg0)",
			"fabric": "fromFluidState(FluidState state)"
		},
		{
			"forge": "getName(Property<T> arg0, Comparable<?> arg1)",
			"fabric": "nameValue(Property<T> property, Comparable<?> value)"
		},
		{
			"forge": "prettyPrint(Tag arg0)",
			"fabric": "toFormattedString(NbtElement nbt)"
		},
		{
			"forge": "prettyPrint(Tag arg0, boolean arg1)",
			"fabric": "toFormattedString(NbtElement nbt, boolean withArrayContents)"
		},
		{
			"forge": "prettyPrint(StringBuilder arg0, Tag arg1, int arg2, boolean arg3)",
			"fabric": "appendFormattedString(StringBuilder stringBuilder, NbtElement nbt, int depth, boolean withArrayContents)"
		},
		{
			"forge": "indent(int arg0, StringBuilder arg1)",
			"fabric": "appendIndent(int depth, StringBuilder stringBuilder)"
		},
		{
			"forge": "toPrettyComponent(Tag arg0)",
			"fabric": "toPrettyPrintedText(NbtElement element)"
		},
		{
			"forge": "structureToSnbt(CompoundTag arg0)",
			"fabric": "toNbtProviderString(NbtCompound compound)"
		},
		{
			"forge": "snbtToStructure(String arg0)",
			"fabric": "fromNbtProviderString(String string)"
		},
		{
			"forge": "packStructureTemplate(CompoundTag arg0)",
			"fabric": "toNbtProviderFormat(NbtCompound compound)"
		},
		{
			"forge": "unpackStructureTemplate(CompoundTag arg0)",
			"fabric": "fromNbtProviderFormat(NbtCompound compound)"
		},
		{
			"forge": "packBlockState(CompoundTag arg0)",
			"fabric": "toNbtProviderFormattedPalette(NbtCompound compound)"
		},
		{
			"forge": "unpackBlockState(String arg0)",
			"fabric": "fromNbtProviderFormattedPalette(String string)"
		},
		{
			"forge": "addCurrentDataVersion(CompoundTag arg0)",
			"fabric": "putDataVersion(NbtCompound nbt)"
		},
		{
			"forge": "addDataVersion(CompoundTag arg0, int arg1)",
			"fabric": "putDataVersion(NbtCompound nbt, int dataVersion)"
		},
		{
			"forge": "getDataVersion(CompoundTag arg0, int arg1)",
			"fabric": "getDataVersion(NbtCompound nbt, int fallback)"
		}
	]
}