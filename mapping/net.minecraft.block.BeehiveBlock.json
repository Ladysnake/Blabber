{
	"title": "net.minecraft.world.level.block.BeehiveBlock",
	"items": [
		{
			"forge": "net.minecraft.world.level.block.BeehiveBlock",
			"fabric": "net.minecraft.block.BeehiveBlock"
		},
		{
			"forge": "FACING",
			"fabric": "FACING"
		},
		{
			"forge": "FACING",
			"fabric": "FACING"
		},
		{
			"forge": "HONEY_LEVEL",
			"fabric": "HONEY_LEVEL"
		},
		{
			"forge": "MAX_HONEY_LEVELS",
			"fabric": "FULL_HONEY_LEVEL"
		},
		{
			"forge": "SHEARED_HONEYCOMB_COUNT",
			"fabric": "DROPPED_HONEYCOMB_COUNT"
		},
		{
			"forge": "hasAnalogOutputSignal(BlockState arg0)",
			"fabric": "hasComparatorOutput(BlockState arg0)"
		},
		{
			"forge": "hasAnalogOutputSignal(BlockState arg0)",
			"fabric": "hasComparatorOutput(BlockState arg0)"
		},
		{
			"forge": "getAnalogOutputSignal(BlockState arg0, Level arg1, BlockPos arg2)",
			"fabric": "getComparatorOutput(BlockState arg0, World arg1, BlockPos arg2)"
		},
		{
			"forge": "playerDestroy(Level arg0, Player arg1, BlockPos arg2, BlockState arg3, BlockEntity arg4, ItemStack arg5)",
			"fabric": "afterBreak(World arg0, PlayerEntity arg1, BlockPos arg2, BlockState arg3, BlockEntity arg4, ItemStack arg5)"
		},
		{
			"forge": "angerNearbyBees(Level arg0, BlockPos arg1)",
			"fabric": "angerNearbyBees(World world, BlockPos pos)"
		},
		{
			"forge": "dropHoneycomb(Level arg0, BlockPos arg1)",
			"fabric": "dropHoneycomb(World world, BlockPos pos)"
		},
		{
			"forge": "use(BlockState arg0, Level arg1, BlockPos arg2, Player arg3, InteractionHand arg4, BlockHitResult arg5)",
			"fabric": "onUse(BlockState arg0, World arg1, BlockPos arg2, PlayerEntity arg3, Hand arg4, BlockHitResult arg5)"
		},
		{
			"forge": "hiveContainsBees(Level arg0, BlockPos arg1)",
			"fabric": "hasBees(World world, BlockPos pos)"
		},
		{
			"forge": "releaseBeesAndResetHoneyLevel(Level arg0, BlockState arg1, BlockPos arg2, Player arg3, BeehiveBlockEntity$BeeReleaseStatus arg4)",
			"fabric": "takeHoney(World world, BlockState state, BlockPos pos, PlayerEntity player, BeehiveBlockEntity$BeeState beeState)"
		},
		{
			"forge": "resetHoneyLevel(Level arg0, BlockState arg1, BlockPos arg2)",
			"fabric": "takeHoney(World world, BlockState state, BlockPos pos)"
		},
		{
			"forge": "animateTick(BlockState arg0, Level arg1, BlockPos arg2, RandomSource arg3)",
			"fabric": "randomDisplayTick(BlockState arg0, World arg1, BlockPos arg2, Random arg3)"
		},
		{
			"forge": "trySpawnDripParticles(Level arg0, BlockPos arg1, BlockState arg2)",
			"fabric": "spawnHoneyParticles(World world, BlockPos pos, BlockState state)"
		},
		{
			"forge": "spawnParticle(Level arg0, BlockPos arg1, VoxelShape arg2, double arg3)",
			"fabric": "addHoneyParticle(World world, BlockPos pos, VoxelShape shape, double height)"
		},
		{
			"forge": "spawnFluidParticle(Level arg0, double arg1, double arg2, double arg3, double arg4, double arg5)",
			"fabric": "addHoneyParticle(World world, double minX, double maxX, double minZ, double maxZ, double height)"
		},
		{
			"forge": "getStateForPlacement(BlockPlaceContext arg0)",
			"fabric": "getPlacementState(ItemPlacementContext arg0)"
		},
		{
			"forge": "createBlockStateDefinition(StateDefinition$Builder<Block, BlockState> arg0)",
			"fabric": "appendProperties(StateManager$Builder<Block, BlockState> arg0)"
		},
		{
			"forge": "getRenderShape(BlockState arg0)",
			"fabric": "getRenderType(BlockState arg0)"
		},
		{
			"forge": "newBlockEntity(BlockPos arg0, BlockState arg1)",
			"fabric": "createBlockEntity(BlockPos arg0, BlockState arg1)"
		},
		{
			"forge": "getTicker(Level arg0, BlockState arg1, BlockEntityType<T> arg2)",
			"fabric": "getTicker(World arg0, BlockState arg1, BlockEntityType<T> arg2)"
		},
		{
			"forge": "playerWillDestroy(Level arg0, BlockPos arg1, BlockState arg2, Player arg3)",
			"fabric": "onBreak(World arg0, BlockPos arg1, BlockState arg2, PlayerEntity arg3)"
		},
		{
			"forge": "getDrops(BlockState arg0, LootParams$Builder arg1)",
			"fabric": "getDroppedStacks(BlockState arg0, LootContextParameterSet$Builder arg1)"
		},
		{
			"forge": "updateShape(BlockState arg0, Direction arg1, BlockState arg2, LevelAccessor arg3, BlockPos arg4, BlockPos arg5)",
			"fabric": "getStateForNeighborUpdate(BlockState arg0, Direction arg1, BlockState arg2, WorldAccess arg3, BlockPos arg4, BlockPos arg5)"
		}
	]
}