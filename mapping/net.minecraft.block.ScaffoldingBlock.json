{
	"title": "net.minecraft.world.level.block.ScaffoldingBlock",
	"items": [
		{
			"forge": "net.minecraft.world.level.block.ScaffoldingBlock",
			"fabric": "net.minecraft.block.ScaffoldingBlock"
		},
		{
			"forge": "TICK_DELAY",
			"fabric": "field_31238"
		},
		{
			"forge": "TICK_DELAY",
			"fabric": "field_31238"
		},
		{
			"forge": "STABLE_SHAPE",
			"fabric": "NORMAL_OUTLINE_SHAPE"
		},
		{
			"forge": "UNSTABLE_SHAPE",
			"fabric": "BOTTOM_OUTLINE_SHAPE"
		},
		{
			"forge": "UNSTABLE_SHAPE_BOTTOM",
			"fabric": "COLLISION_SHAPE"
		},
		{
			"forge": "BELOW_BLOCK",
			"fabric": "OUTLINE_SHAPE"
		},
		{
			"forge": "STABILITY_MAX_DISTANCE",
			"fabric": "MAX_DISTANCE"
		},
		{
			"forge": "DISTANCE",
			"fabric": "DISTANCE"
		},
		{
			"forge": "WATERLOGGED",
			"fabric": "WATERLOGGED"
		},
		{
			"forge": "BOTTOM",
			"fabric": "BOTTOM"
		},
		{
			"forge": "createBlockStateDefinition(StateDefinition$Builder<Block, BlockState> arg0)",
			"fabric": "appendProperties(StateManager$Builder<Block, BlockState> arg0)"
		},
		{
			"forge": "createBlockStateDefinition(StateDefinition$Builder<Block, BlockState> arg0)",
			"fabric": "appendProperties(StateManager$Builder<Block, BlockState> arg0)"
		},
		{
			"forge": "getShape(BlockState arg0, BlockGetter arg1, BlockPos arg2, CollisionContext arg3)",
			"fabric": "getOutlineShape(BlockState arg0, BlockView arg1, BlockPos arg2, ShapeContext arg3)"
		},
		{
			"forge": "getInteractionShape(BlockState arg0, BlockGetter arg1, BlockPos arg2)",
			"fabric": "getRaycastShape(BlockState arg0, BlockView arg1, BlockPos arg2)"
		},
		{
			"forge": "canBeReplaced(BlockState arg0, BlockPlaceContext arg1)",
			"fabric": "canReplace(BlockState arg0, ItemPlacementContext arg1)"
		},
		{
			"forge": "getStateForPlacement(BlockPlaceContext arg0)",
			"fabric": "getPlacementState(ItemPlacementContext arg0)"
		},
		{
			"forge": "onPlace(BlockState arg0, Level arg1, BlockPos arg2, BlockState arg3, boolean arg4)",
			"fabric": "onBlockAdded(BlockState arg0, World arg1, BlockPos arg2, BlockState arg3, boolean arg4)"
		},
		{
			"forge": "updateShape(BlockState arg0, Direction arg1, BlockState arg2, LevelAccessor arg3, BlockPos arg4, BlockPos arg5)",
			"fabric": "getStateForNeighborUpdate(BlockState arg0, Direction arg1, BlockState arg2, WorldAccess arg3, BlockPos arg4, BlockPos arg5)"
		},
		{
			"forge": "tick(BlockState arg0, ServerLevel arg1, BlockPos arg2, RandomSource arg3)",
			"fabric": "scheduledTick(BlockState arg0, ServerWorld arg1, BlockPos arg2, Random arg3)"
		},
		{
			"forge": "canSurvive(BlockState arg0, LevelReader arg1, BlockPos arg2)",
			"fabric": "canPlaceAt(BlockState arg0, WorldView arg1, BlockPos arg2)"
		},
		{
			"forge": "getCollisionShape(BlockState arg0, BlockGetter arg1, BlockPos arg2, CollisionContext arg3)",
			"fabric": "getCollisionShape(BlockState arg0, BlockView arg1, BlockPos arg2, ShapeContext arg3)"
		},
		{
			"forge": "getFluidState(BlockState arg0)",
			"fabric": "getFluidState(BlockState arg0)"
		},
		{
			"forge": "isBottom(BlockGetter arg0, BlockPos arg1, int arg2)",
			"fabric": "shouldBeBottom(BlockView world, BlockPos pos, int distance)"
		},
		{
			"forge": "getDistance(BlockGetter arg0, BlockPos arg1)",
			"fabric": "calculateDistance(BlockView world, BlockPos pos)"
		}
	]
}