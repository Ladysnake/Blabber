{
	"title": "net.minecraft.world.level.levelgen.blending.Blender",
	"items": [
		{
			"forge": "net.minecraft.world.level.levelgen.blending.Blender",
			"fabric": "net.minecraft.world.gen.chunk.Blender"
		},
		{
			"forge": "EMPTY",
			"fabric": "NO_BLENDING"
		},
		{
			"forge": "EMPTY",
			"fabric": "NO_BLENDING"
		},
		{
			"forge": "SHIFT_NOISE",
			"fabric": "OFFSET_NOISE"
		},
		{
			"forge": "HEIGHT_BLENDING_RANGE_CELLS",
			"fabric": "BLENDING_BIOME_DISTANCE_THRESHOLD"
		},
		{
			"forge": "HEIGHT_BLENDING_RANGE_CHUNKS",
			"fabric": "BLENDING_CHUNK_DISTANCE_THRESHOLD"
		},
		{
			"forge": "DENSITY_BLENDING_RANGE_CELLS",
			"fabric": "field_35504"
		},
		{
			"forge": "DENSITY_BLENDING_RANGE_CHUNKS",
			"fabric": "CLOSE_BLENDING_DISTANCE_THRESHOLD"
		},
		{
			"forge": "OLD_CHUNK_XZ_RADIUS",
			"fabric": "field_36224"
		},
		{
			"forge": "heightAndBiomeBlendingData",
			"fabric": "blendingData"
		},
		{
			"forge": "densityBlendingData",
			"fabric": "closeBlendingData"
		},
		{
			"forge": "empty()",
			"fabric": "getNoBlending()"
		},
		{
			"forge": "empty()",
			"fabric": "getNoBlending()"
		},
		{
			"forge": "of(WorldGenRegion arg0)",
			"fabric": "getBlender(ChunkRegion chunkRegion)"
		},
		{
			"forge": "blendOffsetAndFactor(int arg0, int arg1)",
			"fabric": "calculate(int blockX, int blockZ)"
		},
		{
			"forge": "heightToOffset(double arg0)",
			"fabric": "getBlendOffset(double height)"
		},
		{
			"forge": "blendDensity(DensityFunction$FunctionContext arg0, double arg1)",
			"fabric": "applyBlendDensity(DensityFunction$NoisePos pos, double density)"
		},
		{
			"forge": "getBlendingDataValue(int arg0, int arg1, int arg2, Blender$CellValueGetter arg3)",
			"fabric": "sampleClosest(int biomeX, int biomeY, int biomeZ, Blender$BlendingSampler sampler)"
		},
		{
			"forge": "getBlendingDataValue(Blender$CellValueGetter arg0, int arg1, int arg2, int arg3, int arg4, int arg5)",
			"fabric": "sample(Blender$BlendingSampler sampler, int chunkX, int chunkZ, int biomeX, int biomeY, int biomeZ)"
		},
		{
			"forge": "getBiomeResolver(BiomeResolver arg0)",
			"fabric": "getBiomeSupplier(BiomeSupplier biomeSupplier)"
		},
		{
			"forge": "blendBiome(int arg0, int arg1, int arg2)",
			"fabric": "blendBiome(int x, int y, int z)"
		},
		{
			"forge": "generateBorderTicks(WorldGenRegion arg0, ChunkAccess arg1)",
			"fabric": "tickLeavesAndFluids(ChunkRegion chunkRegion, Chunk chunk)"
		},
		{
			"forge": "generateBorderTick(ChunkAccess arg0, BlockPos arg1)",
			"fabric": "tickLeavesAndFluids(Chunk chunk, BlockPos pos)"
		},
		{
			"forge": "addAroundOldChunksCarvingMaskFilter(WorldGenLevel arg0, ProtoChunk arg1)",
			"fabric": "createCarvingMasks(StructureWorldAccess world, ProtoChunk chunk)"
		},
		{
			"forge": "makeOldChunkDistanceGetter(BlendingData arg0, Map<Direction8, BlendingData> arg1)",
			"fabric": "createClosestDistanceFunction(BlendingData data, Map<EightWayDirection, BlendingData> neighborData)"
		},
		{
			"forge": "makeOffsetOldChunkDistanceGetter(Direction8 arg0, BlendingData arg1)",
			"fabric": "createDistanceFunction(EightWayDirection direction, BlendingData data)"
		},
		{
			"forge": "distanceToCube(double arg0, double arg1, double arg2, double arg3, double arg4, double arg5)",
			"fabric": "getDistance(double x1, double y1, double z1, double x2, double y2, double z2)"
		}
	]
}