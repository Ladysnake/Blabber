{
	"title": "net.minecraft.world.level.storage.LevelStorageSource",
	"items": [
		{
			"forge": "net.minecraft.world.level.storage.LevelStorageSource",
			"fabric": "net.minecraft.world.level.storage.LevelStorage"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "FORMATTER",
			"fabric": "TIME_FORMATTER"
		},
		{
			"forge": "OLD_SETTINGS_KEYS",
			"fabric": "GENERATOR_OPTION_KEYS"
		},
		{
			"forge": "TAG_DATA",
			"fabric": "DATA_KEY"
		},
		{
			"forge": "NO_SYMLINKS_ALLOWED",
			"fabric": "DEFAULT_ALLOWED_SYMLINK_MATCHER"
		},
		{
			"forge": "ALLOWED_SYMLINKS_CONFIG_NAME",
			"fabric": "ALLOWED_SYMLINKS_FILE_NAME"
		},
		{
			"forge": "baseDir",
			"fabric": "savesDirectory"
		},
		{
			"forge": "backupDir",
			"fabric": "backupsDirectory"
		},
		{
			"forge": "fixerUpper",
			"fabric": "dataFixer"
		},
		{
			"forge": "worldDirValidator",
			"fabric": "symlinkFinder"
		},
		{
			"forge": "parseValidator(Path arg0)",
			"fabric": "createSymlinkFinder(Path allowedSymlinksFile)"
		},
		{
			"forge": "parseValidator(Path arg0)",
			"fabric": "createSymlinkFinder(Path allowedSymlinksFile)"
		},
		{
			"forge": "createDefault(Path arg0)",
			"fabric": "create(Path path)"
		},
		{
			"forge": "readWorldGenSettings(com.mojang.serialization.Dynamic<T> arg0, com.mojang.datafixers.DataFixer arg1, int arg2)",
			"fabric": "readGeneratorProperties(com.mojang.serialization.Dynamic<T> levelData, com.mojang.datafixers.DataFixer dataFixer, int version)"
		},
		{
			"forge": "readDataConfig(com.mojang.serialization.Dynamic<?> arg0)",
			"fabric": "parseDataPackSettings(com.mojang.serialization.Dynamic<?> dynamic)"
		},
		{
			"forge": "getName()",
			"fabric": "getFormatName()"
		},
		{
			"forge": "findLevelCandidates()",
			"fabric": "getLevelList()"
		},
		{
			"forge": "loadLevelSummaries(LevelStorageSource$LevelCandidates arg0)",
			"fabric": "loadSummaries(LevelStorage$LevelList levels)"
		},
		{
			"forge": "getStorageVersion()",
			"fabric": "getCurrentVersion()"
		},
		{
			"forge": "readLevelData(LevelStorageSource$LevelDirectory arg0, BiFunction<Path, com.mojang.datafixers.DataFixer, T> arg1)",
			"fabric": "readLevelProperties(LevelStorage$LevelSave levelSave, BiFunction<Path, com.mojang.datafixers.DataFixer, T> levelDataParser)"
		},
		{
			"forge": "getDataConfiguration(Path arg0, com.mojang.datafixers.DataFixer arg1)",
			"fabric": "readDataPackSettings(Path path, com.mojang.datafixers.DataFixer dataFixer)"
		},
		{
			"forge": "getLevelData(com.mojang.serialization.DynamicOps<Tag> arg0, WorldDataConfiguration arg1, Registry<LevelStem> arg2, com.mojang.serialization.Lifecycle arg3)",
			"fabric": "createLevelDataParser(com.mojang.serialization.DynamicOps<NbtElement> ops, DataConfiguration dataConfiguration, Registry<DimensionOptions> dimensionOptionsRegistry, com.mojang.serialization.Lifecycle lifecycle)"
		},
		{
			"forge": "levelSummaryReader(LevelStorageSource$LevelDirectory arg0, boolean arg1)",
			"fabric": "createLevelDataParser(LevelStorage$LevelSave levelSave, boolean locked)"
		},
		{
			"forge": "parseFeatureFlagsFromSummary(com.mojang.serialization.Dynamic<?> arg0)",
			"fabric": "parseEnabledFeatures(com.mojang.serialization.Dynamic<?> levelData)"
		},
		{
			"forge": "readLightweightData(Path arg0)",
			"fabric": "loadCompactLevelData(Path path)"
		},
		{
			"forge": "isNewLevelIdAcceptable(String arg0)",
			"fabric": "isLevelNameValid(String name)"
		},
		{
			"forge": "levelExists(String arg0)",
			"fabric": "levelExists(String name)"
		},
		{
			"forge": "getLevelPath(String arg0)",
			"fabric": "resolve(String name)"
		},
		{
			"forge": "getBaseDir()",
			"fabric": "getSavesDirectory()"
		},
		{
			"forge": "getBackupPath()",
			"fabric": "getBackupsDirectory()"
		},
		{
			"forge": "validateAndCreateAccess(String arg0)",
			"fabric": "createSession(String directoryName)"
		},
		{
			"forge": "createAccess(String arg0)",
			"fabric": "createSessionWithoutSymlinkCheck(String directoryName)"
		},
		{
			"forge": "getWorldDirValidator()",
			"fabric": "getSymlinkFinder()"
		}
	]
}