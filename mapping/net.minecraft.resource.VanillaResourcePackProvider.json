{
	"title": "net.minecraft.server.packs.repository.BuiltInPackSource",
	"items": [
		{
			"forge": "net.minecraft.server.packs.repository.BuiltInPackSource",
			"fabric": "net.minecraft.resource.VanillaResourcePackProvider"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "VANILLA_ID",
			"fabric": "VANILLA_KEY"
		},
		{
			"forge": "packType",
			"fabric": "type"
		},
		{
			"forge": "vanillaPack",
			"fabric": "resourcePack"
		},
		{
			"forge": "packDir",
			"fabric": "id"
		},
		{
			"forge": "loadPacks(Consumer<Pack> arg0)",
			"fabric": "register(Consumer<ResourcePackProfile> arg0)"
		},
		{
			"forge": "loadPacks(Consumer<Pack> arg0)",
			"fabric": "register(Consumer<ResourcePackProfile> arg0)"
		},
		{
			"forge": "createVanillaPack(PackResources arg0)",
			"fabric": "createDefault(ResourcePack pack)"
		},
		{
			"forge": "getPackTitle(String arg0)",
			"fabric": "getProfileName(String id)"
		},
		{
			"forge": "getVanillaPack()",
			"fabric": "getResourcePack()"
		},
		{
			"forge": "listBundledPacks(Consumer<Pack> arg0)",
			"fabric": "forEachProfile(Consumer<ResourcePackProfile> consumer)"
		},
		{
			"forge": "populatePackList(BiConsumer<String, Function<String, Pack>> arg0)",
			"fabric": "forEachProfile(BiConsumer<String, Function<String, ResourcePackProfile>> consumer)"
		},
		{
			"forge": "discoverPacksInPath(Path arg0, BiConsumer<String, Function<String, Pack>> arg1)",
			"fabric": "forEachProfile(Path namespacedPath, BiConsumer<String, Function<String, ResourcePackProfile>> consumer)"
		},
		{
			"forge": "pathToId(Path arg0)",
			"fabric": "getFileName(Path path)"
		},
		{
			"forge": "createBuiltinPack(String arg0, Pack$ResourcesSupplier arg1, Component arg2)",
			"fabric": "create(String name, ResourcePackProfile$PackFactory packFactory, Text displayName)"
		}
	]
}