{
	"title": "net.minecraft.world.level.levelgen.Beardifier",
	"items": [
		{
			"forge": "net.minecraft.world.level.levelgen.Beardifier",
			"fabric": "net.minecraft.world.gen.StructureWeightSampler"
		},
		{
			"forge": "BEARD_KERNEL_RADIUS",
			"fabric": "INDEX_OFFSET"
		},
		{
			"forge": "BEARD_KERNEL_RADIUS",
			"fabric": "INDEX_OFFSET"
		},
		{
			"forge": "BEARD_KERNEL_SIZE",
			"fabric": "EDGE_LENGTH"
		},
		{
			"forge": "BEARD_KERNEL",
			"fabric": "STRUCTURE_WEIGHT_TABLE"
		},
		{
			"forge": "pieceIterator",
			"fabric": "pieceIterator"
		},
		{
			"forge": "junctionIterator",
			"fabric": "junctionIterator"
		},
		{
			"forge": "forStructuresInChunk(StructureManager arg0, ChunkPos arg1)",
			"fabric": "createStructureWeightSampler(StructureAccessor world, ChunkPos pos)"
		},
		{
			"forge": "forStructuresInChunk(StructureManager arg0, ChunkPos arg1)",
			"fabric": "createStructureWeightSampler(StructureAccessor world, ChunkPos pos)"
		},
		{
			"forge": "compute(DensityFunction$FunctionContext arg0)",
			"fabric": "sample(DensityFunction$NoisePos arg0)"
		},
		{
			"forge": "minValue()",
			"fabric": "minValue()"
		},
		{
			"forge": "maxValue()",
			"fabric": "maxValue()"
		},
		{
			"forge": "getBuryContribution(int arg0, int arg1, int arg2)",
			"fabric": "getMagnitudeWeight(int x, int y, int z)"
		},
		{
			"forge": "getBeardContribution(int arg0, int arg1, int arg2, int arg3)",
			"fabric": "getStructureWeight(int x, int y, int z, int yy)"
		},
		{
			"forge": "isInKernelRange(int arg0)",
			"fabric": "indexInBounds(int i)"
		},
		{
			"forge": "computeBeardContribution(int arg0, int arg1, int arg2)",
			"fabric": "calculateStructureWeight(int x, int y, int z)"
		},
		{
			"forge": "computeBeardContribution(int arg0, double arg1, int arg2)",
			"fabric": "structureWeight(int x, double y, int z)"
		}
	]
}