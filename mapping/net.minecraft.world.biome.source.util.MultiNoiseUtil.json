{
	"title": "net.minecraft.world.level.biome.Climate",
	"items": [
		{
			"forge": "net.minecraft.world.level.biome.Climate",
			"fabric": "net.minecraft.world.biome.source.util.MultiNoiseUtil"
		},
		{
			"forge": "DEBUG_SLOW_BIOME_SEARCH",
			"fabric": "field_34477"
		},
		{
			"forge": "DEBUG_SLOW_BIOME_SEARCH",
			"fabric": "field_34477"
		},
		{
			"forge": "QUANTIZATION_FACTOR",
			"fabric": "TO_LONG_FACTOR"
		},
		{
			"forge": "PARAMETER_COUNT",
			"fabric": "HYPERCUBE_DIMENSION"
		},
		{
			"forge": "target(float arg0, float arg1, float arg2, float arg3, float arg4, float arg5)",
			"fabric": "createNoiseValuePoint(float temperatureNoise, float humidityNoise, float continentalnessNoise, float erosionNoise, float depth, float weirdnessNoise)"
		},
		{
			"forge": "target(float arg0, float arg1, float arg2, float arg3, float arg4, float arg5)",
			"fabric": "createNoiseValuePoint(float temperatureNoise, float humidityNoise, float continentalnessNoise, float erosionNoise, float depth, float weirdnessNoise)"
		},
		{
			"forge": "parameters(float arg0, float arg1, float arg2, float arg3, float arg4, float arg5, float arg6)",
			"fabric": "createNoiseHypercube(float temperature, float humidity, float continentalness, float erosion, float depth, float weirdness, float offset)"
		},
		{
			"forge": "parameters(Climate$Parameter arg0, Climate$Parameter arg1, Climate$Parameter arg2, Climate$Parameter arg3, Climate$Parameter arg4, Climate$Parameter arg5, float arg6)",
			"fabric": "createNoiseHypercube(MultiNoiseUtil$ParameterRange temperature, MultiNoiseUtil$ParameterRange humidity, MultiNoiseUtil$ParameterRange continentalness, MultiNoiseUtil$ParameterRange erosion, MultiNoiseUtil$ParameterRange depth, MultiNoiseUtil$ParameterRange weirdness, float offset)"
		},
		{
			"forge": "quantizeCoord(float arg0)",
			"fabric": "toLong(float value)"
		},
		{
			"forge": "unquantizeCoord(long arg0)",
			"fabric": "toFloat(long value)"
		},
		{
			"forge": "empty()",
			"fabric": "createEmptyMultiNoiseSampler()"
		},
		{
			"forge": "findSpawnPosition(List<Climate$ParameterPoint> arg0, Climate$Sampler arg1)",
			"fabric": "findFittestPosition(List<MultiNoiseUtil$NoiseHypercube> noises, MultiNoiseUtil$MultiNoiseSampler sampler)"
		}
	]
}