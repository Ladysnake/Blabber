{
	"title": "net.minecraft.client.renderer.block.model.FaceBakery",
	"items": [
		{
			"forge": "net.minecraft.client.renderer.block.model.FaceBakery",
			"fabric": "net.minecraft.client.render.model.BakedQuadFactory"
		},
		{
			"forge": "VERTEX_INT_SIZE",
			"fabric": "field_32796"
		},
		{
			"forge": "VERTEX_INT_SIZE",
			"fabric": "field_32796"
		},
		{
			"forge": "RESCALE_22_5",
			"fabric": "MIN_SCALE"
		},
		{
			"forge": "RESCALE_45",
			"fabric": "MAX_SCALE"
		},
		{
			"forge": "VERTEX_COUNT",
			"fabric": "field_32797"
		},
		{
			"forge": "COLOR_INDEX",
			"fabric": "field_32799"
		},
		{
			"forge": "UV_INDEX",
			"fabric": "field_32798"
		},
		{
			"forge": "bakeQuad(org.joml.Vector3f arg0, org.joml.Vector3f arg1, BlockElementFace arg2, TextureAtlasSprite arg3, Direction arg4, ModelState arg5, BlockElementRotation arg6, boolean arg7, ResourceLocation arg8)",
			"fabric": "bake(org.joml.Vector3f from, org.joml.Vector3f to, ModelElementFace face, Sprite texture, Direction side, ModelBakeSettings settings, ModelRotation rotation, boolean shade, Identifier modelId)"
		},
		{
			"forge": "bakeQuad(org.joml.Vector3f arg0, org.joml.Vector3f arg1, BlockElementFace arg2, TextureAtlasSprite arg3, Direction arg4, ModelState arg5, BlockElementRotation arg6, boolean arg7, ResourceLocation arg8)",
			"fabric": "bake(org.joml.Vector3f from, org.joml.Vector3f to, ModelElementFace face, Sprite texture, Direction side, ModelBakeSettings settings, ModelRotation rotation, boolean shade, Identifier modelId)"
		},
		{
			"forge": "recomputeUVs(BlockFaceUV arg0, Direction arg1, Transformation arg2, ResourceLocation arg3)",
			"fabric": "uvLock(ModelElementTexture texture, Direction orientation, AffineTransformation rotation, Identifier modelId)"
		},
		{
			"forge": "makeVertices(BlockFaceUV arg0, TextureAtlasSprite arg1, Direction arg2, float[] arg3, Transformation arg4, BlockElementRotation arg5, boolean arg6)",
			"fabric": "packVertexData(ModelElementTexture texture, Sprite sprite, Direction direction, float[] positionMatrix, AffineTransformation orientation, ModelRotation rotation, boolean shaded)"
		},
		{
			"forge": "setupShape(org.joml.Vector3f arg0, org.joml.Vector3f arg1)",
			"fabric": "getPositionMatrix(org.joml.Vector3f from, org.joml.Vector3f to)"
		},
		{
			"forge": "bakeVertex(int[] arg0, int arg1, Direction arg2, BlockFaceUV arg3, float[] arg4, TextureAtlasSprite arg5, Transformation arg6, BlockElementRotation arg7, boolean arg8)",
			"fabric": "packVertexData(int[] vertices, int cornerIndex, Direction direction, ModelElementTexture texture, float[] positionMatrix, Sprite sprite, AffineTransformation orientation, ModelRotation rotation, boolean shaded)"
		},
		{
			"forge": "fillVertex(int[] arg0, int arg1, org.joml.Vector3f arg2, TextureAtlasSprite arg3, BlockFaceUV arg4)",
			"fabric": "packVertexData(int[] vertices, int cornerIndex, org.joml.Vector3f position, Sprite sprite, ModelElementTexture modelElementTexture)"
		},
		{
			"forge": "applyElementRotation(org.joml.Vector3f arg0, BlockElementRotation arg1)",
			"fabric": "rotateVertex(org.joml.Vector3f vector, ModelRotation rotation)"
		},
		{
			"forge": "applyModelRotation(org.joml.Vector3f arg0, Transformation arg1)",
			"fabric": "transformVertex(org.joml.Vector3f vertex, AffineTransformation transformation)"
		},
		{
			"forge": "rotateVertexBy(org.joml.Vector3f arg0, org.joml.Vector3f arg1, org.joml.Matrix4f arg2, org.joml.Vector3f arg3)",
			"fabric": "transformVertex(org.joml.Vector3f vertex, org.joml.Vector3f origin, org.joml.Matrix4f transformationMatrix, org.joml.Vector3f scale)"
		},
		{
			"forge": "calculateFacing(int[] arg0)",
			"fabric": "decodeDirection(int[] rotationMatrix)"
		},
		{
			"forge": "recalculateWinding(int[] arg0, Direction arg1)",
			"fabric": "encodeDirection(int[] rotationMatrix, Direction direction)"
		}
	]
}