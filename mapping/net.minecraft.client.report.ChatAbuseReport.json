{
	"title": "net.minecraft.client.multiplayer.chat.report.ChatReportBuilder",
	"items": [
		{
			"forge": "net.minecraft.client.multiplayer.chat.report.ChatReportBuilder",
			"fabric": "net.minecraft.client.report.ChatAbuseReport"
		},
		{
			"forge": "report",
			"fabric": "draft"
		},
		{
			"forge": "report",
			"fabric": "draft"
		},
		{
			"forge": "limits",
			"fabric": "limits"
		},
		{
			"forge": "report()",
			"fabric": "getDraft()"
		},
		{
			"forge": "report()",
			"fabric": "getDraft()"
		},
		{
			"forge": "reportedProfileId()",
			"fabric": "getReportedPlayerUuid()"
		},
		{
			"forge": "reportedMessages()",
			"fabric": "getSelections()"
		},
		{
			"forge": "comments()",
			"fabric": "getOpinionComments()"
		},
		{
			"forge": "setComments(String arg0)",
			"fabric": "setOpinionComments(String opinionComments)"
		},
		{
			"forge": "reason()",
			"fabric": "getReason()"
		},
		{
			"forge": "setReason(ReportReason arg0)",
			"fabric": "setReason(AbuseReportReason reason)"
		},
		{
			"forge": "toggleReported(int arg0)",
			"fabric": "toggleMessageSelection(int index)"
		},
		{
			"forge": "isReported(int arg0)",
			"fabric": "hasSelectedMessage(int index)"
		},
		{
			"forge": "hasContent()",
			"fabric": "hasContents()"
		},
		{
			"forge": "checkBuildable()",
			"fabric": "validate()"
		},
		{
			"forge": "build(ReportingContext arg0)",
			"fabric": "finalizeReport(AbuseReportContext reporter)"
		},
		{
			"forge": "buildEvidence(ChatLog arg0)",
			"fabric": "collectEvidence(ChatLog log)"
		},
		{
			"forge": "buildReportedChatMessage(LoggedChatMessage$Player arg0, boolean arg1)",
			"fabric": "toReportChatMessage(ReceivedMessage$ChatMessage message, boolean selected)"
		},
		{
			"forge": "copy()",
			"fabric": "copy()"
		}
	]
}