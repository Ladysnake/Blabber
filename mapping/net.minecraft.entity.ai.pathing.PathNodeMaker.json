{
	"title": "net.minecraft.world.level.pathfinder.NodeEvaluator",
	"items": [
		{
			"forge": "net.minecraft.world.level.pathfinder.NodeEvaluator",
			"fabric": "net.minecraft.entity.ai.pathing.PathNodeMaker"
		},
		{
			"forge": "level",
			"fabric": "cachedWorld"
		},
		{
			"forge": "level",
			"fabric": "cachedWorld"
		},
		{
			"forge": "mob",
			"fabric": "entity"
		},
		{
			"forge": "nodes",
			"fabric": "pathNodeCache"
		},
		{
			"forge": "entityWidth",
			"fabric": "entityBlockXSize"
		},
		{
			"forge": "entityHeight",
			"fabric": "entityBlockYSize"
		},
		{
			"forge": "entityDepth",
			"fabric": "entityBlockZSize"
		},
		{
			"forge": "canPassDoors",
			"fabric": "canEnterOpenDoors"
		},
		{
			"forge": "canOpenDoors",
			"fabric": "canOpenDoors"
		},
		{
			"forge": "canFloat",
			"fabric": "canSwim"
		},
		{
			"forge": "canWalkOverFences",
			"fabric": "canWalkOverFences"
		},
		{
			"forge": "prepare(PathNavigationRegion arg0, Mob arg1)",
			"fabric": "init(ChunkCache cachedWorld, MobEntity entity)"
		},
		{
			"forge": "prepare(PathNavigationRegion arg0, Mob arg1)",
			"fabric": "init(ChunkCache cachedWorld, MobEntity entity)"
		},
		{
			"forge": "done()",
			"fabric": "clear()"
		},
		{
			"forge": "getNode(BlockPos arg0)",
			"fabric": "getNode(BlockPos pos)"
		},
		{
			"forge": "getNode(int arg0, int arg1, int arg2)",
			"fabric": "getNode(int x, int y, int z)"
		},
		{
			"forge": "getStart()",
			"fabric": "getStart()"
		},
		{
			"forge": "getGoal(double arg0, double arg1, double arg2)",
			"fabric": "getNode(double x, double y, double z)"
		},
		{
			"forge": "getTargetFromNode(Node arg0)",
			"fabric": "asTargetPathNode(PathNode node)"
		},
		{
			"forge": "getNeighbors(Node[] arg0, Node arg1)",
			"fabric": "getSuccessors(PathNode[] successors, PathNode node)"
		},
		{
			"forge": "getBlockPathType(BlockGetter arg0, int arg1, int arg2, int arg3, Mob arg4)",
			"fabric": "getNodeType(BlockView world, int x, int y, int z, MobEntity mob)"
		},
		{
			"forge": "getBlockPathType(BlockGetter arg0, int arg1, int arg2, int arg3)",
			"fabric": "getDefaultNodeType(BlockView world, int x, int y, int z)"
		},
		{
			"forge": "setCanPassDoors(boolean arg0)",
			"fabric": "setCanEnterOpenDoors(boolean canEnterOpenDoors)"
		},
		{
			"forge": "setCanOpenDoors(boolean arg0)",
			"fabric": "setCanOpenDoors(boolean canOpenDoors)"
		},
		{
			"forge": "setCanFloat(boolean arg0)",
			"fabric": "setCanSwim(boolean canSwim)"
		},
		{
			"forge": "setCanWalkOverFences(boolean arg0)",
			"fabric": "setCanWalkOverFences(boolean canWalkOverFences)"
		},
		{
			"forge": "canPassDoors()",
			"fabric": "canEnterOpenDoors()"
		},
		{
			"forge": "canOpenDoors()",
			"fabric": "canOpenDoors()"
		},
		{
			"forge": "canFloat()",
			"fabric": "canSwim()"
		},
		{
			"forge": "canWalkOverFences()",
			"fabric": "canWalkOverFences()"
		}
	]
}