{
	"title": "com.mojang.realmsclient.gui.screens.RealmsConfigureWorldScreen",
	"items": [
		{
			"forge": "com.mojang.realmsclient.gui.screens.RealmsConfigureWorldScreen",
			"fabric": "net.minecraft.client.realms.gui.screen.RealmsConfigureWorldScreen"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "ON_ICON_LOCATION",
			"fabric": "ON_ICON"
		},
		{
			"forge": "OFF_ICON_LOCATION",
			"fabric": "OFF_ICON"
		},
		{
			"forge": "EXPIRED_ICON_LOCATION",
			"fabric": "EXPIRED_ICON"
		},
		{
			"forge": "EXPIRES_SOON_ICON_LOCATION",
			"fabric": "EXPIRES_SOON_ICON"
		},
		{
			"forge": "WORLD_LIST_TITLE",
			"fabric": "WORLDS_TITLE"
		},
		{
			"forge": "TITLE",
			"fabric": "CONFIGURE_REALM_TITLE"
		},
		{
			"forge": "SERVER_EXPIRED_TOOLTIP",
			"fabric": "EXPIRED_TEXT"
		},
		{
			"forge": "SERVER_EXPIRING_SOON_TOOLTIP",
			"fabric": "EXPIRES_SOON_TEXT"
		},
		{
			"forge": "SERVER_EXPIRING_IN_DAY_TOOLTIP",
			"fabric": "EXPIRES_IN_A_DAY_TEXT"
		},
		{
			"forge": "SERVER_OPEN_TOOLTIP",
			"fabric": "OPEN_TEXT"
		},
		{
			"forge": "SERVER_CLOSED_TOOLTIP",
			"fabric": "CLOSED_TEXT"
		},
		{
			"forge": "DEFAULT_BUTTON_WIDTH",
			"fabric": "field_32121"
		},
		{
			"forge": "DEFAULT_BUTTON_OFFSET",
			"fabric": "field_32122"
		},
		{
			"forge": "toolTip",
			"fabric": "tooltip"
		},
		{
			"forge": "lastScreen",
			"fabric": "parent"
		},
		{
			"forge": "serverData",
			"fabric": "server"
		},
		{
			"forge": "serverId",
			"fabric": "serverId"
		},
		{
			"forge": "leftX",
			"fabric": "left_x"
		},
		{
			"forge": "rightX",
			"fabric": "right_x"
		},
		{
			"forge": "playersButton",
			"fabric": "playersButton"
		},
		{
			"forge": "settingsButton",
			"fabric": "settingsButton"
		},
		{
			"forge": "subscriptionButton",
			"fabric": "subscriptionButton"
		},
		{
			"forge": "optionsButton",
			"fabric": "optionsButton"
		},
		{
			"forge": "backupButton",
			"fabric": "backupButton"
		},
		{
			"forge": "resetWorldButton",
			"fabric": "resetWorldButton"
		},
		{
			"forge": "switchMinigameButton",
			"fabric": "switchMinigameButton"
		},
		{
			"forge": "stateChanged",
			"fabric": "stateChanged"
		},
		{
			"forge": "animTick",
			"fabric": "animTick"
		},
		{
			"forge": "clicks",
			"fabric": "clicks"
		},
		{
			"forge": "slotButtonList",
			"fabric": "slotButtons"
		},
		{
			"forge": "init()",
			"fabric": "init()"
		},
		{
			"forge": "init()",
			"fabric": "init()"
		},
		{
			"forge": "addSlotButton(int arg0)",
			"fabric": "addSlotButton(int slotIndex)"
		},
		{
			"forge": "leftButton(int arg0)",
			"fabric": "buttonLeft(int i)"
		},
		{
			"forge": "centerButton(int arg0, int arg1)",
			"fabric": "buttonCenter(int i, int total)"
		},
		{
			"forge": "tick()",
			"fabric": "tick()"
		},
		{
			"forge": "render(GuiGraphics arg0, int arg1, int arg2, float arg3)",
			"fabric": "render(DrawContext arg0, int arg1, int arg2, float arg3)"
		},
		{
			"forge": "frame(int arg0)",
			"fabric": "frame(int ordinal)"
		},
		{
			"forge": "keyPressed(int arg0, int arg1, int arg2)",
			"fabric": "keyPressed(int arg0, int arg1, int arg2)"
		},
		{
			"forge": "backButtonClicked()",
			"fabric": "backButtonClicked()"
		},
		{
			"forge": "fetchServerData(long arg0)",
			"fabric": "fetchServerData(long worldId)"
		},
		{
			"forge": "disableButtons()",
			"fabric": "disableButtons()"
		},
		{
			"forge": "joinRealm(RealmsServer arg0)",
			"fabric": "joinRealm(RealmsServer serverData)"
		},
		{
			"forge": "switchToMinigame()",
			"fabric": "switchToMinigame()"
		},
		{
			"forge": "switchToFullSlot(int arg0, RealmsServer arg1)",
			"fabric": "switchToFullSlot(int selectedSlot, RealmsServer serverData)"
		},
		{
			"forge": "switchToEmptySlot(int arg0, RealmsServer arg1)",
			"fabric": "switchToEmptySlot(int selectedSlot, RealmsServer serverData)"
		},
		{
			"forge": "renderMousehoverTooltip(GuiGraphics arg0, Component arg1, int arg2, int arg3)",
			"fabric": "renderMousehoverTooltip(DrawContext context, Text text, int mouseX, int mouseY)"
		},
		{
			"forge": "drawServerStatus(GuiGraphics arg0, int arg1, int arg2, int arg3, int arg4)",
			"fabric": "drawServerStatus(DrawContext context, int x, int y, int mouseX, int mouseY)"
		},
		{
			"forge": "drawExpired(GuiGraphics arg0, int arg1, int arg2, int arg3, int arg4)",
			"fabric": "drawExpired(DrawContext context, int x, int y, int mouseX, int mouseY)"
		},
		{
			"forge": "drawExpiring(GuiGraphics arg0, int arg1, int arg2, int arg3, int arg4, int arg5)",
			"fabric": "drawExpiring(DrawContext context, int x, int y, int mouseX, int mouseY, int remainingDays)"
		},
		{
			"forge": "drawOpen(GuiGraphics arg0, int arg1, int arg2, int arg3, int arg4)",
			"fabric": "drawOpen(DrawContext context, int x, int y, int mouseX, int mouseY)"
		},
		{
			"forge": "drawClose(GuiGraphics arg0, int arg1, int arg2, int arg3, int arg4)",
			"fabric": "drawClosed(DrawContext context, int x, int y, int mouseX, int mouseY)"
		},
		{
			"forge": "isMinigame()",
			"fabric": "isMinigame()"
		},
		{
			"forge": "hideRegularButtons()",
			"fabric": "hideRegularButtons()"
		},
		{
			"forge": "hide(Button arg0)",
			"fabric": "removeButton(ButtonWidget button)"
		},
		{
			"forge": "show(Button arg0)",
			"fabric": "addButton(ButtonWidget button)"
		},
		{
			"forge": "hideMinigameButtons()",
			"fabric": "hideMinigameButtons()"
		},
		{
			"forge": "saveSlotSettings(RealmsWorldOptions arg0)",
			"fabric": "saveSlotSettings(RealmsWorldOptions options)"
		},
		{
			"forge": "saveSettings(String arg0, String arg1)",
			"fabric": "saveSettings(String name, String desc)"
		},
		{
			"forge": "openTheWorld(boolean arg0, Screen arg1)",
			"fabric": "openTheWorld(boolean join, Screen screen)"
		},
		{
			"forge": "closeTheWorld(Screen arg0)",
			"fabric": "closeTheWorld(Screen screen)"
		},
		{
			"forge": "stateChanged()",
			"fabric": "stateChanged()"
		},
		{
			"forge": "templateSelectionCallback(WorldTemplate arg0)",
			"fabric": "switchMinigame(WorldTemplate template)"
		},
		{
			"forge": "getNewScreen()",
			"fabric": "getNewScreen()"
		}
	]
}