{
	"title": "net.minecraft.server.level.DistanceManager",
	"items": [
		{
			"forge": "net.minecraft.server.level.DistanceManager",
			"fabric": "net.minecraft.server.world.ChunkTicketManager"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "PLAYER_TICKET_LEVEL",
			"fabric": "NEARBY_PLAYER_TICKET_LEVEL"
		},
		{
			"forge": "INITIAL_TICKET_LIST_CAPACITY",
			"fabric": "field_29765"
		},
		{
			"forge": "playersPerChunk",
			"fabric": "playersByChunkPos"
		},
		{
			"forge": "tickets",
			"fabric": "ticketsByPosition"
		},
		{
			"forge": "ticketTracker",
			"fabric": "distanceFromTicketTracker"
		},
		{
			"forge": "naturalSpawnChunkCounter",
			"fabric": "distanceFromNearestPlayerTracker"
		},
		{
			"forge": "tickingTicketsTracker",
			"fabric": "simulationDistanceTracker"
		},
		{
			"forge": "playerTicketManager",
			"fabric": "nearbyChunkTicketUpdater"
		},
		{
			"forge": "chunksToUpdateFutures",
			"fabric": "chunkHolders"
		},
		{
			"forge": "ticketThrottler",
			"fabric": "levelUpdateListener"
		},
		{
			"forge": "ticketThrottlerInput",
			"fabric": "playerTicketThrottler"
		},
		{
			"forge": "ticketThrottlerReleaser",
			"fabric": "playerTicketThrottlerUnblocker"
		},
		{
			"forge": "ticketsToRelease",
			"fabric": "chunkPositions"
		},
		{
			"forge": "mainThreadExecutor",
			"fabric": "mainThreadExecutor"
		},
		{
			"forge": "ticketTickCounter",
			"fabric": "age"
		},
		{
			"forge": "simulationDistance",
			"fabric": "simulationDistance"
		},
		{
			"forge": "purgeStaleTickets()",
			"fabric": "purge()"
		},
		{
			"forge": "purgeStaleTickets()",
			"fabric": "purge()"
		},
		{
			"forge": "getTicketLevelAt(SortedArraySet<Ticket<?>> arg0)",
			"fabric": "getLevel(SortedArraySet<ChunkTicket<?>> tickets)"
		},
		{
			"forge": "isChunkToRemove(long arg0)",
			"fabric": "isUnloaded(long pos)"
		},
		{
			"forge": "getChunk(long arg0)",
			"fabric": "getChunkHolder(long pos)"
		},
		{
			"forge": "updateChunkScheduling(long arg0, int arg1, ChunkHolder arg2, int arg3)",
			"fabric": "setLevel(long pos, int level, ChunkHolder holder, int arg3)"
		},
		{
			"forge": "runAllUpdates(ChunkMap arg0)",
			"fabric": "tick(ThreadedAnvilChunkStorage chunkStorage)"
		},
		{
			"forge": "addTicket(long arg0, Ticket<?> arg1)",
			"fabric": "addTicket(long position, ChunkTicket<?> ticket)"
		},
		{
			"forge": "removeTicket(long arg0, Ticket<?> arg1)",
			"fabric": "removeTicket(long pos, ChunkTicket<?> ticket)"
		},
		{
			"forge": "addTicket(TicketType<T> arg0, ChunkPos arg1, int arg2, T arg3)",
			"fabric": "addTicketWithLevel(ChunkTicketType<T> type, ChunkPos pos, int level, T argument)"
		},
		{
			"forge": "removeTicket(TicketType<T> arg0, ChunkPos arg1, int arg2, T arg3)",
			"fabric": "removeTicketWithLevel(ChunkTicketType<T> type, ChunkPos pos, int level, T argument)"
		},
		{
			"forge": "addRegionTicket(TicketType<T> arg0, ChunkPos arg1, int arg2, T arg3)",
			"fabric": "addTicket(ChunkTicketType<T> type, ChunkPos pos, int radius, T argument)"
		},
		{
			"forge": "removeRegionTicket(TicketType<T> arg0, ChunkPos arg1, int arg2, T arg3)",
			"fabric": "removeTicket(ChunkTicketType<T> type, ChunkPos pos, int radius, T argument)"
		},
		{
			"forge": "getTickets(long arg0)",
			"fabric": "getTicketSet(long position)"
		},
		{
			"forge": "updateChunkForced(ChunkPos arg0, boolean arg1)",
			"fabric": "setChunkForced(ChunkPos pos, boolean forced)"
		},
		{
			"forge": "addPlayer(SectionPos arg0, ServerPlayer arg1)",
			"fabric": "handleChunkEnter(ChunkSectionPos pos, ServerPlayerEntity player)"
		},
		{
			"forge": "removePlayer(SectionPos arg0, ServerPlayer arg1)",
			"fabric": "handleChunkLeave(ChunkSectionPos pos, ServerPlayerEntity player)"
		},
		{
			"forge": "getPlayerTicketLevel()",
			"fabric": "getPlayerSimulationLevel()"
		},
		{
			"forge": "inEntityTickingRange(long arg0)",
			"fabric": "shouldTickEntities(long chunkPos)"
		},
		{
			"forge": "inBlockTickingRange(long arg0)",
			"fabric": "shouldTickBlocks(long chunkPos)"
		},
		{
			"forge": "getTicketDebugString(long arg0)",
			"fabric": "getTicket(long pos)"
		},
		{
			"forge": "updatePlayerTickets(int arg0)",
			"fabric": "setWatchDistance(int viewDistance)"
		},
		{
			"forge": "updateSimulationDistance(int arg0)",
			"fabric": "setSimulationDistance(int simulationDistance)"
		},
		{
			"forge": "getNaturalSpawnChunkCount()",
			"fabric": "getTickedChunkCount()"
		},
		{
			"forge": "hasPlayersNearby(long arg0)",
			"fabric": "shouldTick(long chunkPos)"
		},
		{
			"forge": "getDebugStatus()",
			"fabric": "toDumpString()"
		},
		{
			"forge": "dumpTickets(String arg0)",
			"fabric": "dump(String path)"
		},
		{
			"forge": "tickingTracker()",
			"fabric": "getSimulationDistanceTracker()"
		},
		{
			"forge": "removeTicketsOnClosing()",
			"fabric": "removePersistentTickets()"
		},
		{
			"forge": "hasTickets()",
			"fabric": "shouldDelayShutdown()"
		}
	]
}