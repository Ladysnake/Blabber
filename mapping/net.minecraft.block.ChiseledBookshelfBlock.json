{
	"title": "net.minecraft.world.level.block.ChiseledBookShelfBlock",
	"items": [
		{
			"forge": "net.minecraft.world.level.block.ChiseledBookShelfBlock",
			"fabric": "net.minecraft.block.ChiseledBookshelfBlock"
		},
		{
			"forge": "MAX_BOOKS_IN_STORAGE",
			"fabric": "MAX_BOOK_COUNT"
		},
		{
			"forge": "MAX_BOOKS_IN_STORAGE",
			"fabric": "MAX_BOOK_COUNT"
		},
		{
			"forge": "BOOKS_PER_ROW",
			"fabric": "BOOK_HEIGHT"
		},
		{
			"forge": "SLOT_OCCUPIED_PROPERTIES",
			"fabric": "SLOT_OCCUPIED_PROPERTIES"
		},
		{
			"forge": "getRenderShape(BlockState arg0)",
			"fabric": "getRenderType(BlockState arg0)"
		},
		{
			"forge": "getRenderShape(BlockState arg0)",
			"fabric": "getRenderType(BlockState arg0)"
		},
		{
			"forge": "use(BlockState arg0, Level arg1, BlockPos arg2, Player arg3, InteractionHand arg4, BlockHitResult arg5)",
			"fabric": "onUse(BlockState arg0, World arg1, BlockPos arg2, PlayerEntity arg3, Hand arg4, BlockHitResult arg5)"
		},
		{
			"forge": "getRelativeHitCoordinatesForBlockFace(BlockHitResult arg0, Direction arg1)",
			"fabric": "getHitPos(BlockHitResult hit, Direction facing)"
		},
		{
			"forge": "getHitSlot(Vec2 arg0)",
			"fabric": "getSlotForHitPos(Vec2f hitPos)"
		},
		{
			"forge": "getSection(float arg0)",
			"fabric": "getColumn(float x)"
		},
		{
			"forge": "addBook(Level arg0, BlockPos arg1, Player arg2, ChiseledBookShelfBlockEntity arg3, ItemStack arg4, int arg5)",
			"fabric": "tryAddBook(World world, BlockPos pos, PlayerEntity player, ChiseledBookshelfBlockEntity blockEntity, ItemStack stack, int slot)"
		},
		{
			"forge": "removeBook(Level arg0, BlockPos arg1, Player arg2, ChiseledBookShelfBlockEntity arg3, int arg4)",
			"fabric": "tryRemoveBook(World world, BlockPos pos, PlayerEntity player, ChiseledBookshelfBlockEntity blockEntity, int slot)"
		},
		{
			"forge": "newBlockEntity(BlockPos arg0, BlockState arg1)",
			"fabric": "createBlockEntity(BlockPos arg0, BlockState arg1)"
		},
		{
			"forge": "createBlockStateDefinition(StateDefinition$Builder<Block, BlockState> arg0)",
			"fabric": "appendProperties(StateManager$Builder<Block, BlockState> arg0)"
		},
		{
			"forge": "onRemove(BlockState arg0, Level arg1, BlockPos arg2, BlockState arg3, boolean arg4)",
			"fabric": "onStateReplaced(BlockState arg0, World arg1, BlockPos arg2, BlockState arg3, boolean arg4)"
		},
		{
			"forge": "getStateForPlacement(BlockPlaceContext arg0)",
			"fabric": "getPlacementState(ItemPlacementContext arg0)"
		},
		{
			"forge": "rotate(BlockState arg0, Rotation arg1)",
			"fabric": "rotate(BlockState arg0, BlockRotation arg1)"
		},
		{
			"forge": "mirror(BlockState arg0, Mirror arg1)",
			"fabric": "mirror(BlockState arg0, BlockMirror arg1)"
		},
		{
			"forge": "hasAnalogOutputSignal(BlockState arg0)",
			"fabric": "hasComparatorOutput(BlockState arg0)"
		},
		{
			"forge": "getAnalogOutputSignal(BlockState arg0, Level arg1, BlockPos arg2)",
			"fabric": "getComparatorOutput(BlockState arg0, World arg1, BlockPos arg2)"
		}
	]
}