{
	"title": "net.minecraft.world.entity.monster.ZombifiedPiglin",
	"items": [
		{
			"forge": "net.minecraft.world.entity.monster.ZombifiedPiglin",
			"fabric": "net.minecraft.entity.mob.ZombifiedPiglinEntity"
		},
		{
			"forge": "SPEED_MODIFIER_ATTACKING_UUID",
			"fabric": "ATTACKING_SPEED_BOOST_ID"
		},
		{
			"forge": "SPEED_MODIFIER_ATTACKING_UUID",
			"fabric": "ATTACKING_SPEED_BOOST_ID"
		},
		{
			"forge": "SPEED_MODIFIER_ATTACKING",
			"fabric": "ATTACKING_SPEED_BOOST"
		},
		{
			"forge": "FIRST_ANGER_SOUND_DELAY",
			"fabric": "ANGRY_SOUND_DELAY_RANGE"
		},
		{
			"forge": "playFirstAngerSoundIn",
			"fabric": "angrySoundDelay"
		},
		{
			"forge": "PERSISTENT_ANGER_TIME",
			"fabric": "ANGER_TIME_RANGE"
		},
		{
			"forge": "remainingPersistentAngerTime",
			"fabric": "angerTime"
		},
		{
			"forge": "persistentAngerTarget",
			"fabric": "angryAt"
		},
		{
			"forge": "ALERT_RANGE_Y",
			"fabric": "field_30524"
		},
		{
			"forge": "ALERT_INTERVAL",
			"fabric": "ANGER_PASSING_COOLDOWN_RANGE"
		},
		{
			"forge": "ticksUntilNextAlert",
			"fabric": "angerPassingCooldown"
		},
		{
			"forge": "ZOMBIFIED_PIGLIN_EYE_HEIGHT",
			"fabric": "EYE_HEIGHT"
		},
		{
			"forge": "ZOMBIFIED_PIGLIN_BABY_EYE_HEIGHT_ADJUSTMENT",
			"fabric": "BABY_EYE_HEIGHT_OFFSET"
		},
		{
			"forge": "setPersistentAngerTarget(UUID arg0)",
			"fabric": "setAngryAt(UUID arg0)"
		},
		{
			"forge": "setPersistentAngerTarget(UUID arg0)",
			"fabric": "setAngryAt(UUID arg0)"
		},
		{
			"forge": "getMyRidingOffset()",
			"fabric": "getHeightOffset()"
		},
		{
			"forge": "addBehaviourGoals()",
			"fabric": "initCustomGoals()"
		},
		{
			"forge": "createAttributes()",
			"fabric": "createZombifiedPiglinAttributes()"
		},
		{
			"forge": "getStandingEyeHeight(Pose arg0, EntityDimensions arg1)",
			"fabric": "getActiveEyeHeight(EntityPose arg0, EntityDimensions arg1)"
		},
		{
			"forge": "convertsInWater()",
			"fabric": "canConvertInWater()"
		},
		{
			"forge": "customServerAiStep()",
			"fabric": "mobTick()"
		},
		{
			"forge": "maybePlayFirstAngerSound()",
			"fabric": "tickAngrySound()"
		},
		{
			"forge": "maybeAlertOthers()",
			"fabric": "tickAngerPassing()"
		},
		{
			"forge": "alertOthers()",
			"fabric": "angerNearbyZombifiedPiglins()"
		},
		{
			"forge": "playAngerSound()",
			"fabric": "playAngrySound()"
		},
		{
			"forge": "setTarget(LivingEntity arg0)",
			"fabric": "setTarget(LivingEntity arg0)"
		},
		{
			"forge": "startPersistentAngerTimer()",
			"fabric": "chooseRandomAngerTime()"
		},
		{
			"forge": "checkZombifiedPiglinSpawnRules(EntityType<ZombifiedPiglin> arg0, LevelAccessor arg1, MobSpawnType arg2, BlockPos arg3, RandomSource arg4)",
			"fabric": "canSpawn(EntityType<ZombifiedPiglinEntity> type, WorldAccess world, SpawnReason spawnReason, BlockPos pos, Random random)"
		},
		{
			"forge": "checkSpawnObstruction(LevelReader arg0)",
			"fabric": "canSpawn(WorldView arg0)"
		},
		{
			"forge": "addAdditionalSaveData(CompoundTag arg0)",
			"fabric": "writeCustomDataToNbt(NbtCompound arg0)"
		},
		{
			"forge": "readAdditionalSaveData(CompoundTag arg0)",
			"fabric": "readCustomDataFromNbt(NbtCompound arg0)"
		},
		{
			"forge": "setRemainingPersistentAngerTime(int arg0)",
			"fabric": "setAngerTime(int arg0)"
		},
		{
			"forge": "getRemainingPersistentAngerTime()",
			"fabric": "getAngerTime()"
		},
		{
			"forge": "getAmbientSound()",
			"fabric": "getAmbientSound()"
		},
		{
			"forge": "getHurtSound(DamageSource arg0)",
			"fabric": "getHurtSound(DamageSource arg0)"
		},
		{
			"forge": "getDeathSound()",
			"fabric": "getDeathSound()"
		},
		{
			"forge": "populateDefaultEquipmentSlots(RandomSource arg0, DifficultyInstance arg1)",
			"fabric": "initEquipment(Random arg0, LocalDifficulty arg1)"
		},
		{
			"forge": "getSkull()",
			"fabric": "getSkull()"
		},
		{
			"forge": "randomizeReinforcementsChance()",
			"fabric": "initAttributes()"
		},
		{
			"forge": "getPersistentAngerTarget()",
			"fabric": "getAngryAt()"
		},
		{
			"forge": "isPreventingPlayerRest(Player arg0)",
			"fabric": "isAngryAt(PlayerEntity arg0)"
		},
		{
			"forge": "wantsToPickUp(ItemStack arg0)",
			"fabric": "canGather(ItemStack arg0)"
		}
	]
}