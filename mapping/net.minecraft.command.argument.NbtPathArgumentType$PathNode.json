{
	"title": "net.minecraft.commands.arguments.NbtPathArgument$Node",
	"items": [
		{
			"forge": "net.minecraft.commands.arguments.NbtPathArgument$Node",
			"fabric": "net.minecraft.command.argument.NbtPathArgumentType$PathNode"
		},
		{
			"forge": "getTag(Tag arg0, List<Tag> arg1)",
			"fabric": "get(NbtElement current, List<NbtElement> results)"
		},
		{
			"forge": "getTag(Tag arg0, List<Tag> arg1)",
			"fabric": "get(NbtElement current, List<NbtElement> results)"
		},
		{
			"forge": "getOrCreateTag(Tag arg0, Supplier<Tag> arg1, List<Tag> arg2)",
			"fabric": "getOrInit(NbtElement current, Supplier<NbtElement> source, List<NbtElement> results)"
		},
		{
			"forge": "createPreferredParentTag()",
			"fabric": "init()"
		},
		{
			"forge": "setTag(Tag arg0, Supplier<Tag> arg1)",
			"fabric": "set(NbtElement current, Supplier<NbtElement> source)"
		},
		{
			"forge": "removeTag(Tag arg0)",
			"fabric": "clear(NbtElement current)"
		},
		{
			"forge": "get(List<Tag> arg0)",
			"fabric": "get(List<NbtElement> elements)"
		},
		{
			"forge": "getOrCreate(List<Tag> arg0, Supplier<Tag> arg1)",
			"fabric": "getOrInit(List<NbtElement> elements, Supplier<NbtElement> supplier)"
		},
		{
			"forge": "collect(List<Tag> arg0, BiConsumer<Tag, List<Tag>> arg1)",
			"fabric": "process(List<NbtElement> elements, BiConsumer<NbtElement, List<NbtElement>> action)"
		}
	]
}