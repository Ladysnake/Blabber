{
	"title": "net.minecraft.util.FormattedCharSequence",
	"items": [
		{
			"forge": "net.minecraft.util.FormattedCharSequence",
			"fabric": "net.minecraft.text.OrderedText"
		},
		{
			"forge": "EMPTY",
			"fabric": "EMPTY"
		},
		{
			"forge": "EMPTY",
			"fabric": "EMPTY"
		},
		{
			"forge": "accept(FormattedCharSink arg0)",
			"fabric": "accept(CharacterVisitor visitor)"
		},
		{
			"forge": "accept(FormattedCharSink arg0)",
			"fabric": "accept(CharacterVisitor visitor)"
		},
		{
			"forge": "codepoint(int arg0, Style arg1)",
			"fabric": "styled(int codePoint, Style style)"
		},
		{
			"forge": "forward(String arg0, Style arg1)",
			"fabric": "styledForwardsVisitedString(String string, Style style)"
		},
		{
			"forge": "forward(String arg0, Style arg1, it.unimi.dsi.fastutil.ints.Int2IntFunction arg2)",
			"fabric": "styledForwardsVisitedString(String string, Style style, it.unimi.dsi.fastutil.ints.Int2IntFunction codePointMapper)"
		},
		{
			"forge": "backward(String arg0, Style arg1)",
			"fabric": "styledBackwardsVisitedString(String string, Style style)"
		},
		{
			"forge": "backward(String arg0, Style arg1, it.unimi.dsi.fastutil.ints.Int2IntFunction arg2)",
			"fabric": "styledBackwardsVisitedString(String string, Style style, it.unimi.dsi.fastutil.ints.Int2IntFunction codePointMapper)"
		},
		{
			"forge": "decorateOutput(FormattedCharSink arg0, it.unimi.dsi.fastutil.ints.Int2IntFunction arg1)",
			"fabric": "map(CharacterVisitor visitor, it.unimi.dsi.fastutil.ints.Int2IntFunction codePointMapper)"
		},
		{
			"forge": "composite()",
			"fabric": "empty()"
		},
		{
			"forge": "composite(FormattedCharSequence arg0)",
			"fabric": "of(OrderedText text)"
		},
		{
			"forge": "composite(FormattedCharSequence arg0, FormattedCharSequence arg1)",
			"fabric": "concat(OrderedText first, OrderedText second)"
		},
		{
			"forge": "composite(FormattedCharSequence... arg0)",
			"fabric": "concat(OrderedText... texts)"
		},
		{
			"forge": "composite(List<FormattedCharSequence> arg0)",
			"fabric": "concat(List<OrderedText> texts)"
		},
		{
			"forge": "fromPair(FormattedCharSequence arg0, FormattedCharSequence arg1)",
			"fabric": "innerConcat(OrderedText text1, OrderedText text2)"
		},
		{
			"forge": "fromList(List<FormattedCharSequence> arg0)",
			"fabric": "innerConcat(List<OrderedText> texts)"
		}
	]
}