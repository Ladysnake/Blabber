{
	"title": "net.minecraft.network.ConnectionProtocol$PacketSet",
	"items": [
		{
			"forge": "net.minecraft.network.ConnectionProtocol$PacketSet",
			"fabric": "net.minecraft.network.NetworkState$PacketHandler"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "classToId",
			"fabric": "packetIds"
		},
		{
			"forge": "idToDeserializer",
			"fabric": "packetFactories"
		},
		{
			"forge": "bundlerInfo",
			"fabric": "bundler"
		},
		{
			"forge": "extraClasses",
			"fabric": "bundlePacketTypes"
		},
		{
			"forge": "addPacket(Class<P> arg0, Function<FriendlyByteBuf, P> arg1)",
			"fabric": "register(Class<P> type, Function<PacketByteBuf, P> packetFactory)"
		},
		{
			"forge": "addPacket(Class<P> arg0, Function<FriendlyByteBuf, P> arg1)",
			"fabric": "register(Class<P> type, Function<PacketByteBuf, P> packetFactory)"
		},
		{
			"forge": "withBundlePacket(Class<P> arg0, Function<Iterable<Packet<T>>, P> arg1)",
			"fabric": "registerBundlePacket(Class<P> bundlePacketType, Function<Iterable<Packet<T>>, P> bundleFunction)"
		},
		{
			"forge": "getId(Class<?> arg0)",
			"fabric": "getId(Class<?> packet)"
		},
		{
			"forge": "createPacket(int arg0, FriendlyByteBuf arg1)",
			"fabric": "createPacket(int id, PacketByteBuf buf)"
		},
		{
			"forge": "listAllPackets(Consumer<Class<? extends Packet<?>>> arg0)",
			"fabric": "forEachPacketType(Consumer<Class<? extends Packet<?>>> consumer)"
		},
		{
			"forge": "bundlerInfo()",
			"fabric": "getBundler()"
		}
	]
}