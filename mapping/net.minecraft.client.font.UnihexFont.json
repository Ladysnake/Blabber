{
	"title": "net.minecraft.client.gui.font.providers.UnihexProvider",
	"items": [
		{
			"forge": "net.minecraft.client.gui.font.providers.UnihexProvider",
			"fabric": "net.minecraft.client.font.UnihexFont"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "GLYPH_HEIGHT",
			"fabric": "field_44764"
		},
		{
			"forge": "DIGITS_PER_BYTE",
			"fabric": "field_44765"
		},
		{
			"forge": "DIGITS_FOR_WIDTH_8",
			"fabric": "field_44766"
		},
		{
			"forge": "DIGITS_FOR_WIDTH_16",
			"fabric": "field_44767"
		},
		{
			"forge": "DIGITS_FOR_WIDTH_24",
			"fabric": "field_44768"
		},
		{
			"forge": "DIGITS_FOR_WIDTH_32",
			"fabric": "field_44769"
		},
		{
			"forge": "glyphs",
			"fabric": "glyphs"
		},
		{
			"forge": "getGlyph(int arg0)",
			"fabric": "getGlyph(int arg0)"
		},
		{
			"forge": "getGlyph(int arg0)",
			"fabric": "getGlyph(int arg0)"
		},
		{
			"forge": "getSupportedGlyphs()",
			"fabric": "getProvidedGlyphs()"
		},
		{
			"forge": "unpackBitsToBytes(IntBuffer arg0, int arg1, int arg2, int arg3)",
			"fabric": "addRowPixels(IntBuffer pixelsOut, int row, int left, int right)"
		},
		{
			"forge": "unpackBitsToBytes(IntBuffer arg0, UnihexProvider$LineData arg1, int arg2, int arg3)",
			"fabric": "addGlyphPixels(IntBuffer pixelsOut, UnihexFont$BitmapGlyph glyph, int left, int right)"
		},
		{
			"forge": "readFromStream(InputStream arg0, UnihexProvider$ReaderOutput arg1)",
			"fabric": "readLines(InputStream stream, UnihexFont$BitmapGlyphConsumer callback)"
		},
		{
			"forge": "decodeHex(int arg0, it.unimi.dsi.fastutil.bytes.ByteList arg1, int arg2)",
			"fabric": "getHexDigitValue(int lineNum, it.unimi.dsi.fastutil.bytes.ByteList bytes, int index)"
		},
		{
			"forge": "decodeHex(int arg0, byte arg1)",
			"fabric": "getHexDigitValue(int lineNum, byte digit)"
		},
		{
			"forge": "copyUntil(InputStream arg0, it.unimi.dsi.fastutil.bytes.ByteList arg1, int arg2)",
			"fabric": "readUntilDelimiter(InputStream stream, it.unimi.dsi.fastutil.bytes.ByteList data, int delimiter)"
		}
	]
}