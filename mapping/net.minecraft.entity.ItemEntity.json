{
	"title": "net.minecraft.world.entity.item.ItemEntity",
	"items": [
		{
			"forge": "net.minecraft.world.entity.item.ItemEntity",
			"fabric": "net.minecraft.entity.ItemEntity"
		},
		{
			"forge": "DATA_ITEM",
			"fabric": "STACK"
		},
		{
			"forge": "DATA_ITEM",
			"fabric": "STACK"
		},
		{
			"forge": "LIFETIME",
			"fabric": "DESPAWN_AGE"
		},
		{
			"forge": "INFINITE_PICKUP_DELAY",
			"fabric": "CANNOT_PICK_UP_DELAY"
		},
		{
			"forge": "INFINITE_LIFETIME",
			"fabric": "NEVER_DESPAWN_AGE"
		},
		{
			"forge": "age",
			"fabric": "itemAge"
		},
		{
			"forge": "pickupDelay",
			"fabric": "pickupDelay"
		},
		{
			"forge": "health",
			"fabric": "health"
		},
		{
			"forge": "thrower",
			"fabric": "thrower"
		},
		{
			"forge": "target",
			"fabric": "owner"
		},
		{
			"forge": "bobOffs",
			"fabric": "uniqueOffset"
		},
		{
			"forge": "dampensVibrations()",
			"fabric": "occludeVibrationSignals()"
		},
		{
			"forge": "dampensVibrations()",
			"fabric": "occludeVibrationSignals()"
		},
		{
			"forge": "getOwner()",
			"fabric": "getOwner()"
		},
		{
			"forge": "getMovementEmission()",
			"fabric": "getMoveEffect()"
		},
		{
			"forge": "defineSynchedData()",
			"fabric": "initDataTracker()"
		},
		{
			"forge": "tick()",
			"fabric": "tick()"
		},
		{
			"forge": "getBlockPosBelowThatAffectsMyMovement()",
			"fabric": "getVelocityAffectingPos()"
		},
		{
			"forge": "setUnderwaterMovement()",
			"fabric": "applyWaterBuoyancy()"
		},
		{
			"forge": "setUnderLavaMovement()",
			"fabric": "applyLavaBuoyancy()"
		},
		{
			"forge": "mergeWithNeighbours()",
			"fabric": "tryMerge()"
		},
		{
			"forge": "isMergable()",
			"fabric": "canMerge()"
		},
		{
			"forge": "tryToMerge(ItemEntity arg0)",
			"fabric": "tryMerge(ItemEntity other)"
		},
		{
			"forge": "areMergable(ItemStack arg0, ItemStack arg1)",
			"fabric": "canMerge(ItemStack stack1, ItemStack stack2)"
		},
		{
			"forge": "merge(ItemStack arg0, ItemStack arg1, int arg2)",
			"fabric": "merge(ItemStack stack1, ItemStack stack2, int maxCount)"
		},
		{
			"forge": "merge(ItemEntity arg0, ItemStack arg1, ItemStack arg2)",
			"fabric": "merge(ItemEntity targetEntity, ItemStack stack1, ItemStack stack2)"
		},
		{
			"forge": "merge(ItemEntity arg0, ItemStack arg1, ItemEntity arg2, ItemStack arg3)",
			"fabric": "merge(ItemEntity targetEntity, ItemStack targetStack, ItemEntity sourceEntity, ItemStack sourceStack)"
		},
		{
			"forge": "fireImmune()",
			"fabric": "isFireImmune()"
		},
		{
			"forge": "hurt(DamageSource arg0, float arg1)",
			"fabric": "damage(DamageSource arg0, float arg1)"
		},
		{
			"forge": "addAdditionalSaveData(CompoundTag arg0)",
			"fabric": "writeCustomDataToNbt(NbtCompound arg0)"
		},
		{
			"forge": "readAdditionalSaveData(CompoundTag arg0)",
			"fabric": "readCustomDataFromNbt(NbtCompound arg0)"
		},
		{
			"forge": "playerTouch(Player arg0)",
			"fabric": "onPlayerCollision(PlayerEntity arg0)"
		},
		{
			"forge": "getName()",
			"fabric": "getName()"
		},
		{
			"forge": "isAttackable()",
			"fabric": "isAttackable()"
		},
		{
			"forge": "changeDimension(ServerLevel arg0)",
			"fabric": "moveToWorld(ServerWorld arg0)"
		},
		{
			"forge": "getItem()",
			"fabric": "getStack()"
		},
		{
			"forge": "setItem(ItemStack arg0)",
			"fabric": "setStack(ItemStack stack)"
		},
		{
			"forge": "onSyncedDataUpdated(EntityDataAccessor<?> arg0)",
			"fabric": "onTrackedDataSet(TrackedData<?> arg0)"
		},
		{
			"forge": "setTarget(UUID arg0)",
			"fabric": "setOwner(UUID owner)"
		},
		{
			"forge": "setThrower(UUID arg0)",
			"fabric": "setThrower(UUID thrower)"
		},
		{
			"forge": "getAge()",
			"fabric": "getItemAge()"
		},
		{
			"forge": "setDefaultPickUpDelay()",
			"fabric": "setToDefaultPickupDelay()"
		},
		{
			"forge": "setNoPickUpDelay()",
			"fabric": "resetPickupDelay()"
		},
		{
			"forge": "setNeverPickUp()",
			"fabric": "setPickupDelayInfinite()"
		},
		{
			"forge": "setPickUpDelay(int arg0)",
			"fabric": "setPickupDelay(int pickupDelay)"
		},
		{
			"forge": "hasPickUpDelay()",
			"fabric": "cannotPickup()"
		},
		{
			"forge": "setUnlimitedLifetime()",
			"fabric": "setNeverDespawn()"
		},
		{
			"forge": "setExtendedLifetime()",
			"fabric": "setCovetedItem()"
		},
		{
			"forge": "makeFakeItem()",
			"fabric": "setDespawnImmediately()"
		},
		{
			"forge": "getSpin(float arg0)",
			"fabric": "getRotation(float tickDelta)"
		},
		{
			"forge": "copy()",
			"fabric": "copy()"
		},
		{
			"forge": "getSoundSource()",
			"fabric": "getSoundCategory()"
		},
		{
			"forge": "getVisualRotationYInDegrees()",
			"fabric": "getBodyYaw()"
		}
	]
}