{
	"title": "net.minecraft.world.level.block.SoulSandBlock",
	"items": [
		{
			"forge": "net.minecraft.world.level.block.SoulSandBlock",
			"fabric": "net.minecraft.block.SoulSandBlock"
		},
		{
			"forge": "SHAPE",
			"fabric": "COLLISION_SHAPE"
		},
		{
			"forge": "SHAPE",
			"fabric": "COLLISION_SHAPE"
		},
		{
			"forge": "BUBBLE_COLUMN_CHECK_DELAY",
			"fabric": "SCHEDULED_TICK_DELAY"
		},
		{
			"forge": "getCollisionShape(BlockState arg0, BlockGetter arg1, BlockPos arg2, CollisionContext arg3)",
			"fabric": "getCollisionShape(BlockState arg0, BlockView arg1, BlockPos arg2, ShapeContext arg3)"
		},
		{
			"forge": "getCollisionShape(BlockState arg0, BlockGetter arg1, BlockPos arg2, CollisionContext arg3)",
			"fabric": "getCollisionShape(BlockState arg0, BlockView arg1, BlockPos arg2, ShapeContext arg3)"
		},
		{
			"forge": "getBlockSupportShape(BlockState arg0, BlockGetter arg1, BlockPos arg2)",
			"fabric": "getSidesShape(BlockState arg0, BlockView arg1, BlockPos arg2)"
		},
		{
			"forge": "getVisualShape(BlockState arg0, BlockGetter arg1, BlockPos arg2, CollisionContext arg3)",
			"fabric": "getCameraCollisionShape(BlockState arg0, BlockView arg1, BlockPos arg2, ShapeContext arg3)"
		},
		{
			"forge": "tick(BlockState arg0, ServerLevel arg1, BlockPos arg2, RandomSource arg3)",
			"fabric": "scheduledTick(BlockState arg0, ServerWorld arg1, BlockPos arg2, Random arg3)"
		},
		{
			"forge": "updateShape(BlockState arg0, Direction arg1, BlockState arg2, LevelAccessor arg3, BlockPos arg4, BlockPos arg5)",
			"fabric": "getStateForNeighborUpdate(BlockState arg0, Direction arg1, BlockState arg2, WorldAccess arg3, BlockPos arg4, BlockPos arg5)"
		},
		{
			"forge": "onPlace(BlockState arg0, Level arg1, BlockPos arg2, BlockState arg3, boolean arg4)",
			"fabric": "onBlockAdded(BlockState arg0, World arg1, BlockPos arg2, BlockState arg3, boolean arg4)"
		},
		{
			"forge": "isPathfindable(BlockState arg0, BlockGetter arg1, BlockPos arg2, PathComputationType arg3)",
			"fabric": "canPathfindThrough(BlockState arg0, BlockView arg1, BlockPos arg2, NavigationType arg3)"
		},
		{
			"forge": "getShadeBrightness(BlockState arg0, BlockGetter arg1, BlockPos arg2)",
			"fabric": "getAmbientOcclusionLightLevel(BlockState arg0, BlockView arg1, BlockPos arg2)"
		}
	]
}