{
	"title": "net.minecraft.world.level.chunk.LevelChunk",
	"items": [
		{
			"forge": "net.minecraft.world.level.chunk.LevelChunk",
			"fabric": "net.minecraft.world.chunk.WorldChunk"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "NULL_TICKER",
			"fabric": "EMPTY_BLOCK_ENTITY_TICKER"
		},
		{
			"forge": "tickersInLevel",
			"fabric": "blockEntityTickers"
		},
		{
			"forge": "loaded",
			"fabric": "loadedToWorld"
		},
		{
			"forge": "level",
			"fabric": "world"
		},
		{
			"forge": "fullStatus",
			"fabric": "levelTypeProvider"
		},
		{
			"forge": "postLoad",
			"fabric": "entityLoader"
		},
		{
			"forge": "gameEventListenerRegistrySections",
			"fabric": "gameEventDispatchers"
		},
		{
			"forge": "blockTicks",
			"fabric": "blockTickScheduler"
		},
		{
			"forge": "fluidTicks",
			"fabric": "fluidTickScheduler"
		},
		{
			"forge": "getBlockTicks()",
			"fabric": "getBlockTickScheduler()"
		},
		{
			"forge": "getBlockTicks()",
			"fabric": "getBlockTickScheduler()"
		},
		{
			"forge": "getFluidTicks()",
			"fabric": "getFluidTickScheduler()"
		},
		{
			"forge": "getTicksForSerialization()",
			"fabric": "getTickSchedulers()"
		},
		{
			"forge": "getListenerRegistry(int arg0)",
			"fabric": "getGameEventDispatcher(int arg0)"
		},
		{
			"forge": "getBlockState(BlockPos arg0)",
			"fabric": "getBlockState(BlockPos arg0)"
		},
		{
			"forge": "getFluidState(BlockPos arg0)",
			"fabric": "getFluidState(BlockPos arg0)"
		},
		{
			"forge": "getFluidState(int arg0, int arg1, int arg2)",
			"fabric": "getFluidState(int x, int y, int z)"
		},
		{
			"forge": "setBlockState(BlockPos arg0, BlockState arg1, boolean arg2)",
			"fabric": "setBlockState(BlockPos arg0, BlockState arg1, boolean arg2)"
		},
		{
			"forge": "addEntity(Entity arg0)",
			"fabric": "addEntity(Entity arg0)"
		},
		{
			"forge": "createBlockEntity(BlockPos arg0)",
			"fabric": "createBlockEntity(BlockPos pos)"
		},
		{
			"forge": "getBlockEntity(BlockPos arg0)",
			"fabric": "getBlockEntity(BlockPos arg0)"
		},
		{
			"forge": "getBlockEntity(BlockPos arg0, LevelChunk$EntityCreationType arg1)",
			"fabric": "getBlockEntity(BlockPos pos, WorldChunk$CreationType creationType)"
		},
		{
			"forge": "addAndRegisterBlockEntity(BlockEntity arg0)",
			"fabric": "addBlockEntity(BlockEntity blockEntity)"
		},
		{
			"forge": "isInLevel()",
			"fabric": "canTickBlockEntities()"
		},
		{
			"forge": "isTicking(BlockPos arg0)",
			"fabric": "canTickBlockEntity(BlockPos pos)"
		},
		{
			"forge": "setBlockEntity(BlockEntity arg0)",
			"fabric": "setBlockEntity(BlockEntity arg0)"
		},
		{
			"forge": "getBlockEntityNbtForSaving(BlockPos arg0)",
			"fabric": "getPackedBlockEntityNbt(BlockPos arg0)"
		},
		{
			"forge": "removeBlockEntity(BlockPos arg0)",
			"fabric": "removeBlockEntity(BlockPos arg0)"
		},
		{
			"forge": "removeGameEventListener(T arg0, ServerLevel arg1)",
			"fabric": "removeGameEventListener(T blockEntity, ServerWorld world)"
		},
		{
			"forge": "removeGameEventListenerRegistry(int arg0)",
			"fabric": "removeGameEventDispatcher(int ySectionCoord)"
		},
		{
			"forge": "removeBlockEntityTicker(BlockPos arg0)",
			"fabric": "removeBlockEntityTicker(BlockPos pos)"
		},
		{
			"forge": "runPostLoad()",
			"fabric": "loadEntities()"
		},
		{
			"forge": "isEmpty()",
			"fabric": "isEmpty()"
		},
		{
			"forge": "replaceWithPacketData(FriendlyByteBuf arg0, CompoundTag arg1, Consumer<ClientboundLevelChunkPacketData$BlockEntityTagOutput> arg2)",
			"fabric": "loadFromPacket(PacketByteBuf buf, NbtCompound nbt, Consumer<ChunkData$BlockEntityVisitor> arg2)"
		},
		{
			"forge": "replaceBiomes(FriendlyByteBuf arg0)",
			"fabric": "loadBiomeFromPacket(PacketByteBuf buf)"
		},
		{
			"forge": "setLoaded(boolean arg0)",
			"fabric": "setLoadedToWorld(boolean loadedToWorld)"
		},
		{
			"forge": "getLevel()",
			"fabric": "getWorld()"
		},
		{
			"forge": "getBlockEntities()",
			"fabric": "getBlockEntities()"
		},
		{
			"forge": "postProcessGeneration()",
			"fabric": "runPostProcessing()"
		},
		{
			"forge": "promotePendingBlockEntity(BlockPos arg0, CompoundTag arg1)",
			"fabric": "loadBlockEntity(BlockPos pos, NbtCompound nbt)"
		},
		{
			"forge": "unpackTicks(long arg0)",
			"fabric": "disableTickSchedulers(long time)"
		},
		{
			"forge": "registerTickContainerInLevel(ServerLevel arg0)",
			"fabric": "addChunkTickSchedulers(ServerWorld world)"
		},
		{
			"forge": "unregisterTickContainerFromLevel(ServerLevel arg0)",
			"fabric": "removeChunkTickSchedulers(ServerWorld world)"
		},
		{
			"forge": "getStatus()",
			"fabric": "getStatus()"
		},
		{
			"forge": "getFullStatus()",
			"fabric": "getLevelType()"
		},
		{
			"forge": "setFullStatus(Supplier<FullChunkStatus> arg0)",
			"fabric": "setLevelTypeProvider(Supplier<ChunkLevelType> levelTypeProvider)"
		},
		{
			"forge": "clearAllBlockEntities()",
			"fabric": "clear()"
		},
		{
			"forge": "registerAllBlockEntitiesAfterLevelLoad()",
			"fabric": "updateAllBlockEntities()"
		},
		{
			"forge": "addGameEventListener(T arg0, ServerLevel arg1)",
			"fabric": "updateGameEventListener(T blockEntity, ServerWorld world)"
		},
		{
			"forge": "updateBlockEntityTicker(T arg0)",
			"fabric": "updateTicker(T blockEntity)"
		},
		{
			"forge": "createTicker(T arg0, BlockEntityTicker<T> arg1)",
			"fabric": "wrapTicker(T blockEntity, BlockEntityTicker<T> blockEntityTicker)"
		}
	]
}