{
	"title": "net.minecraft.world.entity.monster.hoglin.Hoglin",
	"items": [
		{
			"forge": "net.minecraft.world.entity.monster.hoglin.Hoglin",
			"fabric": "net.minecraft.entity.mob.HoglinEntity"
		},
		{
			"forge": "DATA_IMMUNE_TO_ZOMBIFICATION",
			"fabric": "BABY"
		},
		{
			"forge": "DATA_IMMUNE_TO_ZOMBIFICATION",
			"fabric": "BABY"
		},
		{
			"forge": "PROBABILITY_OF_SPAWNING_AS_BABY",
			"fabric": "field_30525"
		},
		{
			"forge": "MAX_HEALTH",
			"fabric": "MAX_HEALTH"
		},
		{
			"forge": "MOVEMENT_SPEED_WHEN_FIGHTING",
			"fabric": "MOVEMENT_SPEED"
		},
		{
			"forge": "ATTACK_KNOCKBACK",
			"fabric": "ATTACK_KNOCKBACK"
		},
		{
			"forge": "KNOCKBACK_RESISTANCE",
			"fabric": "KNOCKBACK_RESISTANCE"
		},
		{
			"forge": "ATTACK_DAMAGE",
			"fabric": "ATTACK_DAMAGE"
		},
		{
			"forge": "BABY_ATTACK_DAMAGE",
			"fabric": "BABY_ATTACK_DAMAGE"
		},
		{
			"forge": "CONVERSION_TIME",
			"fabric": "CONVERSION_TIME"
		},
		{
			"forge": "attackAnimationRemainingTicks",
			"fabric": "movementCooldownTicks"
		},
		{
			"forge": "timeInOverworld",
			"fabric": "timeInOverworld"
		},
		{
			"forge": "cannotBeHunted",
			"fabric": "cannotBeHunted"
		},
		{
			"forge": "SENSOR_TYPES",
			"fabric": "SENSOR_TYPES"
		},
		{
			"forge": "MEMORY_TYPES",
			"fabric": "MEMORY_MODULE_TYPES"
		},
		{
			"forge": "canBeLeashed(Player arg0)",
			"fabric": "canBeLeashedBy(PlayerEntity arg0)"
		},
		{
			"forge": "canBeLeashed(Player arg0)",
			"fabric": "canBeLeashedBy(PlayerEntity arg0)"
		},
		{
			"forge": "createAttributes()",
			"fabric": "createHoglinAttributes()"
		},
		{
			"forge": "doHurtTarget(Entity arg0)",
			"fabric": "tryAttack(Entity arg0)"
		},
		{
			"forge": "blockedByShield(LivingEntity arg0)",
			"fabric": "knockback(LivingEntity arg0)"
		},
		{
			"forge": "hurt(DamageSource arg0, float arg1)",
			"fabric": "damage(DamageSource arg0, float arg1)"
		},
		{
			"forge": "brainProvider()",
			"fabric": "createBrainProfile()"
		},
		{
			"forge": "makeBrain(com.mojang.serialization.Dynamic<?> arg0)",
			"fabric": "deserializeBrain(com.mojang.serialization.Dynamic<?> arg0)"
		},
		{
			"forge": "getBrain()",
			"fabric": "getBrain()"
		},
		{
			"forge": "customServerAiStep()",
			"fabric": "mobTick()"
		},
		{
			"forge": "aiStep()",
			"fabric": "tickMovement()"
		},
		{
			"forge": "ageBoundaryReached()",
			"fabric": "onGrowUp()"
		},
		{
			"forge": "checkHoglinSpawnRules(EntityType<Hoglin> arg0, LevelAccessor arg1, MobSpawnType arg2, BlockPos arg3, RandomSource arg4)",
			"fabric": "canSpawn(EntityType<HoglinEntity> type, WorldAccess world, SpawnReason spawnReason, BlockPos pos, Random random)"
		},
		{
			"forge": "finalizeSpawn(ServerLevelAccessor arg0, DifficultyInstance arg1, MobSpawnType arg2, SpawnGroupData arg3, CompoundTag arg4)",
			"fabric": "initialize(ServerWorldAccess arg0, LocalDifficulty arg1, SpawnReason arg2, EntityData arg3, NbtCompound arg4)"
		},
		{
			"forge": "removeWhenFarAway(double arg0)",
			"fabric": "canImmediatelyDespawn(double arg0)"
		},
		{
			"forge": "getWalkTargetValue(BlockPos arg0, LevelReader arg1)",
			"fabric": "getPathfindingFavor(BlockPos arg0, WorldView arg1)"
		},
		{
			"forge": "getPassengersRidingOffset()",
			"fabric": "getMountedHeightOffset()"
		},
		{
			"forge": "mobInteract(Player arg0, InteractionHand arg1)",
			"fabric": "interactMob(PlayerEntity arg0, Hand arg1)"
		},
		{
			"forge": "handleEntityEvent(byte arg0)",
			"fabric": "handleStatus(byte arg0)"
		},
		{
			"forge": "getAttackAnimationRemainingTicks()",
			"fabric": "getMovementCooldownTicks()"
		},
		{
			"forge": "shouldDropExperience()",
			"fabric": "shouldDropXp()"
		},
		{
			"forge": "getExperienceReward()",
			"fabric": "getXpToDrop()"
		},
		{
			"forge": "finishConversion(ServerLevel arg0)",
			"fabric": "zombify(ServerWorld word)"
		},
		{
			"forge": "isFood(ItemStack arg0)",
			"fabric": "isBreedingItem(ItemStack arg0)"
		},
		{
			"forge": "isAdult()",
			"fabric": "isAdult()"
		},
		{
			"forge": "defineSynchedData()",
			"fabric": "initDataTracker()"
		},
		{
			"forge": "addAdditionalSaveData(CompoundTag arg0)",
			"fabric": "writeCustomDataToNbt(NbtCompound arg0)"
		},
		{
			"forge": "readAdditionalSaveData(CompoundTag arg0)",
			"fabric": "readCustomDataFromNbt(NbtCompound arg0)"
		},
		{
			"forge": "setImmuneToZombification(boolean arg0)",
			"fabric": "setImmuneToZombification(boolean immuneToZombification)"
		},
		{
			"forge": "isImmuneToZombification()",
			"fabric": "isImmuneToZombification()"
		},
		{
			"forge": "isConverting()",
			"fabric": "canConvert()"
		},
		{
			"forge": "setCannotBeHunted(boolean arg0)",
			"fabric": "setCannotBeHunted(boolean cannotBeHunted)"
		},
		{
			"forge": "canBeHunted()",
			"fabric": "canBeHunted()"
		},
		{
			"forge": "getBreedOffspring(ServerLevel arg0, AgeableMob arg1)",
			"fabric": "createChild(ServerWorld arg0, PassiveEntity arg1)"
		},
		{
			"forge": "canFallInLove()",
			"fabric": "canEat()"
		},
		{
			"forge": "getSoundSource()",
			"fabric": "getSoundCategory()"
		},
		{
			"forge": "getAmbientSound()",
			"fabric": "getAmbientSound()"
		},
		{
			"forge": "getHurtSound(DamageSource arg0)",
			"fabric": "getHurtSound(DamageSource arg0)"
		},
		{
			"forge": "getDeathSound()",
			"fabric": "getDeathSound()"
		},
		{
			"forge": "getSwimSound()",
			"fabric": "getSwimSound()"
		},
		{
			"forge": "getSwimSplashSound()",
			"fabric": "getSplashSound()"
		},
		{
			"forge": "playStepSound(BlockPos arg0, BlockState arg1)",
			"fabric": "playStepSound(BlockPos arg0, BlockState arg1)"
		},
		{
			"forge": "playSoundEvent(SoundEvent arg0)",
			"fabric": "playSound(SoundEvent sound)"
		},
		{
			"forge": "sendDebugPackets()",
			"fabric": "sendAiDebugData()"
		}
	]
}