{
	"title": "net.minecraft.world.entity.monster.Pillager",
	"items": [
		{
			"forge": "net.minecraft.world.entity.monster.Pillager",
			"fabric": "net.minecraft.entity.mob.PillagerEntity"
		},
		{
			"forge": "IS_CHARGING_CROSSBOW",
			"fabric": "CHARGING"
		},
		{
			"forge": "IS_CHARGING_CROSSBOW",
			"fabric": "CHARGING"
		},
		{
			"forge": "INVENTORY_SIZE",
			"fabric": "field_30478"
		},
		{
			"forge": "SLOT_OFFSET",
			"fabric": "field_30476"
		},
		{
			"forge": "CROSSBOW_POWER",
			"fabric": "CROSSBOW_SHOT_SPEED"
		},
		{
			"forge": "inventory",
			"fabric": "inventory"
		},
		{
			"forge": "registerGoals()",
			"fabric": "initGoals()"
		},
		{
			"forge": "registerGoals()",
			"fabric": "initGoals()"
		},
		{
			"forge": "createAttributes()",
			"fabric": "createPillagerAttributes()"
		},
		{
			"forge": "defineSynchedData()",
			"fabric": "initDataTracker()"
		},
		{
			"forge": "canFireProjectileWeapon(ProjectileWeaponItem arg0)",
			"fabric": "canUseRangedWeapon(RangedWeaponItem arg0)"
		},
		{
			"forge": "isChargingCrossbow()",
			"fabric": "isCharging()"
		},
		{
			"forge": "setChargingCrossbow(boolean arg0)",
			"fabric": "setCharging(boolean arg0)"
		},
		{
			"forge": "onCrossbowAttackPerformed()",
			"fabric": "postShoot()"
		},
		{
			"forge": "addAdditionalSaveData(CompoundTag arg0)",
			"fabric": "writeCustomDataToNbt(NbtCompound arg0)"
		},
		{
			"forge": "getArmPose()",
			"fabric": "getState()"
		},
		{
			"forge": "readAdditionalSaveData(CompoundTag arg0)",
			"fabric": "readCustomDataFromNbt(NbtCompound arg0)"
		},
		{
			"forge": "getWalkTargetValue(BlockPos arg0, LevelReader arg1)",
			"fabric": "getPathfindingFavor(BlockPos arg0, WorldView arg1)"
		},
		{
			"forge": "getMaxSpawnClusterSize()",
			"fabric": "getLimitPerChunk()"
		},
		{
			"forge": "finalizeSpawn(ServerLevelAccessor arg0, DifficultyInstance arg1, MobSpawnType arg2, SpawnGroupData arg3, CompoundTag arg4)",
			"fabric": "initialize(ServerWorldAccess arg0, LocalDifficulty arg1, SpawnReason arg2, EntityData arg3, NbtCompound arg4)"
		},
		{
			"forge": "populateDefaultEquipmentSlots(RandomSource arg0, DifficultyInstance arg1)",
			"fabric": "initEquipment(Random arg0, LocalDifficulty arg1)"
		},
		{
			"forge": "enchantSpawnedWeapon(RandomSource arg0, float arg1)",
			"fabric": "enchantMainHandItem(Random arg0, float arg1)"
		},
		{
			"forge": "isAlliedTo(Entity arg0)",
			"fabric": "isTeammate(Entity arg0)"
		},
		{
			"forge": "getAmbientSound()",
			"fabric": "getAmbientSound()"
		},
		{
			"forge": "getDeathSound()",
			"fabric": "getDeathSound()"
		},
		{
			"forge": "getHurtSound(DamageSource arg0)",
			"fabric": "getHurtSound(DamageSource arg0)"
		},
		{
			"forge": "performRangedAttack(LivingEntity arg0, float arg1)",
			"fabric": "attack(LivingEntity arg0, float arg1)"
		},
		{
			"forge": "shootCrossbowProjectile(LivingEntity arg0, ItemStack arg1, Projectile arg2, float arg3)",
			"fabric": "shoot(LivingEntity arg0, ItemStack arg1, ProjectileEntity arg2, float arg3)"
		},
		{
			"forge": "getInventory()",
			"fabric": "getInventory()"
		},
		{
			"forge": "pickUpItem(ItemEntity arg0)",
			"fabric": "loot(ItemEntity arg0)"
		},
		{
			"forge": "wantsItem(ItemStack arg0)",
			"fabric": "isRaidCaptain(ItemStack stack)"
		},
		{
			"forge": "getSlot(int arg0)",
			"fabric": "getStackReference(int arg0)"
		},
		{
			"forge": "applyRaidBuffs(int arg0, boolean arg1)",
			"fabric": "addBonusForWave(int arg0, boolean arg1)"
		},
		{
			"forge": "getCelebrateSound()",
			"fabric": "getCelebratingSound()"
		}
	]
}