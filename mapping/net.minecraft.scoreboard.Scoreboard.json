{
	"title": "net.minecraft.world.scores.Scoreboard",
	"items": [
		{
			"forge": "net.minecraft.world.scores.Scoreboard",
			"fabric": "net.minecraft.scoreboard.Scoreboard"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "DISPLAY_SLOT_LIST",
			"fabric": "LIST_DISPLAY_SLOT_ID"
		},
		{
			"forge": "DISPLAY_SLOT_SIDEBAR",
			"fabric": "SIDEBAR_DISPLAY_SLOT_ID"
		},
		{
			"forge": "DISPLAY_SLOT_BELOW_NAME",
			"fabric": "BELOW_NAME_DISPLAY_SLOT_ID"
		},
		{
			"forge": "DISPLAY_SLOT_TEAMS_SIDEBAR_START",
			"fabric": "MIN_SIDEBAR_TEAM_DISPLAY_SLOT_ID"
		},
		{
			"forge": "DISPLAY_SLOT_TEAMS_SIDEBAR_END",
			"fabric": "MAX_SIDEBAR_TEAM_DISPLAY_SLOT_ID"
		},
		{
			"forge": "DISPLAY_SLOTS",
			"fabric": "DISPLAY_SLOT_COUNT"
		},
		{
			"forge": "objectivesByName",
			"fabric": "objectives"
		},
		{
			"forge": "objectivesByCriteria",
			"fabric": "objectivesByCriterion"
		},
		{
			"forge": "playerScores",
			"fabric": "playerObjectives"
		},
		{
			"forge": "displayObjectives",
			"fabric": "objectiveSlots"
		},
		{
			"forge": "teamsByName",
			"fabric": "teams"
		},
		{
			"forge": "teamsByPlayer",
			"fabric": "teamsByPlayer"
		},
		{
			"forge": "displaySlotNames",
			"fabric": "displaySlotNames"
		},
		{
			"forge": "hasObjective(String arg0)",
			"fabric": "containsObjective(String name)"
		},
		{
			"forge": "hasObjective(String arg0)",
			"fabric": "containsObjective(String name)"
		},
		{
			"forge": "getOrCreateObjective(String arg0)",
			"fabric": "getObjective(String name)"
		},
		{
			"forge": "getObjective(String arg0)",
			"fabric": "getNullableObjective(String name)"
		},
		{
			"forge": "addObjective(String arg0, ObjectiveCriteria arg1, Component arg2, ObjectiveCriteria$RenderType arg3)",
			"fabric": "addObjective(String name, ScoreboardCriterion criterion, Text displayName, ScoreboardCriterion$RenderType renderType)"
		},
		{
			"forge": "forAllObjectives(ObjectiveCriteria arg0, String arg1, Consumer<Score> arg2)",
			"fabric": "forEachScore(ScoreboardCriterion criterion, String player, Consumer<ScoreboardPlayerScore> action)"
		},
		{
			"forge": "hasPlayerScore(String arg0, Objective arg1)",
			"fabric": "playerHasObjective(String playerName, ScoreboardObjective objective)"
		},
		{
			"forge": "getOrCreatePlayerScore(String arg0, Objective arg1)",
			"fabric": "getPlayerScore(String playerName, ScoreboardObjective objective)"
		},
		{
			"forge": "getPlayerScores(Objective arg0)",
			"fabric": "getAllPlayerScores(ScoreboardObjective objective)"
		},
		{
			"forge": "getObjectives()",
			"fabric": "getObjectives()"
		},
		{
			"forge": "getObjectiveNames()",
			"fabric": "getObjectiveNames()"
		},
		{
			"forge": "getTrackedPlayers()",
			"fabric": "getKnownPlayers()"
		},
		{
			"forge": "resetPlayerScore(String arg0, Objective arg1)",
			"fabric": "resetPlayerScore(String playerName, ScoreboardObjective objective)"
		},
		{
			"forge": "getPlayerScores(String arg0)",
			"fabric": "getPlayerObjectives(String playerName)"
		},
		{
			"forge": "removeObjective(Objective arg0)",
			"fabric": "removeObjective(ScoreboardObjective objective)"
		},
		{
			"forge": "setDisplayObjective(int arg0, Objective arg1)",
			"fabric": "setObjectiveSlot(int slot, ScoreboardObjective objective)"
		},
		{
			"forge": "getDisplayObjective(int arg0)",
			"fabric": "getObjectiveForSlot(int slot)"
		},
		{
			"forge": "getPlayerTeam(String arg0)",
			"fabric": "getTeam(String name)"
		},
		{
			"forge": "addPlayerTeam(String arg0)",
			"fabric": "addTeam(String name)"
		},
		{
			"forge": "removePlayerTeam(PlayerTeam arg0)",
			"fabric": "removeTeam(Team team)"
		},
		{
			"forge": "addPlayerToTeam(String arg0, PlayerTeam arg1)",
			"fabric": "addPlayerToTeam(String playerName, Team team)"
		},
		{
			"forge": "removePlayerFromTeam(String arg0)",
			"fabric": "clearPlayerTeam(String playerName)"
		},
		{
			"forge": "removePlayerFromTeam(String arg0, PlayerTeam arg1)",
			"fabric": "removePlayerFromTeam(String playerName, Team team)"
		},
		{
			"forge": "getTeamNames()",
			"fabric": "getTeamNames()"
		},
		{
			"forge": "getPlayerTeams()",
			"fabric": "getTeams()"
		},
		{
			"forge": "getPlayersTeam(String arg0)",
			"fabric": "getPlayerTeam(String playerName)"
		},
		{
			"forge": "onObjectiveAdded(Objective arg0)",
			"fabric": "updateObjective(ScoreboardObjective objective)"
		},
		{
			"forge": "onObjectiveChanged(Objective arg0)",
			"fabric": "updateExistingObjective(ScoreboardObjective objective)"
		},
		{
			"forge": "onObjectiveRemoved(Objective arg0)",
			"fabric": "updateRemovedObjective(ScoreboardObjective objective)"
		},
		{
			"forge": "onScoreChanged(Score arg0)",
			"fabric": "updateScore(ScoreboardPlayerScore score)"
		},
		{
			"forge": "onPlayerRemoved(String arg0)",
			"fabric": "updatePlayerScore(String playerName)"
		},
		{
			"forge": "onPlayerScoreRemoved(String arg0, Objective arg1)",
			"fabric": "updatePlayerScore(String playerName, ScoreboardObjective objective)"
		},
		{
			"forge": "onTeamAdded(PlayerTeam arg0)",
			"fabric": "updateScoreboardTeamAndPlayers(Team team)"
		},
		{
			"forge": "onTeamChanged(PlayerTeam arg0)",
			"fabric": "updateScoreboardTeam(Team team)"
		},
		{
			"forge": "onTeamRemoved(PlayerTeam arg0)",
			"fabric": "updateRemovedTeam(Team team)"
		},
		{
			"forge": "getDisplaySlotName(int arg0)",
			"fabric": "getDisplaySlotName(int slotId)"
		},
		{
			"forge": "getDisplaySlotByName(String arg0)",
			"fabric": "getDisplaySlotId(String slotName)"
		},
		{
			"forge": "getDisplaySlotNames()",
			"fabric": "getDisplaySlotNames()"
		},
		{
			"forge": "entityRemoved(Entity arg0)",
			"fabric": "resetEntityScore(Entity entity)"
		},
		{
			"forge": "savePlayerScores()",
			"fabric": "toNbt()"
		},
		{
			"forge": "loadPlayerScores(ListTag arg0)",
			"fabric": "readNbt(NbtList list)"
		}
	]
}