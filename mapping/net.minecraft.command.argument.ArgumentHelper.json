{
	"title": "net.minecraft.commands.synchronization.ArgumentUtils",
	"items": [
		{
			"forge": "net.minecraft.commands.synchronization.ArgumentUtils",
			"fabric": "net.minecraft.command.argument.ArgumentHelper"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "NUMBER_FLAG_MIN",
			"fabric": "MIN_FLAG"
		},
		{
			"forge": "NUMBER_FLAG_MAX",
			"fabric": "MAX_FLAG"
		},
		{
			"forge": "createNumberFlags(boolean arg0, boolean arg1)",
			"fabric": "getMinMaxFlag(boolean hasMin, boolean hasMax)"
		},
		{
			"forge": "createNumberFlags(boolean arg0, boolean arg1)",
			"fabric": "getMinMaxFlag(boolean hasMin, boolean hasMax)"
		},
		{
			"forge": "numberHasMin(byte arg0)",
			"fabric": "hasMinFlag(byte flags)"
		},
		{
			"forge": "numberHasMax(byte arg0)",
			"fabric": "hasMaxFlag(byte flags)"
		},
		{
			"forge": "serializeCap(com.google.gson.JsonObject arg0, ArgumentTypeInfo$Template<A> arg1)",
			"fabric": "writeArgumentProperties(com.google.gson.JsonObject json, ArgumentSerializer$ArgumentTypeProperties<A> properties)"
		},
		{
			"forge": "serializeCap(com.google.gson.JsonObject arg0, ArgumentTypeInfo<A, T> arg1, ArgumentTypeInfo$Template<A> arg2)",
			"fabric": "writeArgumentProperties(com.google.gson.JsonObject json, ArgumentSerializer<A, T> serializer, ArgumentSerializer$ArgumentTypeProperties<A> properties)"
		},
		{
			"forge": "serializeArgumentToJson(com.google.gson.JsonObject arg0, T arg1)",
			"fabric": "writeArgument(com.google.gson.JsonObject json, T argumentType)"
		},
		{
			"forge": "serializeNodeToJson(com.mojang.brigadier.CommandDispatcher<S> arg0, com.mojang.brigadier.tree.CommandNode<S> arg1)",
			"fabric": "toJson(com.mojang.brigadier.CommandDispatcher<S> dispatcher, com.mojang.brigadier.tree.CommandNode<S> rootNode)"
		},
		{
			"forge": "findUsedArgumentTypes(com.mojang.brigadier.tree.CommandNode<T> arg0)",
			"fabric": "collectUsedArgumentTypes(com.mojang.brigadier.tree.CommandNode<T> rootNode)"
		},
		{
			"forge": "findUsedArgumentTypes(com.mojang.brigadier.tree.CommandNode<T> arg0, Set<com.mojang.brigadier.arguments.ArgumentType<?>> arg1, Set<com.mojang.brigadier.tree.CommandNode<T>> arg2)",
			"fabric": "collectUsedArgumentTypes(com.mojang.brigadier.tree.CommandNode<T> node, Set<com.mojang.brigadier.arguments.ArgumentType<?>> usedArgumentTypes, Set<com.mojang.brigadier.tree.CommandNode<T>> visitedNodes)"
		}
	]
}