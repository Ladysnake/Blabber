{
	"title": "net.minecraft.world.level.block.ChestBlock",
	"items": [
		{
			"forge": "net.minecraft.world.level.block.ChestBlock",
			"fabric": "net.minecraft.block.ChestBlock"
		},
		{
			"forge": "FACING",
			"fabric": "FACING"
		},
		{
			"forge": "FACING",
			"fabric": "FACING"
		},
		{
			"forge": "TYPE",
			"fabric": "CHEST_TYPE"
		},
		{
			"forge": "WATERLOGGED",
			"fabric": "WATERLOGGED"
		},
		{
			"forge": "EVENT_SET_OPEN_COUNT",
			"fabric": "field_31057"
		},
		{
			"forge": "AABB_OFFSET",
			"fabric": "field_31058"
		},
		{
			"forge": "AABB_HEIGHT",
			"fabric": "field_31059"
		},
		{
			"forge": "NORTH_AABB",
			"fabric": "DOUBLE_NORTH_SHAPE"
		},
		{
			"forge": "SOUTH_AABB",
			"fabric": "DOUBLE_SOUTH_SHAPE"
		},
		{
			"forge": "WEST_AABB",
			"fabric": "DOUBLE_WEST_SHAPE"
		},
		{
			"forge": "EAST_AABB",
			"fabric": "DOUBLE_EAST_SHAPE"
		},
		{
			"forge": "AABB",
			"fabric": "SINGLE_SHAPE"
		},
		{
			"forge": "CHEST_COMBINER",
			"fabric": "INVENTORY_RETRIEVER"
		},
		{
			"forge": "MENU_PROVIDER_COMBINER",
			"fabric": "NAME_RETRIEVER"
		},
		{
			"forge": "getBlockType(BlockState arg0)",
			"fabric": "getDoubleBlockType(BlockState state)"
		},
		{
			"forge": "getBlockType(BlockState arg0)",
			"fabric": "getDoubleBlockType(BlockState state)"
		},
		{
			"forge": "getRenderShape(BlockState arg0)",
			"fabric": "getRenderType(BlockState arg0)"
		},
		{
			"forge": "updateShape(BlockState arg0, Direction arg1, BlockState arg2, LevelAccessor arg3, BlockPos arg4, BlockPos arg5)",
			"fabric": "getStateForNeighborUpdate(BlockState arg0, Direction arg1, BlockState arg2, WorldAccess arg3, BlockPos arg4, BlockPos arg5)"
		},
		{
			"forge": "getShape(BlockState arg0, BlockGetter arg1, BlockPos arg2, CollisionContext arg3)",
			"fabric": "getOutlineShape(BlockState arg0, BlockView arg1, BlockPos arg2, ShapeContext arg3)"
		},
		{
			"forge": "getConnectedDirection(BlockState arg0)",
			"fabric": "getFacing(BlockState state)"
		},
		{
			"forge": "getStateForPlacement(BlockPlaceContext arg0)",
			"fabric": "getPlacementState(ItemPlacementContext arg0)"
		},
		{
			"forge": "getFluidState(BlockState arg0)",
			"fabric": "getFluidState(BlockState arg0)"
		},
		{
			"forge": "candidatePartnerFacing(BlockPlaceContext arg0, Direction arg1)",
			"fabric": "getNeighborChestDirection(ItemPlacementContext ctx, Direction dir)"
		},
		{
			"forge": "setPlacedBy(Level arg0, BlockPos arg1, BlockState arg2, LivingEntity arg3, ItemStack arg4)",
			"fabric": "onPlaced(World arg0, BlockPos arg1, BlockState arg2, LivingEntity arg3, ItemStack arg4)"
		},
		{
			"forge": "onRemove(BlockState arg0, Level arg1, BlockPos arg2, BlockState arg3, boolean arg4)",
			"fabric": "onStateReplaced(BlockState arg0, World arg1, BlockPos arg2, BlockState arg3, boolean arg4)"
		},
		{
			"forge": "use(BlockState arg0, Level arg1, BlockPos arg2, Player arg3, InteractionHand arg4, BlockHitResult arg5)",
			"fabric": "onUse(BlockState arg0, World arg1, BlockPos arg2, PlayerEntity arg3, Hand arg4, BlockHitResult arg5)"
		},
		{
			"forge": "getOpenChestStat()",
			"fabric": "getOpenStat()"
		},
		{
			"forge": "blockEntityType()",
			"fabric": "getExpectedEntityType()"
		},
		{
			"forge": "getContainer(ChestBlock arg0, BlockState arg1, Level arg2, BlockPos arg3, boolean arg4)",
			"fabric": "getInventory(ChestBlock block, BlockState state, World world, BlockPos pos, boolean ignoreBlocked)"
		},
		{
			"forge": "combine(BlockState arg0, Level arg1, BlockPos arg2, boolean arg3)",
			"fabric": "getBlockEntitySource(BlockState arg0, World arg1, BlockPos arg2, boolean arg3)"
		},
		{
			"forge": "getMenuProvider(BlockState arg0, Level arg1, BlockPos arg2)",
			"fabric": "createScreenHandlerFactory(BlockState arg0, World arg1, BlockPos arg2)"
		},
		{
			"forge": "opennessCombiner(LidBlockEntity arg0)",
			"fabric": "getAnimationProgressRetriever(LidOpenable progress)"
		},
		{
			"forge": "newBlockEntity(BlockPos arg0, BlockState arg1)",
			"fabric": "createBlockEntity(BlockPos arg0, BlockState arg1)"
		},
		{
			"forge": "getTicker(Level arg0, BlockState arg1, BlockEntityType<T> arg2)",
			"fabric": "getTicker(World arg0, BlockState arg1, BlockEntityType<T> arg2)"
		},
		{
			"forge": "isChestBlockedAt(LevelAccessor arg0, BlockPos arg1)",
			"fabric": "isChestBlocked(WorldAccess world, BlockPos pos)"
		},
		{
			"forge": "isBlockedChestByBlock(BlockGetter arg0, BlockPos arg1)",
			"fabric": "hasBlockOnTop(BlockView world, BlockPos pos)"
		},
		{
			"forge": "isCatSittingOnChest(LevelAccessor arg0, BlockPos arg1)",
			"fabric": "hasCatOnTop(WorldAccess world, BlockPos pos)"
		},
		{
			"forge": "hasAnalogOutputSignal(BlockState arg0)",
			"fabric": "hasComparatorOutput(BlockState arg0)"
		},
		{
			"forge": "getAnalogOutputSignal(BlockState arg0, Level arg1, BlockPos arg2)",
			"fabric": "getComparatorOutput(BlockState arg0, World arg1, BlockPos arg2)"
		},
		{
			"forge": "rotate(BlockState arg0, Rotation arg1)",
			"fabric": "rotate(BlockState arg0, BlockRotation arg1)"
		},
		{
			"forge": "mirror(BlockState arg0, Mirror arg1)",
			"fabric": "mirror(BlockState arg0, BlockMirror arg1)"
		},
		{
			"forge": "createBlockStateDefinition(StateDefinition$Builder<Block, BlockState> arg0)",
			"fabric": "appendProperties(StateManager$Builder<Block, BlockState> arg0)"
		},
		{
			"forge": "isPathfindable(BlockState arg0, BlockGetter arg1, BlockPos arg2, PathComputationType arg3)",
			"fabric": "canPathfindThrough(BlockState arg0, BlockView arg1, BlockPos arg2, NavigationType arg3)"
		},
		{
			"forge": "tick(BlockState arg0, ServerLevel arg1, BlockPos arg2, RandomSource arg3)",
			"fabric": "scheduledTick(BlockState arg0, ServerWorld arg1, BlockPos arg2, Random arg3)"
		}
	]
}