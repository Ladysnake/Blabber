{
	"title": "net.minecraft.world.level.levelgen.NoiseBasedChunkGenerator",
	"items": [
		{
			"forge": "net.minecraft.world.level.levelgen.NoiseBasedChunkGenerator",
			"fabric": "net.minecraft.world.gen.chunk.NoiseChunkGenerator"
		},
		{
			"forge": "CODEC",
			"fabric": "CODEC"
		},
		{
			"forge": "CODEC",
			"fabric": "CODEC"
		},
		{
			"forge": "AIR",
			"fabric": "AIR"
		},
		{
			"forge": "settings",
			"fabric": "settings"
		},
		{
			"forge": "globalFluidPicker",
			"fabric": "fluidLevelSampler"
		},
		{
			"forge": "createFluidPicker(NoiseGeneratorSettings arg0)",
			"fabric": "createFluidLevelSampler(ChunkGeneratorSettings settings)"
		},
		{
			"forge": "createFluidPicker(NoiseGeneratorSettings arg0)",
			"fabric": "createFluidLevelSampler(ChunkGeneratorSettings settings)"
		},
		{
			"forge": "createBiomes(Executor arg0, RandomState arg1, Blender arg2, StructureManager arg3, ChunkAccess arg4)",
			"fabric": "populateBiomes(Executor arg0, NoiseConfig arg1, Blender arg2, StructureAccessor arg3, Chunk arg4)"
		},
		{
			"forge": "doCreateBiomes(Blender arg0, RandomState arg1, StructureManager arg2, ChunkAccess arg3)",
			"fabric": "populateBiomes(Blender blender, NoiseConfig noiseConfig, StructureAccessor structureAccessor, Chunk chunk)"
		},
		{
			"forge": "createNoiseChunk(ChunkAccess arg0, StructureManager arg1, Blender arg2, RandomState arg3)",
			"fabric": "createChunkNoiseSampler(Chunk chunk, StructureAccessor world, Blender blender, NoiseConfig noiseConfig)"
		},
		{
			"forge": "codec()",
			"fabric": "getCodec()"
		},
		{
			"forge": "generatorSettings()",
			"fabric": "getSettings()"
		},
		{
			"forge": "stable(ResourceKey<NoiseGeneratorSettings> arg0)",
			"fabric": "matchesSettings(RegistryKey<ChunkGeneratorSettings> settings)"
		},
		{
			"forge": "getBaseHeight(int arg0, int arg1, Heightmap$Types arg2, LevelHeightAccessor arg3, RandomState arg4)",
			"fabric": "getHeight(int arg0, int arg1, Heightmap$Type arg2, HeightLimitView arg3, NoiseConfig arg4)"
		},
		{
			"forge": "getBaseColumn(int arg0, int arg1, LevelHeightAccessor arg2, RandomState arg3)",
			"fabric": "getColumnSample(int arg0, int arg1, HeightLimitView arg2, NoiseConfig arg3)"
		},
		{
			"forge": "addDebugScreenInfo(List<String> arg0, RandomState arg1, BlockPos arg2)",
			"fabric": "getDebugHudText(List<String> arg0, NoiseConfig arg1, BlockPos arg2)"
		},
		{
			"forge": "iterateNoiseColumn(LevelHeightAccessor arg0, RandomState arg1, int arg2, int arg3, org.apache.commons.lang3.mutable.MutableObject<NoiseColumn> arg4, Predicate<BlockState> arg5)",
			"fabric": "sampleHeightmap(HeightLimitView world, NoiseConfig noiseConfig, int x, int z, org.apache.commons.lang3.mutable.MutableObject<VerticalBlockSample> columnSample, Predicate<BlockState> stopPredicate)"
		},
		{
			"forge": "buildSurface(WorldGenRegion arg0, StructureManager arg1, RandomState arg2, ChunkAccess arg3)",
			"fabric": "buildSurface(ChunkRegion arg0, StructureAccessor arg1, NoiseConfig arg2, Chunk arg3)"
		},
		{
			"forge": "buildSurface(ChunkAccess arg0, WorldGenerationContext arg1, RandomState arg2, StructureManager arg3, BiomeManager arg4, Registry<Biome> arg5, Blender arg6)",
			"fabric": "buildSurface(Chunk chunk, HeightContext heightContext, NoiseConfig noiseConfig, StructureAccessor structureAccessor, BiomeAccess biomeAccess, Registry<Biome> biomeRegistry, Blender blender)"
		},
		{
			"forge": "applyCarvers(WorldGenRegion arg0, long arg1, RandomState arg2, BiomeManager arg3, StructureManager arg4, ChunkAccess arg5, GenerationStep$Carving arg6)",
			"fabric": "carve(ChunkRegion arg0, long arg1, NoiseConfig arg2, BiomeAccess arg3, StructureAccessor arg4, Chunk arg5, GenerationStep$Carver arg6)"
		},
		{
			"forge": "fillFromNoise(Executor arg0, Blender arg1, RandomState arg2, StructureManager arg3, ChunkAccess arg4)",
			"fabric": "populateNoise(Executor arg0, Blender arg1, NoiseConfig arg2, StructureAccessor arg3, Chunk arg4)"
		},
		{
			"forge": "doFill(Blender arg0, StructureManager arg1, RandomState arg2, ChunkAccess arg3, int arg4, int arg5)",
			"fabric": "populateNoise(Blender blender, StructureAccessor structureAccessor, NoiseConfig noiseConfig, Chunk chunk, int minimumCellY, int cellHeight)"
		},
		{
			"forge": "debugPreliminarySurfaceLevel(NoiseChunk arg0, int arg1, int arg2, int arg3, BlockState arg4)",
			"fabric": "getBlockState(ChunkNoiseSampler chunkNoiseSampler, int x, int y, int z, BlockState state)"
		},
		{
			"forge": "getGenDepth()",
			"fabric": "getWorldHeight()"
		},
		{
			"forge": "getSeaLevel()",
			"fabric": "getSeaLevel()"
		},
		{
			"forge": "getMinY()",
			"fabric": "getMinimumY()"
		},
		{
			"forge": "spawnOriginalMobs(WorldGenRegion arg0)",
			"fabric": "populateEntities(ChunkRegion arg0)"
		}
	]
}