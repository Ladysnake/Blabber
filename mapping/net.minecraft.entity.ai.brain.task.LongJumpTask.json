{
	"title": "net.minecraft.world.entity.ai.behavior.LongJumpToRandomPos",
	"items": [
		{
			"forge": "net.minecraft.world.entity.ai.behavior.LongJumpToRandomPos",
			"fabric": "net.minecraft.entity.ai.brain.task.LongJumpTask"
		},
		{
			"forge": "FIND_JUMP_TRIES",
			"fabric": "MAX_COOLDOWN"
		},
		{
			"forge": "FIND_JUMP_TRIES",
			"fabric": "MAX_COOLDOWN"
		},
		{
			"forge": "PREPARE_JUMP_DURATION",
			"fabric": "TARGET_RETAIN_TIME"
		},
		{
			"forge": "MIN_PATHFIND_DISTANCE_TO_VALID_JUMP",
			"fabric": "PATHING_DISTANCE"
		},
		{
			"forge": "TIME_OUT_DURATION",
			"fabric": "RUN_TIME"
		},
		{
			"forge": "ALLOWED_ANGLES",
			"fabric": "RAM_RANGES"
		},
		{
			"forge": "timeBetweenLongJumps",
			"fabric": "cooldownRange"
		},
		{
			"forge": "maxLongJumpHeight",
			"fabric": "verticalRange"
		},
		{
			"forge": "maxLongJumpWidth",
			"fabric": "horizontalRange"
		},
		{
			"forge": "maxJumpVelocity",
			"fabric": "maxRange"
		},
		{
			"forge": "jumpCandidates",
			"fabric": "targets"
		},
		{
			"forge": "initialPosition",
			"fabric": "lastPos"
		},
		{
			"forge": "chosenJump",
			"fabric": "lastTarget"
		},
		{
			"forge": "findJumpTries",
			"fabric": "cooldown"
		},
		{
			"forge": "prepareJumpStart",
			"fabric": "targetTime"
		},
		{
			"forge": "getJumpSound",
			"fabric": "entityToSound"
		},
		{
			"forge": "acceptableLandingSpot",
			"fabric": "jumpToPredicate"
		},
		{
			"forge": "defaultAcceptableLandingSpot(E arg0, BlockPos arg1)",
			"fabric": "shouldJumpTo(E entity, BlockPos pos)"
		},
		{
			"forge": "defaultAcceptableLandingSpot(E arg0, BlockPos arg1)",
			"fabric": "shouldJumpTo(E entity, BlockPos pos)"
		},
		{
			"forge": "checkExtraStartConditions(ServerLevel arg0, Mob arg1)",
			"fabric": "shouldRun(ServerWorld arg0, MobEntity arg1)"
		},
		{
			"forge": "canStillUse(ServerLevel arg0, Mob arg1, long arg2)",
			"fabric": "shouldKeepRunning(ServerWorld arg0, MobEntity arg1, long arg2)"
		},
		{
			"forge": "start(ServerLevel arg0, E arg1, long arg2)",
			"fabric": "run(ServerWorld arg0, E arg1, long arg2)"
		},
		{
			"forge": "tick(ServerLevel arg0, E arg1, long arg2)",
			"fabric": "keepRunning(ServerWorld arg0, E arg1, long arg2)"
		},
		{
			"forge": "pickCandidate(ServerLevel arg0, E arg1, long arg2)",
			"fabric": "findTarget(ServerWorld world, E entity, long time)"
		},
		{
			"forge": "getJumpCandidate(ServerLevel arg0)",
			"fabric": "getTarget(ServerWorld world)"
		},
		{
			"forge": "isAcceptableLandingPosition(ServerLevel arg0, E arg1, BlockPos arg2)",
			"fabric": "canJumpTo(ServerWorld world, E entity, BlockPos pos)"
		},
		{
			"forge": "calculateOptimalJumpVector(Mob arg0, Vec3 arg1)",
			"fabric": "getJumpingVelocity(MobEntity entity, Vec3d pos)"
		},
		{
			"forge": "calculateJumpVectorForAngle(Mob arg0, Vec3 arg1, int arg2)",
			"fabric": "getJumpingVelocity(MobEntity entity, Vec3d pos, int range)"
		},
		{
			"forge": "isClearTransition(Mob arg0, EntityDimensions arg1, Vec3 arg2, Vec3 arg3)",
			"fabric": "canReach(MobEntity entity, EntityDimensions dimensions, Vec3d arg2, Vec3d arg3)"
		}
	]
}