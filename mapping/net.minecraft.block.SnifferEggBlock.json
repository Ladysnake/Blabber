{
	"title": "net.minecraft.world.level.block.SnifferEggBlock",
	"items": [
		{
			"forge": "net.minecraft.world.level.block.SnifferEggBlock",
			"fabric": "net.minecraft.block.SnifferEggBlock"
		},
		{
			"forge": "MAX_HATCH_LEVEL",
			"fabric": "FINAL_HATCH_STAGE"
		},
		{
			"forge": "MAX_HATCH_LEVEL",
			"fabric": "FINAL_HATCH_STAGE"
		},
		{
			"forge": "HATCH",
			"fabric": "HATCH"
		},
		{
			"forge": "REGULAR_HATCH_TIME_TICKS",
			"fabric": "HATCHING_TIME"
		},
		{
			"forge": "BOOSTED_HATCH_TIME_TICKS",
			"fabric": "BOOSTED_HATCHING_TIME"
		},
		{
			"forge": "RANDOM_HATCH_OFFSET_TICKS",
			"fabric": "MAX_RANDOM_CRACK_TIME_OFFSET"
		},
		{
			"forge": "SHAPE",
			"fabric": "SHAPE"
		},
		{
			"forge": "createBlockStateDefinition(StateDefinition$Builder<Block, BlockState> arg0)",
			"fabric": "appendProperties(StateManager$Builder<Block, BlockState> arg0)"
		},
		{
			"forge": "createBlockStateDefinition(StateDefinition$Builder<Block, BlockState> arg0)",
			"fabric": "appendProperties(StateManager$Builder<Block, BlockState> arg0)"
		},
		{
			"forge": "getShape(BlockState arg0, BlockGetter arg1, BlockPos arg2, CollisionContext arg3)",
			"fabric": "getOutlineShape(BlockState arg0, BlockView arg1, BlockPos arg2, ShapeContext arg3)"
		},
		{
			"forge": "getHatchLevel(BlockState arg0)",
			"fabric": "getHatchStage(BlockState state)"
		},
		{
			"forge": "isReadyToHatch(BlockState arg0)",
			"fabric": "isReadyToHatch(BlockState state)"
		},
		{
			"forge": "tick(BlockState arg0, ServerLevel arg1, BlockPos arg2, RandomSource arg3)",
			"fabric": "scheduledTick(BlockState arg0, ServerWorld arg1, BlockPos arg2, Random arg3)"
		},
		{
			"forge": "onPlace(BlockState arg0, Level arg1, BlockPos arg2, BlockState arg3, boolean arg4)",
			"fabric": "onBlockAdded(BlockState arg0, World arg1, BlockPos arg2, BlockState arg3, boolean arg4)"
		},
		{
			"forge": "isPathfindable(BlockState arg0, BlockGetter arg1, BlockPos arg2, PathComputationType arg3)",
			"fabric": "canPathfindThrough(BlockState arg0, BlockView arg1, BlockPos arg2, NavigationType arg3)"
		},
		{
			"forge": "hatchBoost(BlockGetter arg0, BlockPos arg1)",
			"fabric": "isAboveHatchBooster(BlockView world, BlockPos pos)"
		}
	]
}