{
	"title": "net.minecraft.world.level.levelgen.feature.trunkplacers.UpwardsBranchingTrunkPlacer",
	"items": [
		{
			"forge": "net.minecraft.world.level.levelgen.feature.trunkplacers.UpwardsBranchingTrunkPlacer",
			"fabric": "net.minecraft.world.gen.trunk.UpwardsBranchingTrunkPlacer"
		},
		{
			"forge": "CODEC",
			"fabric": "CODEC"
		},
		{
			"forge": "CODEC",
			"fabric": "CODEC"
		},
		{
			"forge": "extraBranchSteps",
			"fabric": "extraBranchSteps"
		},
		{
			"forge": "placeBranchPerLogProbability",
			"fabric": "placeBranchPerLogProbability"
		},
		{
			"forge": "extraBranchLength",
			"fabric": "extraBranchLength"
		},
		{
			"forge": "canGrowThrough",
			"fabric": "canGrowThrough"
		},
		{
			"forge": "type()",
			"fabric": "getType()"
		},
		{
			"forge": "type()",
			"fabric": "getType()"
		},
		{
			"forge": "placeTrunk(LevelSimulatedReader arg0, BiConsumer<BlockPos, BlockState> arg1, RandomSource arg2, int arg3, BlockPos arg4, TreeConfiguration arg5)",
			"fabric": "generate(TestableWorld arg0, BiConsumer<BlockPos, BlockState> arg1, Random arg2, int arg3, BlockPos arg4, TreeFeatureConfig arg5)"
		},
		{
			"forge": "placeBranch(LevelSimulatedReader arg0, BiConsumer<BlockPos, BlockState> arg1, RandomSource arg2, int arg3, TreeConfiguration arg4, List<FoliagePlacer$FoliageAttachment> arg5, BlockPos$MutableBlockPos arg6, int arg7, Direction arg8, int arg9, int arg10)",
			"fabric": "generateExtraBranch(TestableWorld world, BiConsumer<BlockPos, BlockState> replacer, Random random, int height, TreeFeatureConfig config, List<FoliagePlacer$TreeNode> nodes, BlockPos$Mutable pos, int yOffset, Direction direction, int length, int steps)"
		},
		{
			"forge": "validTreePos(LevelSimulatedReader arg0, BlockPos arg1)",
			"fabric": "canReplace(TestableWorld arg0, BlockPos arg1)"
		}
	]
}