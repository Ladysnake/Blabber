{
	"title": "net.minecraft.world.entity.AgeableMob",
	"items": [
		{
			"forge": "net.minecraft.world.entity.AgeableMob",
			"fabric": "net.minecraft.entity.passive.PassiveEntity"
		},
		{
			"forge": "DATA_BABY_ID",
			"fabric": "CHILD"
		},
		{
			"forge": "DATA_BABY_ID",
			"fabric": "CHILD"
		},
		{
			"forge": "BABY_START_AGE",
			"fabric": "BABY_AGE"
		},
		{
			"forge": "FORCED_AGE_PARTICLE_TICKS",
			"fabric": "HAPPY_TICKS"
		},
		{
			"forge": "age",
			"fabric": "breedingAge"
		},
		{
			"forge": "forcedAge",
			"fabric": "forcedAge"
		},
		{
			"forge": "forcedAgeTimer",
			"fabric": "happyTicksRemaining"
		},
		{
			"forge": "finalizeSpawn(ServerLevelAccessor arg0, DifficultyInstance arg1, MobSpawnType arg2, SpawnGroupData arg3, CompoundTag arg4)",
			"fabric": "initialize(ServerWorldAccess arg0, LocalDifficulty arg1, SpawnReason arg2, EntityData arg3, NbtCompound arg4)"
		},
		{
			"forge": "finalizeSpawn(ServerLevelAccessor arg0, DifficultyInstance arg1, MobSpawnType arg2, SpawnGroupData arg3, CompoundTag arg4)",
			"fabric": "initialize(ServerWorldAccess arg0, LocalDifficulty arg1, SpawnReason arg2, EntityData arg3, NbtCompound arg4)"
		},
		{
			"forge": "getBreedOffspring(ServerLevel arg0, AgeableMob arg1)",
			"fabric": "createChild(ServerWorld world, PassiveEntity entity)"
		},
		{
			"forge": "defineSynchedData()",
			"fabric": "initDataTracker()"
		},
		{
			"forge": "canBreed()",
			"fabric": "isReadyToBreed()"
		},
		{
			"forge": "getAge()",
			"fabric": "getBreedingAge()"
		},
		{
			"forge": "ageUp(int arg0, boolean arg1)",
			"fabric": "growUp(int age, boolean overGrow)"
		},
		{
			"forge": "ageUp(int arg0)",
			"fabric": "growUp(int age)"
		},
		{
			"forge": "setAge(int arg0)",
			"fabric": "setBreedingAge(int age)"
		},
		{
			"forge": "addAdditionalSaveData(CompoundTag arg0)",
			"fabric": "writeCustomDataToNbt(NbtCompound arg0)"
		},
		{
			"forge": "readAdditionalSaveData(CompoundTag arg0)",
			"fabric": "readCustomDataFromNbt(NbtCompound arg0)"
		},
		{
			"forge": "onSyncedDataUpdated(EntityDataAccessor<?> arg0)",
			"fabric": "onTrackedDataSet(TrackedData<?> arg0)"
		},
		{
			"forge": "aiStep()",
			"fabric": "tickMovement()"
		},
		{
			"forge": "ageBoundaryReached()",
			"fabric": "onGrowUp()"
		},
		{
			"forge": "isBaby()",
			"fabric": "isBaby()"
		},
		{
			"forge": "setBaby(boolean arg0)",
			"fabric": "setBaby(boolean arg0)"
		},
		{
			"forge": "getSpeedUpSecondsWhenFeeding(int arg0)",
			"fabric": "toGrowUpAge(int breedingAge)"
		}
	]
}