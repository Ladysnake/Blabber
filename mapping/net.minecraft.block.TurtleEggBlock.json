{
	"title": "net.minecraft.world.level.block.TurtleEggBlock",
	"items": [
		{
			"forge": "net.minecraft.world.level.block.TurtleEggBlock",
			"fabric": "net.minecraft.block.TurtleEggBlock"
		},
		{
			"forge": "MAX_HATCH_LEVEL",
			"fabric": "field_31272"
		},
		{
			"forge": "MAX_HATCH_LEVEL",
			"fabric": "field_31272"
		},
		{
			"forge": "MIN_EGGS",
			"fabric": "field_31273"
		},
		{
			"forge": "MAX_EGGS",
			"fabric": "field_31274"
		},
		{
			"forge": "ONE_EGG_AABB",
			"fabric": "SMALL_SHAPE"
		},
		{
			"forge": "MULTIPLE_EGGS_AABB",
			"fabric": "LARGE_SHAPE"
		},
		{
			"forge": "HATCH",
			"fabric": "HATCH"
		},
		{
			"forge": "EGGS",
			"fabric": "EGGS"
		},
		{
			"forge": "stepOn(Level arg0, BlockPos arg1, BlockState arg2, Entity arg3)",
			"fabric": "onSteppedOn(World arg0, BlockPos arg1, BlockState arg2, Entity arg3)"
		},
		{
			"forge": "stepOn(Level arg0, BlockPos arg1, BlockState arg2, Entity arg3)",
			"fabric": "onSteppedOn(World arg0, BlockPos arg1, BlockState arg2, Entity arg3)"
		},
		{
			"forge": "fallOn(Level arg0, BlockState arg1, BlockPos arg2, Entity arg3, float arg4)",
			"fabric": "onLandedUpon(World arg0, BlockState arg1, BlockPos arg2, Entity arg3, float arg4)"
		},
		{
			"forge": "destroyEgg(Level arg0, BlockState arg1, BlockPos arg2, Entity arg3, int arg4)",
			"fabric": "tryBreakEgg(World world, BlockState state, BlockPos pos, Entity entity, int inverseChance)"
		},
		{
			"forge": "decreaseEggs(Level arg0, BlockPos arg1, BlockState arg2)",
			"fabric": "breakEgg(World world, BlockPos pos, BlockState state)"
		},
		{
			"forge": "randomTick(BlockState arg0, ServerLevel arg1, BlockPos arg2, RandomSource arg3)",
			"fabric": "randomTick(BlockState arg0, ServerWorld arg1, BlockPos arg2, Random arg3)"
		},
		{
			"forge": "onSand(BlockGetter arg0, BlockPos arg1)",
			"fabric": "isSandBelow(BlockView world, BlockPos pos)"
		},
		{
			"forge": "isSand(BlockGetter arg0, BlockPos arg1)",
			"fabric": "isSand(BlockView world, BlockPos pos)"
		},
		{
			"forge": "onPlace(BlockState arg0, Level arg1, BlockPos arg2, BlockState arg3, boolean arg4)",
			"fabric": "onBlockAdded(BlockState arg0, World arg1, BlockPos arg2, BlockState arg3, boolean arg4)"
		},
		{
			"forge": "shouldUpdateHatchLevel(Level arg0)",
			"fabric": "shouldHatchProgress(World world)"
		},
		{
			"forge": "playerDestroy(Level arg0, Player arg1, BlockPos arg2, BlockState arg3, BlockEntity arg4, ItemStack arg5)",
			"fabric": "afterBreak(World arg0, PlayerEntity arg1, BlockPos arg2, BlockState arg3, BlockEntity arg4, ItemStack arg5)"
		},
		{
			"forge": "canBeReplaced(BlockState arg0, BlockPlaceContext arg1)",
			"fabric": "canReplace(BlockState arg0, ItemPlacementContext arg1)"
		},
		{
			"forge": "getStateForPlacement(BlockPlaceContext arg0)",
			"fabric": "getPlacementState(ItemPlacementContext arg0)"
		},
		{
			"forge": "getShape(BlockState arg0, BlockGetter arg1, BlockPos arg2, CollisionContext arg3)",
			"fabric": "getOutlineShape(BlockState arg0, BlockView arg1, BlockPos arg2, ShapeContext arg3)"
		},
		{
			"forge": "createBlockStateDefinition(StateDefinition$Builder<Block, BlockState> arg0)",
			"fabric": "appendProperties(StateManager$Builder<Block, BlockState> arg0)"
		},
		{
			"forge": "canDestroyEgg(Level arg0, Entity arg1)",
			"fabric": "breaksEgg(World world, Entity entity)"
		}
	]
}