{
	"title": "net.minecraft.world.level.block.entity.SignText",
	"items": [
		{
			"forge": "net.minecraft.world.level.block.entity.SignText",
			"fabric": "net.minecraft.block.entity.SignText"
		},
		{
			"forge": "LINES_CODEC",
			"fabric": "MESSAGES_CODEC"
		},
		{
			"forge": "LINES_CODEC",
			"fabric": "MESSAGES_CODEC"
		},
		{
			"forge": "DIRECT_CODEC",
			"fabric": "CODEC"
		},
		{
			"forge": "LINES",
			"fabric": "field_43299"
		},
		{
			"forge": "messages",
			"fabric": "messages"
		},
		{
			"forge": "filteredMessages",
			"fabric": "filteredMessages"
		},
		{
			"forge": "color",
			"fabric": "color"
		},
		{
			"forge": "hasGlowingText",
			"fabric": "glowing"
		},
		{
			"forge": "renderMessages",
			"fabric": "orderedMessages"
		},
		{
			"forge": "renderMessagedFiltered",
			"fabric": "filtered"
		},
		{
			"forge": "emptyMessages()",
			"fabric": "getDefaultText()"
		},
		{
			"forge": "emptyMessages()",
			"fabric": "getDefaultText()"
		},
		{
			"forge": "load(Component[] arg0, Optional<Component[]> arg1, DyeColor arg2, boolean arg3)",
			"fabric": "create(Text[] messages, Optional<Text[]> filteredMessages, DyeColor color, boolean glowing)"
		},
		{
			"forge": "populateFilteredMessagesWithRawMessages(Component[] arg0, Component[] arg1)",
			"fabric": "copyMessages(Text[] from, Text[] to)"
		},
		{
			"forge": "hasGlowingText()",
			"fabric": "isGlowing()"
		},
		{
			"forge": "setHasGlowingText(boolean arg0)",
			"fabric": "withGlowing(boolean glowing)"
		},
		{
			"forge": "getColor()",
			"fabric": "getColor()"
		},
		{
			"forge": "setColor(DyeColor arg0)",
			"fabric": "withColor(DyeColor color)"
		},
		{
			"forge": "getMessage(int arg0, boolean arg1)",
			"fabric": "getMessage(int line, boolean filtered)"
		},
		{
			"forge": "setMessage(int arg0, Component arg1)",
			"fabric": "withMessage(int line, Text message)"
		},
		{
			"forge": "setMessage(int arg0, Component arg1, Component arg2)",
			"fabric": "withMessage(int line, Text message, Text filteredMessage)"
		},
		{
			"forge": "hasMessage(Player arg0)",
			"fabric": "hasText(PlayerEntity player)"
		},
		{
			"forge": "getMessages(boolean arg0)",
			"fabric": "getMessages(boolean filtered)"
		},
		{
			"forge": "getRenderMessages(boolean arg0, Function<Component, FormattedCharSequence> arg1)",
			"fabric": "getOrderedMessages(boolean filtered, Function<Text, OrderedText> messageOrderer)"
		},
		{
			"forge": "getOnlyFilteredMessages()",
			"fabric": "getFilteredMessages()"
		},
		{
			"forge": "hasAnyClickCommands(Player arg0)",
			"fabric": "hasRunCommandClickEvent(PlayerEntity player)"
		}
	]
}