{
	"title": "net.minecraft.world.entity.projectile.Projectile",
	"items": [
		{
			"forge": "net.minecraft.world.entity.projectile.Projectile",
			"fabric": "net.minecraft.entity.projectile.ProjectileEntity"
		},
		{
			"forge": "ownerUUID",
			"fabric": "ownerUuid"
		},
		{
			"forge": "ownerUUID",
			"fabric": "ownerUuid"
		},
		{
			"forge": "cachedOwner",
			"fabric": "owner"
		},
		{
			"forge": "leftOwner",
			"fabric": "leftOwner"
		},
		{
			"forge": "hasBeenShot",
			"fabric": "shot"
		},
		{
			"forge": "setOwner(Entity arg0)",
			"fabric": "setOwner(Entity entity)"
		},
		{
			"forge": "setOwner(Entity arg0)",
			"fabric": "setOwner(Entity entity)"
		},
		{
			"forge": "getOwner()",
			"fabric": "getOwner()"
		},
		{
			"forge": "getEffectSource()",
			"fabric": "getEffectCause()"
		},
		{
			"forge": "addAdditionalSaveData(CompoundTag arg0)",
			"fabric": "writeCustomDataToNbt(NbtCompound arg0)"
		},
		{
			"forge": "ownedBy(Entity arg0)",
			"fabric": "isOwner(Entity entity)"
		},
		{
			"forge": "readAdditionalSaveData(CompoundTag arg0)",
			"fabric": "readCustomDataFromNbt(NbtCompound arg0)"
		},
		{
			"forge": "tick()",
			"fabric": "tick()"
		},
		{
			"forge": "checkLeftOwner()",
			"fabric": "shouldLeaveOwner()"
		},
		{
			"forge": "shoot(double arg0, double arg1, double arg2, float arg3, float arg4)",
			"fabric": "setVelocity(double x, double y, double z, float speed, float divergence)"
		},
		{
			"forge": "shootFromRotation(Entity arg0, float arg1, float arg2, float arg3, float arg4, float arg5)",
			"fabric": "setVelocity(Entity shooter, float pitch, float yaw, float roll, float speed, float divergence)"
		},
		{
			"forge": "onHit(HitResult arg0)",
			"fabric": "onCollision(HitResult hitResult)"
		},
		{
			"forge": "onHitEntity(EntityHitResult arg0)",
			"fabric": "onEntityHit(EntityHitResult entityHitResult)"
		},
		{
			"forge": "onHitBlock(BlockHitResult arg0)",
			"fabric": "onBlockHit(BlockHitResult blockHitResult)"
		},
		{
			"forge": "lerpMotion(double arg0, double arg1, double arg2)",
			"fabric": "setVelocityClient(double arg0, double arg1, double arg2)"
		},
		{
			"forge": "canHitEntity(Entity arg0)",
			"fabric": "canHit(Entity entity)"
		},
		{
			"forge": "updateRotation()",
			"fabric": "updateRotation()"
		},
		{
			"forge": "lerpRotation(float arg0, float arg1)",
			"fabric": "updateRotation(float prevRot, float newRot)"
		},
		{
			"forge": "getAddEntityPacket()",
			"fabric": "createSpawnPacket()"
		},
		{
			"forge": "recreateFromPacket(ClientboundAddEntityPacket arg0)",
			"fabric": "onSpawnPacket(EntitySpawnS2CPacket arg0)"
		},
		{
			"forge": "mayInteract(Level arg0, BlockPos arg1)",
			"fabric": "canModifyAt(World arg0, BlockPos arg1)"
		}
	]
}