{
	"title": "net.minecraft.network.protocol.game.DebugPackets",
	"items": [
		{
			"forge": "net.minecraft.network.protocol.game.DebugPackets",
			"fabric": "net.minecraft.server.network.DebugInfoSender"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "sendGameTestAddMarker(ServerLevel arg0, BlockPos arg1, String arg2, int arg3, int arg4)",
			"fabric": "addGameTestMarker(ServerWorld world, BlockPos pos, String message, int color, int duration)"
		},
		{
			"forge": "sendGameTestAddMarker(ServerLevel arg0, BlockPos arg1, String arg2, int arg3, int arg4)",
			"fabric": "addGameTestMarker(ServerWorld world, BlockPos pos, String message, int color, int duration)"
		},
		{
			"forge": "sendGameTestClearPacket(ServerLevel arg0)",
			"fabric": "clearGameTestMarkers(ServerWorld world)"
		},
		{
			"forge": "sendPoiPacketsForChunk(ServerLevel arg0, ChunkPos arg1)",
			"fabric": "sendChunkWatchingChange(ServerWorld world, ChunkPos pos)"
		},
		{
			"forge": "sendPoiAddedPacket(ServerLevel arg0, BlockPos arg1)",
			"fabric": "sendPoiAddition(ServerWorld world, BlockPos pos)"
		},
		{
			"forge": "sendPoiRemovedPacket(ServerLevel arg0, BlockPos arg1)",
			"fabric": "sendPoiRemoval(ServerWorld world, BlockPos pos)"
		},
		{
			"forge": "sendPoiTicketCountPacket(ServerLevel arg0, BlockPos arg1)",
			"fabric": "sendPointOfInterest(ServerWorld world, BlockPos pos)"
		},
		{
			"forge": "sendVillageSectionsPacket(ServerLevel arg0, BlockPos arg1)",
			"fabric": "sendPoi(ServerWorld world, BlockPos pos)"
		},
		{
			"forge": "sendPathFindingPacket(Level arg0, Mob arg1, Path arg2, float arg3)",
			"fabric": "sendPathfindingData(World world, MobEntity mob, Path path, float nodeReachProximity)"
		},
		{
			"forge": "sendNeighborsUpdatePacket(Level arg0, BlockPos arg1)",
			"fabric": "sendNeighborUpdate(World world, BlockPos pos)"
		},
		{
			"forge": "sendStructurePacket(WorldGenLevel arg0, StructureStart arg1)",
			"fabric": "sendStructureStart(StructureWorldAccess world, StructureStart structureStart)"
		},
		{
			"forge": "sendGoalSelector(Level arg0, Mob arg1, GoalSelector arg2)",
			"fabric": "sendGoalSelector(World world, MobEntity mob, GoalSelector goalSelector)"
		},
		{
			"forge": "sendRaids(ServerLevel arg0, Collection<Raid> arg1)",
			"fabric": "sendRaids(ServerWorld server, Collection<Raid> raids)"
		},
		{
			"forge": "sendEntityBrain(LivingEntity arg0)",
			"fabric": "sendBrainDebugData(LivingEntity living)"
		},
		{
			"forge": "sendBeeInfo(Bee arg0)",
			"fabric": "sendBeeDebugData(BeeEntity bee)"
		},
		{
			"forge": "sendGameEventInfo(Level arg0, GameEvent arg1, Vec3 arg2)",
			"fabric": "sendGameEvent(World world, GameEvent event, Vec3d pos)"
		},
		{
			"forge": "sendGameEventListenerInfo(Level arg0, GameEventListener arg1)",
			"fabric": "sendGameEventListener(World world, GameEventListener eventListener)"
		},
		{
			"forge": "sendHiveInfo(Level arg0, BlockPos arg1, BlockState arg2, BeehiveBlockEntity arg3)",
			"fabric": "sendBeehiveDebugData(World world, BlockPos pos, BlockState state, BeehiveBlockEntity blockEntity)"
		},
		{
			"forge": "writeBrain(LivingEntity arg0, FriendlyByteBuf arg1)",
			"fabric": "writeBrain(LivingEntity entity, PacketByteBuf buf)"
		},
		{
			"forge": "getMemoryDescriptions(LivingEntity arg0, long arg1)",
			"fabric": "listMemories(LivingEntity entity, long currentTime)"
		},
		{
			"forge": "getShortDescription(ServerLevel arg0, Object arg1)",
			"fabric": "format(ServerWorld world, Object object)"
		},
		{
			"forge": "sendPacketToAllPlayers(ServerLevel arg0, FriendlyByteBuf arg1, ResourceLocation arg2)",
			"fabric": "sendToAll(ServerWorld world, PacketByteBuf buf, Identifier channel)"
		}
	]
}