{
	"title": "net.minecraft.world.level.levelgen.WorldDimensions",
	"items": [
		{
			"forge": "net.minecraft.world.level.levelgen.WorldDimensions",
			"fabric": "net.minecraft.world.dimension.DimensionOptionsRegistryHolder"
		},
		{
			"forge": "dimensions",
			"fabric": "dimensions"
		},
		{
			"forge": "dimensions",
			"fabric": "dimensions"
		},
		{
			"forge": "CODEC",
			"fabric": "CODEC"
		},
		{
			"forge": "BUILTIN_ORDER",
			"fabric": "VANILLA_KEYS"
		},
		{
			"forge": "VANILLA_DIMENSION_COUNT",
			"fabric": "VANILLA_KEY_COUNT"
		},
		{
			"forge": "keysInOrder(Stream<ResourceKey<LevelStem>> arg0)",
			"fabric": "streamAll(Stream<RegistryKey<DimensionOptions>> otherKeys)"
		},
		{
			"forge": "keysInOrder(Stream<ResourceKey<LevelStem>> arg0)",
			"fabric": "streamAll(Stream<RegistryKey<DimensionOptions>> otherKeys)"
		},
		{
			"forge": "replaceOverworldGenerator(RegistryAccess arg0, ChunkGenerator arg1)",
			"fabric": "with(DynamicRegistryManager dynamicRegistryManager, ChunkGenerator chunkGenerator)"
		},
		{
			"forge": "withOverworld(Registry<DimensionType> arg0, Registry<LevelStem> arg1, ChunkGenerator arg2)",
			"fabric": "createRegistry(Registry<DimensionType> dynamicRegistry, Registry<DimensionOptions> currentRegistry, ChunkGenerator chunkGenerator)"
		},
		{
			"forge": "withOverworld(Registry<LevelStem> arg0, Holder<DimensionType> arg1, ChunkGenerator arg2)",
			"fabric": "createRegistry(Registry<DimensionOptions> currentRegistry, RegistryEntry<DimensionType> overworldEntry, ChunkGenerator chunkGenerator)"
		},
		{
			"forge": "overworld()",
			"fabric": "getChunkGenerator()"
		},
		{
			"forge": "get(ResourceKey<LevelStem> arg0)",
			"fabric": "getOrEmpty(RegistryKey<DimensionOptions> key)"
		},
		{
			"forge": "levels()",
			"fabric": "getWorldKeys()"
		},
		{
			"forge": "isDebug()",
			"fabric": "isDebug()"
		},
		{
			"forge": "specialWorldProperty(Registry<LevelStem> arg0)",
			"fabric": "getSpecialProperty(Registry<DimensionOptions> dimensionOptionsRegistry)"
		},
		{
			"forge": "checkStability(ResourceKey<LevelStem> arg0, LevelStem arg1)",
			"fabric": "getLifecycle(RegistryKey<DimensionOptions> key, DimensionOptions dimensionOptions)"
		},
		{
			"forge": "isVanillaLike(ResourceKey<LevelStem> arg0, LevelStem arg1)",
			"fabric": "isVanilla(RegistryKey<DimensionOptions> key, DimensionOptions dimensionOptions)"
		},
		{
			"forge": "isStableOverworld(LevelStem arg0)",
			"fabric": "isOverworldVanilla(DimensionOptions dimensionOptions)"
		},
		{
			"forge": "isStableNether(LevelStem arg0)",
			"fabric": "isNetherVanilla(DimensionOptions dimensionOptions)"
		},
		{
			"forge": "isStableEnd(LevelStem arg0)",
			"fabric": "isTheEndVanilla(DimensionOptions dimensionOptions)"
		},
		{
			"forge": "bake(Registry<LevelStem> arg0)",
			"fabric": "toConfig(Registry<DimensionOptions> existingRegistry)"
		},
		{
			"forge": "dimensions()",
			"fabric": "dimensions()"
		}
	]
}