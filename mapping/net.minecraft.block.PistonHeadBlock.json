{
	"title": "net.minecraft.world.level.block.piston.PistonHeadBlock",
	"items": [
		{
			"forge": "net.minecraft.world.level.block.piston.PistonHeadBlock",
			"fabric": "net.minecraft.block.PistonHeadBlock"
		},
		{
			"forge": "TYPE",
			"fabric": "TYPE"
		},
		{
			"forge": "TYPE",
			"fabric": "TYPE"
		},
		{
			"forge": "SHORT",
			"fabric": "SHORT"
		},
		{
			"forge": "PLATFORM",
			"fabric": "field_31377"
		},
		{
			"forge": "EAST_AABB",
			"fabric": "EAST_HEAD_SHAPE"
		},
		{
			"forge": "WEST_AABB",
			"fabric": "WEST_HEAD_SHAPE"
		},
		{
			"forge": "SOUTH_AABB",
			"fabric": "SOUTH_HEAD_SHAPE"
		},
		{
			"forge": "NORTH_AABB",
			"fabric": "NORTH_HEAD_SHAPE"
		},
		{
			"forge": "UP_AABB",
			"fabric": "UP_HEAD_SHAPE"
		},
		{
			"forge": "DOWN_AABB",
			"fabric": "DOWN_HEAD_SHAPE"
		},
		{
			"forge": "AABB_OFFSET",
			"fabric": "field_31378"
		},
		{
			"forge": "EDGE_MIN",
			"fabric": "field_31379"
		},
		{
			"forge": "EDGE_MAX",
			"fabric": "field_31380"
		},
		{
			"forge": "UP_ARM_AABB",
			"fabric": "UP_ARM_SHAPE"
		},
		{
			"forge": "DOWN_ARM_AABB",
			"fabric": "DOWN_ARM_SHAPE"
		},
		{
			"forge": "SOUTH_ARM_AABB",
			"fabric": "SOUTH_ARM_SHAPE"
		},
		{
			"forge": "NORTH_ARM_AABB",
			"fabric": "NORTH_ARM_SHAPE"
		},
		{
			"forge": "EAST_ARM_AABB",
			"fabric": "EAST_ARM_SHAPE"
		},
		{
			"forge": "WEST_ARM_AABB",
			"fabric": "WEST_ARM_SHAPE"
		},
		{
			"forge": "SHORT_UP_ARM_AABB",
			"fabric": "SHORT_UP_ARM_SHAPE"
		},
		{
			"forge": "SHORT_DOWN_ARM_AABB",
			"fabric": "SHORT_DOWN_ARM_SHAPE"
		},
		{
			"forge": "SHORT_SOUTH_ARM_AABB",
			"fabric": "SHORT_SOUTH_ARM_SHAPE"
		},
		{
			"forge": "SHORT_NORTH_ARM_AABB",
			"fabric": "SHORT_NORTH_ARM_SHAPE"
		},
		{
			"forge": "SHORT_EAST_ARM_AABB",
			"fabric": "SHORT_EAST_ARM_SHAPE"
		},
		{
			"forge": "SHORT_WEST_ARM_AABB",
			"fabric": "SHORT_WEST_ARM_SHAPE"
		},
		{
			"forge": "SHAPES_SHORT",
			"fabric": "SHORT_HEAD_SHAPES"
		},
		{
			"forge": "SHAPES_LONG",
			"fabric": "HEAD_SHAPES"
		},
		{
			"forge": "makeShapes(boolean arg0)",
			"fabric": "getHeadShapes(boolean shortHead)"
		},
		{
			"forge": "makeShapes(boolean arg0)",
			"fabric": "getHeadShapes(boolean shortHead)"
		},
		{
			"forge": "calculateShape(Direction arg0, boolean arg1)",
			"fabric": "getHeadShape(Direction direction, boolean shortHead)"
		},
		{
			"forge": "useShapeForLightOcclusion(BlockState arg0)",
			"fabric": "hasSidedTransparency(BlockState arg0)"
		},
		{
			"forge": "getShape(BlockState arg0, BlockGetter arg1, BlockPos arg2, CollisionContext arg3)",
			"fabric": "getOutlineShape(BlockState arg0, BlockView arg1, BlockPos arg2, ShapeContext arg3)"
		},
		{
			"forge": "isFittingBase(BlockState arg0, BlockState arg1)",
			"fabric": "isAttached(BlockState headState, BlockState pistonState)"
		},
		{
			"forge": "playerWillDestroy(Level arg0, BlockPos arg1, BlockState arg2, Player arg3)",
			"fabric": "onBreak(World arg0, BlockPos arg1, BlockState arg2, PlayerEntity arg3)"
		},
		{
			"forge": "onRemove(BlockState arg0, Level arg1, BlockPos arg2, BlockState arg3, boolean arg4)",
			"fabric": "onStateReplaced(BlockState arg0, World arg1, BlockPos arg2, BlockState arg3, boolean arg4)"
		},
		{
			"forge": "updateShape(BlockState arg0, Direction arg1, BlockState arg2, LevelAccessor arg3, BlockPos arg4, BlockPos arg5)",
			"fabric": "getStateForNeighborUpdate(BlockState arg0, Direction arg1, BlockState arg2, WorldAccess arg3, BlockPos arg4, BlockPos arg5)"
		},
		{
			"forge": "canSurvive(BlockState arg0, LevelReader arg1, BlockPos arg2)",
			"fabric": "canPlaceAt(BlockState arg0, WorldView arg1, BlockPos arg2)"
		},
		{
			"forge": "neighborChanged(BlockState arg0, Level arg1, BlockPos arg2, Block arg3, BlockPos arg4, boolean arg5)",
			"fabric": "neighborUpdate(BlockState arg0, World arg1, BlockPos arg2, Block arg3, BlockPos arg4, boolean arg5)"
		},
		{
			"forge": "getCloneItemStack(BlockGetter arg0, BlockPos arg1, BlockState arg2)",
			"fabric": "getPickStack(BlockView arg0, BlockPos arg1, BlockState arg2)"
		},
		{
			"forge": "rotate(BlockState arg0, Rotation arg1)",
			"fabric": "rotate(BlockState arg0, BlockRotation arg1)"
		},
		{
			"forge": "mirror(BlockState arg0, Mirror arg1)",
			"fabric": "mirror(BlockState arg0, BlockMirror arg1)"
		},
		{
			"forge": "createBlockStateDefinition(StateDefinition$Builder<Block, BlockState> arg0)",
			"fabric": "appendProperties(StateManager$Builder<Block, BlockState> arg0)"
		},
		{
			"forge": "isPathfindable(BlockState arg0, BlockGetter arg1, BlockPos arg2, PathComputationType arg3)",
			"fabric": "canPathfindThrough(BlockState arg0, BlockView arg1, BlockPos arg2, NavigationType arg3)"
		}
	]
}