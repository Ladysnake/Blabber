{
	"title": "net.minecraft.advancements.critereon.MinMaxBounds",
	"items": [
		{
			"forge": "net.minecraft.advancements.critereon.MinMaxBounds",
			"fabric": "net.minecraft.predicate.NumberRange"
		},
		{
			"forge": "ERROR_EMPTY",
			"fabric": "EXCEPTION_EMPTY"
		},
		{
			"forge": "ERROR_EMPTY",
			"fabric": "EXCEPTION_EMPTY"
		},
		{
			"forge": "ERROR_SWAPPED",
			"fabric": "EXCEPTION_SWAPPED"
		},
		{
			"forge": "min",
			"fabric": "min"
		},
		{
			"forge": "max",
			"fabric": "max"
		},
		{
			"forge": "getMin()",
			"fabric": "getMin()"
		},
		{
			"forge": "getMin()",
			"fabric": "getMin()"
		},
		{
			"forge": "getMax()",
			"fabric": "getMax()"
		},
		{
			"forge": "isAny()",
			"fabric": "isDummy()"
		},
		{
			"forge": "serializeToJson()",
			"fabric": "toJson()"
		},
		{
			"forge": "fromJson(com.google.gson.JsonElement arg0, R arg1, BiFunction<com.google.gson.JsonElement, String, T> arg2, MinMaxBounds$BoundsFactory<T, R> arg3)",
			"fabric": "fromJson(com.google.gson.JsonElement json, R fallback, BiFunction<com.google.gson.JsonElement, String, T> asNumber, NumberRange$Factory<T, R> factory)"
		},
		{
			"forge": "fromReader(com.mojang.brigadier.StringReader arg0, MinMaxBounds$BoundsFromReaderFactory<T, R> arg1, Function<String, T> arg2, Supplier<com.mojang.brigadier.exceptions.DynamicCommandExceptionType> arg3, Function<T, T> arg4)",
			"fabric": "parse(com.mojang.brigadier.StringReader commandReader, NumberRange$CommandFactory<T, R> commandFactory, Function<String, T> converter, Supplier<com.mojang.brigadier.exceptions.DynamicCommandExceptionType> exceptionTypeSupplier, Function<T, T> mapper)"
		},
		{
			"forge": "readNumber(com.mojang.brigadier.StringReader arg0, Function<String, T> arg1, Supplier<com.mojang.brigadier.exceptions.DynamicCommandExceptionType> arg2)",
			"fabric": "fromStringReader(com.mojang.brigadier.StringReader reader, Function<String, T> converter, Supplier<com.mojang.brigadier.exceptions.DynamicCommandExceptionType> exceptionTypeSupplier)"
		},
		{
			"forge": "isAllowedInputChat(com.mojang.brigadier.StringReader arg0)",
			"fabric": "isNextCharValid(com.mojang.brigadier.StringReader reader)"
		},
		{
			"forge": "optionallyFormat(T arg0, Function<T, T> arg1)",
			"fabric": "map(T object, Function<T, T> function)"
		}
	]
}