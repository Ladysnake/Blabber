{
	"title": "net.minecraft.world.phys.shapes.VoxelShape",
	"items": [
		{
			"forge": "net.minecraft.world.phys.shapes.VoxelShape",
			"fabric": "net.minecraft.util.shape.VoxelShape"
		},
		{
			"forge": "shape",
			"fabric": "voxels"
		},
		{
			"forge": "shape",
			"fabric": "voxels"
		},
		{
			"forge": "faces",
			"fabric": "shapeCache"
		},
		{
			"forge": "min(Direction$Axis arg0)",
			"fabric": "getMin(Direction$Axis axis)"
		},
		{
			"forge": "min(Direction$Axis arg0)",
			"fabric": "getMin(Direction$Axis axis)"
		},
		{
			"forge": "max(Direction$Axis arg0)",
			"fabric": "getMax(Direction$Axis axis)"
		},
		{
			"forge": "bounds()",
			"fabric": "getBoundingBox()"
		},
		{
			"forge": "get(Direction$Axis arg0, int arg1)",
			"fabric": "getPointPosition(Direction$Axis axis, int index)"
		},
		{
			"forge": "getCoords(Direction$Axis arg0)",
			"fabric": "getPointPositions(Direction$Axis axis)"
		},
		{
			"forge": "isEmpty()",
			"fabric": "isEmpty()"
		},
		{
			"forge": "move(double arg0, double arg1, double arg2)",
			"fabric": "offset(double x, double y, double z)"
		},
		{
			"forge": "optimize()",
			"fabric": "simplify()"
		},
		{
			"forge": "forAllEdges(Shapes$DoubleLineConsumer arg0)",
			"fabric": "forEachEdge(VoxelShapes$BoxConsumer consumer)"
		},
		{
			"forge": "forAllBoxes(Shapes$DoubleLineConsumer arg0)",
			"fabric": "forEachBox(VoxelShapes$BoxConsumer consumer)"
		},
		{
			"forge": "toAabbs()",
			"fabric": "getBoundingBoxes()"
		},
		{
			"forge": "min(Direction$Axis arg0, double arg1, double arg2)",
			"fabric": "getStartingCoord(Direction$Axis axis, double from, double to)"
		},
		{
			"forge": "max(Direction$Axis arg0, double arg1, double arg2)",
			"fabric": "getEndingCoord(Direction$Axis axis, double from, double to)"
		},
		{
			"forge": "findIndex(Direction$Axis arg0, double arg1)",
			"fabric": "getCoordIndex(Direction$Axis axis, double coord)"
		},
		{
			"forge": "clip(Vec3 arg0, Vec3 arg1, BlockPos arg2)",
			"fabric": "raycast(Vec3d start, Vec3d end, BlockPos pos)"
		},
		{
			"forge": "closestPointTo(Vec3 arg0)",
			"fabric": "getClosestPointTo(Vec3d target)"
		},
		{
			"forge": "getFaceShape(Direction arg0)",
			"fabric": "getFace(Direction facing)"
		},
		{
			"forge": "calculateFace(Direction arg0)",
			"fabric": "getUncachedFace(Direction direction)"
		},
		{
			"forge": "collide(Direction$Axis arg0, AABB arg1, double arg2)",
			"fabric": "calculateMaxDistance(Direction$Axis axis, Box box, double maxDist)"
		},
		{
			"forge": "collideX(AxisCycle arg0, AABB arg1, double arg2)",
			"fabric": "calculateMaxDistance(AxisCycleDirection axisCycle, Box box, double maxDist)"
		}
	]
}