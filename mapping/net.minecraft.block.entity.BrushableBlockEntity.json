{
	"title": "net.minecraft.world.level.block.entity.BrushableBlockEntity",
	"items": [
		{
			"forge": "net.minecraft.world.level.block.entity.BrushableBlockEntity",
			"fabric": "net.minecraft.block.entity.BrushableBlockEntity"
		},
		{
			"forge": "LOGGER",
			"fabric": "field_42801"
		},
		{
			"forge": "LOGGER",
			"fabric": "field_42801"
		},
		{
			"forge": "LOOT_TABLE_TAG",
			"fabric": "LOOT_TABLE_NBT_KEY"
		},
		{
			"forge": "LOOT_TABLE_SEED_TAG",
			"fabric": "LOOT_TABLE_SEED_NBT_KEY"
		},
		{
			"forge": "HIT_DIRECTION_TAG",
			"fabric": "HIT_DIRECTION_NBT_KEY"
		},
		{
			"forge": "ITEM_TAG",
			"fabric": "ITEM_NBT_KEY"
		},
		{
			"forge": "BRUSH_COOLDOWN_TICKS",
			"fabric": "field_42806"
		},
		{
			"forge": "BRUSH_RESET_TICKS",
			"fabric": "field_42807"
		},
		{
			"forge": "REQUIRED_BRUSHES_TO_BREAK",
			"fabric": "field_42808"
		},
		{
			"forge": "brushCount",
			"fabric": "brushesCount"
		},
		{
			"forge": "brushCountResetsAtTick",
			"fabric": "nextDustTime"
		},
		{
			"forge": "coolDownEndsAtTick",
			"fabric": "nextBrushTime"
		},
		{
			"forge": "item",
			"fabric": "item"
		},
		{
			"forge": "hitDirection",
			"fabric": "hitDirection"
		},
		{
			"forge": "lootTable",
			"fabric": "lootTable"
		},
		{
			"forge": "lootTableSeed",
			"fabric": "lootTableSeed"
		},
		{
			"forge": "brush(long arg0, Player arg1, Direction arg2)",
			"fabric": "brush(long worldTime, PlayerEntity player, Direction hitDirection)"
		},
		{
			"forge": "brush(long arg0, Player arg1, Direction arg2)",
			"fabric": "brush(long worldTime, PlayerEntity player, Direction hitDirection)"
		},
		{
			"forge": "unpackLootTable(Player arg0)",
			"fabric": "generateItem(PlayerEntity player)"
		},
		{
			"forge": "brushingCompleted(Player arg0)",
			"fabric": "finishBrushing(PlayerEntity player)"
		},
		{
			"forge": "dropContent(Player arg0)",
			"fabric": "spawnItem(PlayerEntity player)"
		},
		{
			"forge": "checkReset()",
			"fabric": "scheduledTick()"
		},
		{
			"forge": "tryLoadLootTable(CompoundTag arg0)",
			"fabric": "readLootTableFromNbt(NbtCompound nbt)"
		},
		{
			"forge": "trySaveLootTable(CompoundTag arg0)",
			"fabric": "writeLootTableToNbt(NbtCompound nbt)"
		},
		{
			"forge": "getUpdateTag()",
			"fabric": "toInitialChunkDataNbt()"
		},
		{
			"forge": "getUpdatePacket()",
			"fabric": "toUpdatePacket()"
		},
		{
			"forge": "load(CompoundTag arg0)",
			"fabric": "readNbt(NbtCompound arg0)"
		},
		{
			"forge": "saveAdditional(CompoundTag arg0)",
			"fabric": "writeNbt(NbtCompound arg0)"
		},
		{
			"forge": "setLootTable(ResourceLocation arg0, long arg1)",
			"fabric": "setLootTable(Identifier lootTable, long seed)"
		},
		{
			"forge": "getCompletionState()",
			"fabric": "getDustedLevel()"
		},
		{
			"forge": "getHitDirection()",
			"fabric": "getHitDirection()"
		},
		{
			"forge": "getItem()",
			"fabric": "getItem()"
		}
	]
}