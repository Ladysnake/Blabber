{
	"title": "net.minecraft.world.level.block.ShulkerBoxBlock",
	"items": [
		{
			"forge": "net.minecraft.world.level.block.ShulkerBoxBlock",
			"fabric": "net.minecraft.block.ShulkerBoxBlock"
		},
		{
			"forge": "OPEN_AABB_SIZE",
			"fabric": "field_41075"
		},
		{
			"forge": "OPEN_AABB_SIZE",
			"fabric": "field_41075"
		},
		{
			"forge": "UP_OPEN_AABB",
			"fabric": "UP_SHAPE"
		},
		{
			"forge": "DOWN_OPEN_AABB",
			"fabric": "DOWN_SHAPE"
		},
		{
			"forge": "WES_OPEN_AABB",
			"fabric": "WEST_SHAPE"
		},
		{
			"forge": "EAST_OPEN_AABB",
			"fabric": "EAST_SHAPE"
		},
		{
			"forge": "NORTH_OPEN_AABB",
			"fabric": "NORTH_SHAPE"
		},
		{
			"forge": "SOUTH_OPEN_AABB",
			"fabric": "SOUTH_SHAPE"
		},
		{
			"forge": "OPEN_SHAPE_BY_DIRECTION",
			"fabric": "SIDES_SHAPES"
		},
		{
			"forge": "FACING",
			"fabric": "FACING"
		},
		{
			"forge": "CONTENTS",
			"fabric": "CONTENTS_DYNAMIC_DROP_ID"
		},
		{
			"forge": "color",
			"fabric": "color"
		},
		{
			"forge": "newBlockEntity(BlockPos arg0, BlockState arg1)",
			"fabric": "createBlockEntity(BlockPos arg0, BlockState arg1)"
		},
		{
			"forge": "newBlockEntity(BlockPos arg0, BlockState arg1)",
			"fabric": "createBlockEntity(BlockPos arg0, BlockState arg1)"
		},
		{
			"forge": "getTicker(Level arg0, BlockState arg1, BlockEntityType<T> arg2)",
			"fabric": "getTicker(World arg0, BlockState arg1, BlockEntityType<T> arg2)"
		},
		{
			"forge": "getRenderShape(BlockState arg0)",
			"fabric": "getRenderType(BlockState arg0)"
		},
		{
			"forge": "use(BlockState arg0, Level arg1, BlockPos arg2, Player arg3, InteractionHand arg4, BlockHitResult arg5)",
			"fabric": "onUse(BlockState arg0, World arg1, BlockPos arg2, PlayerEntity arg3, Hand arg4, BlockHitResult arg5)"
		},
		{
			"forge": "canOpen(BlockState arg0, Level arg1, BlockPos arg2, ShulkerBoxBlockEntity arg3)",
			"fabric": "canOpen(BlockState state, World world, BlockPos pos, ShulkerBoxBlockEntity entity)"
		},
		{
			"forge": "getStateForPlacement(BlockPlaceContext arg0)",
			"fabric": "getPlacementState(ItemPlacementContext arg0)"
		},
		{
			"forge": "createBlockStateDefinition(StateDefinition$Builder<Block, BlockState> arg0)",
			"fabric": "appendProperties(StateManager$Builder<Block, BlockState> arg0)"
		},
		{
			"forge": "playerWillDestroy(Level arg0, BlockPos arg1, BlockState arg2, Player arg3)",
			"fabric": "onBreak(World arg0, BlockPos arg1, BlockState arg2, PlayerEntity arg3)"
		},
		{
			"forge": "getDrops(BlockState arg0, LootParams$Builder arg1)",
			"fabric": "getDroppedStacks(BlockState arg0, LootContextParameterSet$Builder arg1)"
		},
		{
			"forge": "setPlacedBy(Level arg0, BlockPos arg1, BlockState arg2, LivingEntity arg3, ItemStack arg4)",
			"fabric": "onPlaced(World arg0, BlockPos arg1, BlockState arg2, LivingEntity arg3, ItemStack arg4)"
		},
		{
			"forge": "onRemove(BlockState arg0, Level arg1, BlockPos arg2, BlockState arg3, boolean arg4)",
			"fabric": "onStateReplaced(BlockState arg0, World arg1, BlockPos arg2, BlockState arg3, boolean arg4)"
		},
		{
			"forge": "appendHoverText(ItemStack arg0, BlockGetter arg1, List<Component> arg2, TooltipFlag arg3)",
			"fabric": "appendTooltip(ItemStack arg0, BlockView arg1, List<Text> arg2, TooltipContext arg3)"
		},
		{
			"forge": "getBlockSupportShape(BlockState arg0, BlockGetter arg1, BlockPos arg2)",
			"fabric": "getSidesShape(BlockState arg0, BlockView arg1, BlockPos arg2)"
		},
		{
			"forge": "getShape(BlockState arg0, BlockGetter arg1, BlockPos arg2, CollisionContext arg3)",
			"fabric": "getOutlineShape(BlockState arg0, BlockView arg1, BlockPos arg2, ShapeContext arg3)"
		},
		{
			"forge": "hasAnalogOutputSignal(BlockState arg0)",
			"fabric": "hasComparatorOutput(BlockState arg0)"
		},
		{
			"forge": "getAnalogOutputSignal(BlockState arg0, Level arg1, BlockPos arg2)",
			"fabric": "getComparatorOutput(BlockState arg0, World arg1, BlockPos arg2)"
		},
		{
			"forge": "getCloneItemStack(BlockGetter arg0, BlockPos arg1, BlockState arg2)",
			"fabric": "getPickStack(BlockView arg0, BlockPos arg1, BlockState arg2)"
		},
		{
			"forge": "getColorFromItem(Item arg0)",
			"fabric": "getColor(Item item)"
		},
		{
			"forge": "getColorFromBlock(Block arg0)",
			"fabric": "getColor(Block block)"
		},
		{
			"forge": "getBlockByColor(DyeColor arg0)",
			"fabric": "get(DyeColor dyeColor)"
		},
		{
			"forge": "getColor()",
			"fabric": "getColor()"
		},
		{
			"forge": "getColoredItemStack(DyeColor arg0)",
			"fabric": "getItemStack(DyeColor color)"
		},
		{
			"forge": "rotate(BlockState arg0, Rotation arg1)",
			"fabric": "rotate(BlockState arg0, BlockRotation arg1)"
		},
		{
			"forge": "mirror(BlockState arg0, Mirror arg1)",
			"fabric": "mirror(BlockState arg0, BlockMirror arg1)"
		}
	]
}