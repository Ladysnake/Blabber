{
	"title": "net.minecraft.server.commands.AttributeCommand",
	"items": [
		{
			"forge": "net.minecraft.server.commands.AttributeCommand",
			"fabric": "net.minecraft.server.command.AttributeCommand"
		},
		{
			"forge": "ERROR_NOT_LIVING_ENTITY",
			"fabric": "ENTITY_FAILED_EXCEPTION"
		},
		{
			"forge": "ERROR_NOT_LIVING_ENTITY",
			"fabric": "ENTITY_FAILED_EXCEPTION"
		},
		{
			"forge": "ERROR_NO_SUCH_ATTRIBUTE",
			"fabric": "NO_ATTRIBUTE_EXCEPTION"
		},
		{
			"forge": "ERROR_NO_SUCH_MODIFIER",
			"fabric": "NO_MODIFIER_EXCEPTION"
		},
		{
			"forge": "ERROR_MODIFIER_ALREADY_PRESENT",
			"fabric": "MODIFIER_ALREADY_PRESENT_EXCEPTION"
		},
		{
			"forge": "register(com.mojang.brigadier.CommandDispatcher<CommandSourceStack> arg0, CommandBuildContext arg1)",
			"fabric": "register(com.mojang.brigadier.CommandDispatcher<ServerCommandSource> dispatcher, CommandRegistryAccess registryAccess)"
		},
		{
			"forge": "register(com.mojang.brigadier.CommandDispatcher<CommandSourceStack> arg0, CommandBuildContext arg1)",
			"fabric": "register(com.mojang.brigadier.CommandDispatcher<ServerCommandSource> dispatcher, CommandRegistryAccess registryAccess)"
		},
		{
			"forge": "getAttributeInstance(Entity arg0, Holder<Attribute> arg1)",
			"fabric": "getAttributeInstance(Entity entity, RegistryEntry<EntityAttribute> attribute)"
		},
		{
			"forge": "getLivingEntity(Entity arg0)",
			"fabric": "getLivingEntity(Entity entity)"
		},
		{
			"forge": "getEntityWithAttribute(Entity arg0, Holder<Attribute> arg1)",
			"fabric": "getLivingEntityWithAttribute(Entity entity, RegistryEntry<EntityAttribute> attribute)"
		},
		{
			"forge": "getAttributeValue(CommandSourceStack arg0, Entity arg1, Holder<Attribute> arg2, double arg3)",
			"fabric": "executeValueGet(ServerCommandSource source, Entity target, RegistryEntry<EntityAttribute> attribute, double multiplier)"
		},
		{
			"forge": "getAttributeBase(CommandSourceStack arg0, Entity arg1, Holder<Attribute> arg2, double arg3)",
			"fabric": "executeBaseValueGet(ServerCommandSource source, Entity target, RegistryEntry<EntityAttribute> attribute, double multiplier)"
		},
		{
			"forge": "getAttributeModifier(CommandSourceStack arg0, Entity arg1, Holder<Attribute> arg2, UUID arg3, double arg4)",
			"fabric": "executeModifierValueGet(ServerCommandSource source, Entity target, RegistryEntry<EntityAttribute> attribute, UUID uuid, double multiplier)"
		},
		{
			"forge": "setAttributeBase(CommandSourceStack arg0, Entity arg1, Holder<Attribute> arg2, double arg3)",
			"fabric": "executeBaseValueSet(ServerCommandSource source, Entity target, RegistryEntry<EntityAttribute> attribute, double value)"
		},
		{
			"forge": "addModifier(CommandSourceStack arg0, Entity arg1, Holder<Attribute> arg2, UUID arg3, String arg4, double arg5, AttributeModifier$Operation arg6)",
			"fabric": "executeModifierAdd(ServerCommandSource source, Entity target, RegistryEntry<EntityAttribute> attribute, UUID uuid, String name, double value, EntityAttributeModifier$Operation operation)"
		},
		{
			"forge": "removeModifier(CommandSourceStack arg0, Entity arg1, Holder<Attribute> arg2, UUID arg3)",
			"fabric": "executeModifierRemove(ServerCommandSource source, Entity target, RegistryEntry<EntityAttribute> attribute, UUID uuid)"
		},
		{
			"forge": "getAttributeDescription(Holder<Attribute> arg0)",
			"fabric": "getName(RegistryEntry<EntityAttribute> attribute)"
		}
	]
}