{
	"title": "net.minecraft.commands.CommandSourceStack",
	"items": [
		{
			"forge": "net.minecraft.commands.CommandSourceStack",
			"fabric": "net.minecraft.server.command.ServerCommandSource"
		},
		{
			"forge": "ERROR_NOT_PLAYER",
			"fabric": "REQUIRES_PLAYER_EXCEPTION"
		},
		{
			"forge": "ERROR_NOT_PLAYER",
			"fabric": "REQUIRES_PLAYER_EXCEPTION"
		},
		{
			"forge": "ERROR_NOT_ENTITY",
			"fabric": "REQUIRES_ENTITY_EXCEPTION"
		},
		{
			"forge": "source",
			"fabric": "output"
		},
		{
			"forge": "worldPosition",
			"fabric": "position"
		},
		{
			"forge": "level",
			"fabric": "world"
		},
		{
			"forge": "permissionLevel",
			"fabric": "level"
		},
		{
			"forge": "textName",
			"fabric": "name"
		},
		{
			"forge": "displayName",
			"fabric": "displayName"
		},
		{
			"forge": "server",
			"fabric": "server"
		},
		{
			"forge": "silent",
			"fabric": "silent"
		},
		{
			"forge": "entity",
			"fabric": "entity"
		},
		{
			"forge": "consumer",
			"fabric": "resultConsumer"
		},
		{
			"forge": "anchor",
			"fabric": "entityAnchor"
		},
		{
			"forge": "rotation",
			"fabric": "rotation"
		},
		{
			"forge": "signingContext",
			"fabric": "signedArguments"
		},
		{
			"forge": "chatMessageChainer",
			"fabric": "messageChainTaskQueue"
		},
		{
			"forge": "returnValueConsumer",
			"fabric": "returnValueConsumer"
		},
		{
			"forge": "withSource(CommandSource arg0)",
			"fabric": "withOutput(CommandOutput output)"
		},
		{
			"forge": "withSource(CommandSource arg0)",
			"fabric": "withOutput(CommandOutput output)"
		},
		{
			"forge": "withEntity(Entity arg0)",
			"fabric": "withEntity(Entity entity)"
		},
		{
			"forge": "withPosition(Vec3 arg0)",
			"fabric": "withPosition(Vec3d position)"
		},
		{
			"forge": "withRotation(Vec2 arg0)",
			"fabric": "withRotation(Vec2f rotation)"
		},
		{
			"forge": "withCallback(com.mojang.brigadier.ResultConsumer<CommandSourceStack> arg0)",
			"fabric": "withConsumer(com.mojang.brigadier.ResultConsumer<ServerCommandSource> consumer)"
		},
		{
			"forge": "withCallback(com.mojang.brigadier.ResultConsumer<CommandSourceStack> arg0, BinaryOperator<com.mojang.brigadier.ResultConsumer<CommandSourceStack>> arg1)",
			"fabric": "mergeConsumers(com.mojang.brigadier.ResultConsumer<ServerCommandSource> consumer, BinaryOperator<com.mojang.brigadier.ResultConsumer<ServerCommandSource>> merger)"
		},
		{
			"forge": "withSuppressedOutput()",
			"fabric": "withSilent()"
		},
		{
			"forge": "withPermission(int arg0)",
			"fabric": "withLevel(int level)"
		},
		{
			"forge": "withMaximumPermission(int arg0)",
			"fabric": "withMaxLevel(int level)"
		},
		{
			"forge": "withAnchor(EntityAnchorArgument$Anchor arg0)",
			"fabric": "withEntityAnchor(EntityAnchorArgumentType$EntityAnchor anchor)"
		},
		{
			"forge": "withLevel(ServerLevel arg0)",
			"fabric": "withWorld(ServerWorld world)"
		},
		{
			"forge": "facing(Entity arg0, EntityAnchorArgument$Anchor arg1)",
			"fabric": "withLookingAt(Entity entity, EntityAnchorArgumentType$EntityAnchor anchor)"
		},
		{
			"forge": "facing(Vec3 arg0)",
			"fabric": "withLookingAt(Vec3d position)"
		},
		{
			"forge": "withSigningContext(CommandSigningContext arg0)",
			"fabric": "withSignedArguments(SignedCommandArguments signedArguments)"
		},
		{
			"forge": "withChatMessageChainer(TaskChainer arg0)",
			"fabric": "withMessageChainTaskQueue(FutureQueue messageChainTaskQueue)"
		},
		{
			"forge": "withReturnValueConsumer(IntConsumer arg0)",
			"fabric": "withReturnValueConsumer(IntConsumer returnValueConsumer)"
		},
		{
			"forge": "getDisplayName()",
			"fabric": "getDisplayName()"
		},
		{
			"forge": "getTextName()",
			"fabric": "getName()"
		},
		{
			"forge": "hasPermission(int arg0)",
			"fabric": "hasPermissionLevel(int arg0)"
		},
		{
			"forge": "getPosition()",
			"fabric": "getPosition()"
		},
		{
			"forge": "getLevel()",
			"fabric": "getWorld()"
		},
		{
			"forge": "getEntity()",
			"fabric": "getEntity()"
		},
		{
			"forge": "getEntityOrException()",
			"fabric": "getEntityOrThrow()"
		},
		{
			"forge": "getPlayerOrException()",
			"fabric": "getPlayerOrThrow()"
		},
		{
			"forge": "getPlayer()",
			"fabric": "getPlayer()"
		},
		{
			"forge": "isPlayer()",
			"fabric": "isExecutedByPlayer()"
		},
		{
			"forge": "getRotation()",
			"fabric": "getRotation()"
		},
		{
			"forge": "getServer()",
			"fabric": "getServer()"
		},
		{
			"forge": "getAnchor()",
			"fabric": "getEntityAnchor()"
		},
		{
			"forge": "getSigningContext()",
			"fabric": "getSignedArguments()"
		},
		{
			"forge": "getChatMessageChainer()",
			"fabric": "getMessageChainTaskQueue()"
		},
		{
			"forge": "getReturnValueConsumer()",
			"fabric": "getReturnValueConsumer()"
		},
		{
			"forge": "shouldFilterMessageTo(ServerPlayer arg0)",
			"fabric": "shouldFilterText(ServerPlayerEntity recipient)"
		},
		{
			"forge": "sendChatMessage(OutgoingChatMessage arg0, boolean arg1, ChatType$Bound arg2)",
			"fabric": "sendChatMessage(SentMessage message, boolean filterMaskEnabled, MessageType$Parameters params)"
		},
		{
			"forge": "sendSystemMessage(Component arg0)",
			"fabric": "sendMessage(Text message)"
		},
		{
			"forge": "sendSuccess(Supplier<Component> arg0, boolean arg1)",
			"fabric": "sendFeedback(Supplier<Text> feedbackSupplier, boolean broadcastToOps)"
		},
		{
			"forge": "broadcastToAdmins(Component arg0)",
			"fabric": "sendToOps(Text message)"
		},
		{
			"forge": "sendFailure(Component arg0)",
			"fabric": "sendError(Text message)"
		},
		{
			"forge": "onCommandComplete(com.mojang.brigadier.context.CommandContext<CommandSourceStack> arg0, boolean arg1, int arg2)",
			"fabric": "onCommandComplete(com.mojang.brigadier.context.CommandContext<ServerCommandSource> context, boolean success, int result)"
		},
		{
			"forge": "getOnlinePlayerNames()",
			"fabric": "getPlayerNames()"
		},
		{
			"forge": "getAllTeams()",
			"fabric": "getTeamNames()"
		},
		{
			"forge": "getAvailableSounds()",
			"fabric": "getSoundIds()"
		},
		{
			"forge": "getRecipeNames()",
			"fabric": "getRecipeIds()"
		},
		{
			"forge": "customSuggestion(com.mojang.brigadier.context.CommandContext<?> arg0)",
			"fabric": "getCompletions(com.mojang.brigadier.context.CommandContext<?> arg0)"
		},
		{
			"forge": "suggestRegistryElements(ResourceKey<? extends Registry<?>> arg0, SharedSuggestionProvider$ElementSuggestionType arg1, com.mojang.brigadier.suggestion.SuggestionsBuilder arg2, com.mojang.brigadier.context.CommandContext<?> arg3)",
			"fabric": "listIdSuggestions(RegistryKey<? extends Registry<?>> arg0, CommandSource$SuggestedIdType arg1, com.mojang.brigadier.suggestion.SuggestionsBuilder arg2, com.mojang.brigadier.context.CommandContext<?> arg3)"
		},
		{
			"forge": "levels()",
			"fabric": "getWorldKeys()"
		},
		{
			"forge": "registryAccess()",
			"fabric": "getRegistryManager()"
		},
		{
			"forge": "enabledFeatures()",
			"fabric": "getEnabledFeatures()"
		}
	]
}