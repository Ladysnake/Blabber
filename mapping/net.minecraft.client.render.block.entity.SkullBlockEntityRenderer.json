{
	"title": "net.minecraft.client.renderer.blockentity.SkullBlockRenderer",
	"items": [
		{
			"forge": "net.minecraft.client.renderer.blockentity.SkullBlockRenderer",
			"fabric": "net.minecraft.client.render.block.entity.SkullBlockEntityRenderer"
		},
		{
			"forge": "modelByType",
			"fabric": "MODELS"
		},
		{
			"forge": "modelByType",
			"fabric": "MODELS"
		},
		{
			"forge": "SKIN_BY_TYPE",
			"fabric": "TEXTURES"
		},
		{
			"forge": "createSkullRenderers(EntityModelSet arg0)",
			"fabric": "getModels(EntityModelLoader modelLoader)"
		},
		{
			"forge": "createSkullRenderers(EntityModelSet arg0)",
			"fabric": "getModels(EntityModelLoader modelLoader)"
		},
		{
			"forge": "render(SkullBlockEntity arg0, float arg1, PoseStack arg2, MultiBufferSource arg3, int arg4, int arg5)",
			"fabric": "render(SkullBlockEntity arg0, float arg1, MatrixStack arg2, VertexConsumerProvider arg3, int arg4, int arg5)"
		},
		{
			"forge": "renderSkull(Direction arg0, float arg1, float arg2, PoseStack arg3, MultiBufferSource arg4, int arg5, SkullModelBase arg6, RenderType arg7)",
			"fabric": "renderSkull(Direction direction, float yaw, float animationProgress, MatrixStack matrices, VertexConsumerProvider vertexConsumers, int light, SkullBlockEntityModel model, RenderLayer renderLayer)"
		},
		{
			"forge": "getRenderType(SkullBlock$Type arg0, com.mojang.authlib.GameProfile arg1)",
			"fabric": "getRenderLayer(SkullBlock$SkullType type, com.mojang.authlib.GameProfile profile)"
		}
	]
}