{
	"title": "net.minecraft.advancements.critereon.WrappedMinMaxBounds",
	"items": [
		{
			"forge": "net.minecraft.advancements.critereon.WrappedMinMaxBounds",
			"fabric": "net.minecraft.command.FloatRangeArgument"
		},
		{
			"forge": "ANY",
			"fabric": "ANY"
		},
		{
			"forge": "ANY",
			"fabric": "ANY"
		},
		{
			"forge": "ERROR_INTS_ONLY",
			"fabric": "ONLY_INTS_EXCEPTION"
		},
		{
			"forge": "min",
			"fabric": "min"
		},
		{
			"forge": "max",
			"fabric": "max"
		},
		{
			"forge": "exactly(float arg0)",
			"fabric": "exactly(float value)"
		},
		{
			"forge": "exactly(float arg0)",
			"fabric": "exactly(float value)"
		},
		{
			"forge": "between(float arg0, float arg1)",
			"fabric": "between(float min, float max)"
		},
		{
			"forge": "atLeast(float arg0)",
			"fabric": "atLeast(float value)"
		},
		{
			"forge": "atMost(float arg0)",
			"fabric": "atMost(float value)"
		},
		{
			"forge": "matches(float arg0)",
			"fabric": "isInRange(float value)"
		},
		{
			"forge": "matchesSqr(double arg0)",
			"fabric": "isInSquaredRange(double value)"
		},
		{
			"forge": "getMin()",
			"fabric": "getMin()"
		},
		{
			"forge": "getMax()",
			"fabric": "getMax()"
		},
		{
			"forge": "serializeToJson()",
			"fabric": "toJson()"
		},
		{
			"forge": "fromJson(com.google.gson.JsonElement arg0)",
			"fabric": "fromJson(com.google.gson.JsonElement json)"
		},
		{
			"forge": "fromReader(com.mojang.brigadier.StringReader arg0, boolean arg1)",
			"fabric": "parse(com.mojang.brigadier.StringReader reader, boolean allowFloats)"
		},
		{
			"forge": "fromReader(com.mojang.brigadier.StringReader arg0, boolean arg1, Function<Float, Float> arg2)",
			"fabric": "parse(com.mojang.brigadier.StringReader reader, boolean allowFloats, Function<Float, Float> transform)"
		},
		{
			"forge": "readNumber(com.mojang.brigadier.StringReader arg0, boolean arg1)",
			"fabric": "parseFloat(com.mojang.brigadier.StringReader reader, boolean allowFloats)"
		},
		{
			"forge": "isAllowedNumber(com.mojang.brigadier.StringReader arg0, boolean arg1)",
			"fabric": "peekDigit(com.mojang.brigadier.StringReader reader, boolean allowFloats)"
		},
		{
			"forge": "optionallyFormat(Float arg0, Function<Float, Float> arg1)",
			"fabric": "mapFloat(Float value, Function<Float, Float> function)"
		}
	]
}