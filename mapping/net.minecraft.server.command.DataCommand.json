{
	"title": "net.minecraft.server.commands.data.DataCommands",
	"items": [
		{
			"forge": "net.minecraft.server.commands.data.DataCommands",
			"fabric": "net.minecraft.server.command.DataCommand"
		},
		{
			"forge": "ERROR_MERGE_UNCHANGED",
			"fabric": "MERGE_FAILED_EXCEPTION"
		},
		{
			"forge": "ERROR_MERGE_UNCHANGED",
			"fabric": "MERGE_FAILED_EXCEPTION"
		},
		{
			"forge": "ERROR_GET_NOT_NUMBER",
			"fabric": "GET_INVALID_EXCEPTION"
		},
		{
			"forge": "ERROR_GET_NON_EXISTENT",
			"fabric": "GET_UNKNOWN_EXCEPTION"
		},
		{
			"forge": "ERROR_MULTIPLE_TAGS",
			"fabric": "GET_MULTIPLE_EXCEPTION"
		},
		{
			"forge": "ERROR_EXPECTED_OBJECT",
			"fabric": "MODIFY_EXPECTED_OBJECT_EXCEPTION"
		},
		{
			"forge": "ERROR_EXPECTED_VALUE",
			"fabric": "MODIFY_EXPECTED_VALUE_EXCEPTION"
		},
		{
			"forge": "ERROR_INVALID_SUBSTRING",
			"fabric": "MODIFY_INVALID_SUBSTRING_EXCEPTION"
		},
		{
			"forge": "ALL_PROVIDERS",
			"fabric": "OBJECT_TYPE_FACTORIES"
		},
		{
			"forge": "TARGET_PROVIDERS",
			"fabric": "TARGET_OBJECT_TYPES"
		},
		{
			"forge": "SOURCE_PROVIDERS",
			"fabric": "SOURCE_OBJECT_TYPES"
		},
		{
			"forge": "register(com.mojang.brigadier.CommandDispatcher<CommandSourceStack> arg0)",
			"fabric": "register(com.mojang.brigadier.CommandDispatcher<ServerCommandSource> dispatcher)"
		},
		{
			"forge": "register(com.mojang.brigadier.CommandDispatcher<CommandSourceStack> arg0)",
			"fabric": "register(com.mojang.brigadier.CommandDispatcher<ServerCommandSource> dispatcher)"
		},
		{
			"forge": "getAsText(Tag arg0)",
			"fabric": "asString(NbtElement nbt)"
		},
		{
			"forge": "stringifyTagList(List<Tag> arg0, DataCommands$StringProcessor arg1)",
			"fabric": "mapValues(List<NbtElement> list, DataCommand$Processor processor)"
		},
		{
			"forge": "decorateModification(BiConsumer<com.mojang.brigadier.builder.ArgumentBuilder<CommandSourceStack, ?>, DataCommands$DataManipulatorDecorator> arg0)",
			"fabric": "addModifyArgument(BiConsumer<com.mojang.brigadier.builder.ArgumentBuilder<ServerCommandSource, ?>, DataCommand$ModifyArgumentCreator> subArgumentAdder)"
		},
		{
			"forge": "validatedSubstring(String arg0, int arg1, int arg2)",
			"fabric": "substringInternal(String string, int startIndex, int endIndex)"
		},
		{
			"forge": "substring(String arg0, int arg1, int arg2)",
			"fabric": "substring(String string, int startIndex, int endIndex)"
		},
		{
			"forge": "substring(String arg0, int arg1)",
			"fabric": "substring(String string, int startIndex)"
		},
		{
			"forge": "getOffset(int arg0, int arg1)",
			"fabric": "getSubstringIndex(int index, int length)"
		},
		{
			"forge": "getSingletonSource(com.mojang.brigadier.context.CommandContext<CommandSourceStack> arg0, DataCommands$DataProvider arg1)",
			"fabric": "getValues(com.mojang.brigadier.context.CommandContext<ServerCommandSource> context, DataCommand$ObjectType objectType)"
		},
		{
			"forge": "resolveSourcePath(com.mojang.brigadier.context.CommandContext<CommandSourceStack> arg0, DataCommands$DataProvider arg1)",
			"fabric": "getValuesByPath(com.mojang.brigadier.context.CommandContext<ServerCommandSource> context, DataCommand$ObjectType objectType)"
		},
		{
			"forge": "manipulateData(com.mojang.brigadier.context.CommandContext<CommandSourceStack> arg0, DataCommands$DataProvider arg1, DataCommands$DataManipulator arg2, List<Tag> arg3)",
			"fabric": "executeModify(com.mojang.brigadier.context.CommandContext<ServerCommandSource> context, DataCommand$ObjectType objectType, DataCommand$ModifyOperation modifier, List<NbtElement> elements)"
		},
		{
			"forge": "removeData(CommandSourceStack arg0, DataAccessor arg1, NbtPathArgument$NbtPath arg2)",
			"fabric": "executeRemove(ServerCommandSource source, DataCommandObject object, NbtPathArgumentType$NbtPath path)"
		},
		{
			"forge": "getSingleTag(NbtPathArgument$NbtPath arg0, DataAccessor arg1)",
			"fabric": "getNbt(NbtPathArgumentType$NbtPath path, DataCommandObject object)"
		},
		{
			"forge": "getData(CommandSourceStack arg0, DataAccessor arg1, NbtPathArgument$NbtPath arg2)",
			"fabric": "executeGet(ServerCommandSource source, DataCommandObject object, NbtPathArgumentType$NbtPath path)"
		},
		{
			"forge": "getNumeric(CommandSourceStack arg0, DataAccessor arg1, NbtPathArgument$NbtPath arg2, double arg3)",
			"fabric": "executeGet(ServerCommandSource source, DataCommandObject object, NbtPathArgumentType$NbtPath path, double scale)"
		},
		{
			"forge": "getData(CommandSourceStack arg0, DataAccessor arg1)",
			"fabric": "executeGet(ServerCommandSource source, DataCommandObject object)"
		},
		{
			"forge": "mergeData(CommandSourceStack arg0, DataAccessor arg1, CompoundTag arg2)",
			"fabric": "executeMerge(ServerCommandSource source, DataCommandObject object, NbtCompound nbt)"
		}
	]
}