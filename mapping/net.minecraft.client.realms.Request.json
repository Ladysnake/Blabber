{
	"title": "com.mojang.realmsclient.client.Request",
	"items": [
		{
			"forge": "com.mojang.realmsclient.client.Request",
			"fabric": "net.minecraft.client.realms.Request"
		},
		{
			"forge": "connection",
			"fabric": "connection"
		},
		{
			"forge": "connection",
			"fabric": "connection"
		},
		{
			"forge": "connected",
			"fabric": "connected"
		},
		{
			"forge": "url",
			"fabric": "url"
		},
		{
			"forge": "DEFAULT_READ_TIMEOUT",
			"fabric": "READ_TIMEOUT"
		},
		{
			"forge": "DEFAULT_CONNECT_TIMEOUT",
			"fabric": "CONNECT_TIMEOUT"
		},
		{
			"forge": "cookie(String arg0, String arg1)",
			"fabric": "cookie(String key, String value)"
		},
		{
			"forge": "cookie(String arg0, String arg1)",
			"fabric": "cookie(String key, String value)"
		},
		{
			"forge": "cookie(HttpURLConnection arg0, String arg1, String arg2)",
			"fabric": "cookie(HttpURLConnection connection, String key, String value)"
		},
		{
			"forge": "header(String arg0, String arg1)",
			"fabric": "withHeader(String name, String value)"
		},
		{
			"forge": "getRetryAfterHeader()",
			"fabric": "getRetryAfterHeader()"
		},
		{
			"forge": "getRetryAfterHeader(HttpURLConnection arg0)",
			"fabric": "getRetryAfterHeader(HttpURLConnection connection)"
		},
		{
			"forge": "responseCode()",
			"fabric": "responseCode()"
		},
		{
			"forge": "text()",
			"fabric": "text()"
		},
		{
			"forge": "read(InputStream arg0)",
			"fabric": "read(InputStream in)"
		},
		{
			"forge": "dispose()",
			"fabric": "dispose()"
		},
		{
			"forge": "connect()",
			"fabric": "connect()"
		},
		{
			"forge": "doConnect()",
			"fabric": "doConnect()"
		},
		{
			"forge": "get(String arg0)",
			"fabric": "get(String url)"
		},
		{
			"forge": "get(String arg0, int arg1, int arg2)",
			"fabric": "get(String url, int connectTimeoutMillis, int readTimeoutMillis)"
		},
		{
			"forge": "post(String arg0, String arg1)",
			"fabric": "post(String uri, String content)"
		},
		{
			"forge": "post(String arg0, String arg1, int arg2, int arg3)",
			"fabric": "post(String uri, String content, int connectTimeoutMillis, int readTimeoutMillis)"
		},
		{
			"forge": "delete(String arg0)",
			"fabric": "delete(String url)"
		},
		{
			"forge": "put(String arg0, String arg1)",
			"fabric": "put(String url, String content)"
		},
		{
			"forge": "put(String arg0, String arg1, int arg2, int arg3)",
			"fabric": "put(String url, String content, int connectTimeoutMillis, int readTimeoutMillis)"
		},
		{
			"forge": "getHeader(String arg0)",
			"fabric": "getHeader(String header)"
		},
		{
			"forge": "getHeader(HttpURLConnection arg0, String arg1)",
			"fabric": "getHeader(HttpURLConnection connection, String header)"
		}
	]
}