{
	"title": "net.minecraft.world.level.block.SlabBlock",
	"items": [
		{
			"forge": "net.minecraft.world.level.block.SlabBlock",
			"fabric": "net.minecraft.block.SlabBlock"
		},
		{
			"forge": "TYPE",
			"fabric": "TYPE"
		},
		{
			"forge": "TYPE",
			"fabric": "TYPE"
		},
		{
			"forge": "WATERLOGGED",
			"fabric": "WATERLOGGED"
		},
		{
			"forge": "BOTTOM_AABB",
			"fabric": "BOTTOM_SHAPE"
		},
		{
			"forge": "TOP_AABB",
			"fabric": "TOP_SHAPE"
		},
		{
			"forge": "useShapeForLightOcclusion(BlockState arg0)",
			"fabric": "hasSidedTransparency(BlockState arg0)"
		},
		{
			"forge": "useShapeForLightOcclusion(BlockState arg0)",
			"fabric": "hasSidedTransparency(BlockState arg0)"
		},
		{
			"forge": "createBlockStateDefinition(StateDefinition$Builder<Block, BlockState> arg0)",
			"fabric": "appendProperties(StateManager$Builder<Block, BlockState> arg0)"
		},
		{
			"forge": "getShape(BlockState arg0, BlockGetter arg1, BlockPos arg2, CollisionContext arg3)",
			"fabric": "getOutlineShape(BlockState arg0, BlockView arg1, BlockPos arg2, ShapeContext arg3)"
		},
		{
			"forge": "getStateForPlacement(BlockPlaceContext arg0)",
			"fabric": "getPlacementState(ItemPlacementContext arg0)"
		},
		{
			"forge": "canBeReplaced(BlockState arg0, BlockPlaceContext arg1)",
			"fabric": "canReplace(BlockState arg0, ItemPlacementContext arg1)"
		},
		{
			"forge": "getFluidState(BlockState arg0)",
			"fabric": "getFluidState(BlockState arg0)"
		},
		{
			"forge": "placeLiquid(LevelAccessor arg0, BlockPos arg1, BlockState arg2, FluidState arg3)",
			"fabric": "tryFillWithFluid(WorldAccess arg0, BlockPos arg1, BlockState arg2, FluidState arg3)"
		},
		{
			"forge": "canPlaceLiquid(BlockGetter arg0, BlockPos arg1, BlockState arg2, Fluid arg3)",
			"fabric": "canFillWithFluid(BlockView arg0, BlockPos arg1, BlockState arg2, Fluid arg3)"
		},
		{
			"forge": "updateShape(BlockState arg0, Direction arg1, BlockState arg2, LevelAccessor arg3, BlockPos arg4, BlockPos arg5)",
			"fabric": "getStateForNeighborUpdate(BlockState arg0, Direction arg1, BlockState arg2, WorldAccess arg3, BlockPos arg4, BlockPos arg5)"
		},
		{
			"forge": "isPathfindable(BlockState arg0, BlockGetter arg1, BlockPos arg2, PathComputationType arg3)",
			"fabric": "canPathfindThrough(BlockState arg0, BlockView arg1, BlockPos arg2, NavigationType arg3)"
		}
	]
}