{
	"title": "net.minecraft.world.entity.ai.sensing.Sensor",
	"items": [
		{
			"forge": "net.minecraft.world.entity.ai.sensing.Sensor",
			"fabric": "net.minecraft.entity.ai.brain.sensor.Sensor"
		},
		{
			"forge": "RANDOM",
			"fabric": "RANDOM"
		},
		{
			"forge": "RANDOM",
			"fabric": "RANDOM"
		},
		{
			"forge": "DEFAULT_SCAN_RATE",
			"fabric": "DEFAULT_RUN_TIME"
		},
		{
			"forge": "TARGETING_RANGE",
			"fabric": "BASE_MAX_DISTANCE"
		},
		{
			"forge": "TARGET_CONDITIONS",
			"fabric": "TARGET_PREDICATE"
		},
		{
			"forge": "TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING",
			"fabric": "TARGET_PREDICATE_IGNORE_DISTANCE_SCALING"
		},
		{
			"forge": "ATTACK_TARGET_CONDITIONS",
			"fabric": "ATTACKABLE_TARGET_PREDICATE"
		},
		{
			"forge": "ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING",
			"fabric": "ATTACKABLE_TARGET_PREDICATE_IGNORE_DISTANCE_SCALING"
		},
		{
			"forge": "ATTACK_TARGET_CONDITIONS_IGNORE_LINE_OF_SIGHT",
			"fabric": "ATTACKABLE_TARGET_PREDICATE_IGNORE_VISIBILITY"
		},
		{
			"forge": "ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_AND_LINE_OF_SIGHT",
			"fabric": "ATTACKABLE_TARGET_PREDICATE_IGNORE_VISIBILITY_OR_DISTANCE_SCALING"
		},
		{
			"forge": "scanRate",
			"fabric": "senseInterval"
		},
		{
			"forge": "timeToTick",
			"fabric": "lastSenseTime"
		},
		{
			"forge": "tick(ServerLevel arg0, E arg1)",
			"fabric": "tick(ServerWorld world, E entity)"
		},
		{
			"forge": "tick(ServerLevel arg0, E arg1)",
			"fabric": "tick(ServerWorld world, E entity)"
		},
		{
			"forge": "doTick(ServerLevel arg0, E arg1)",
			"fabric": "sense(ServerWorld world, E entity)"
		},
		{
			"forge": "requires()",
			"fabric": "getOutputMemoryModules()"
		},
		{
			"forge": "isEntityTargetable(LivingEntity arg0, LivingEntity arg1)",
			"fabric": "testTargetPredicate(LivingEntity entity, LivingEntity target)"
		},
		{
			"forge": "isEntityAttackable(LivingEntity arg0, LivingEntity arg1)",
			"fabric": "testAttackableTargetPredicate(LivingEntity entity, LivingEntity target)"
		},
		{
			"forge": "isEntityAttackableIgnoringLineOfSight(LivingEntity arg0, LivingEntity arg1)",
			"fabric": "testAttackableTargetPredicateIgnoreVisibility(LivingEntity entity, LivingEntity target)"
		}
	]
}