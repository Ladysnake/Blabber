{
	"title": "net.minecraft.advancements.Advancement$Builder",
	"items": [
		{
			"forge": "net.minecraft.advancements.Advancement$Builder",
			"fabric": "net.minecraft.advancement.Advancement$Builder"
		},
		{
			"forge": "parentId",
			"fabric": "parentId"
		},
		{
			"forge": "parentId",
			"fabric": "parentId"
		},
		{
			"forge": "parent",
			"fabric": "parentObj"
		},
		{
			"forge": "display",
			"fabric": "display"
		},
		{
			"forge": "rewards",
			"fabric": "rewards"
		},
		{
			"forge": "criteria",
			"fabric": "criteria"
		},
		{
			"forge": "requirements",
			"fabric": "requirements"
		},
		{
			"forge": "requirementsStrategy",
			"fabric": "merger"
		},
		{
			"forge": "sendsTelemetryEvent",
			"fabric": "sendsTelemetryEvent"
		},
		{
			"forge": "advancement()",
			"fabric": "create()"
		},
		{
			"forge": "advancement()",
			"fabric": "create()"
		},
		{
			"forge": "recipeAdvancement()",
			"fabric": "createUntelemetered()"
		},
		{
			"forge": "parent(Advancement arg0)",
			"fabric": "parent(Advancement parent)"
		},
		{
			"forge": "parent(ResourceLocation arg0)",
			"fabric": "parent(Identifier parentId)"
		},
		{
			"forge": "display(ItemStack arg0, Component arg1, Component arg2, ResourceLocation arg3, FrameType arg4, boolean arg5, boolean arg6, boolean arg7)",
			"fabric": "display(ItemStack icon, Text title, Text description, Identifier background, AdvancementFrame frame, boolean showToast, boolean announceToChat, boolean hidden)"
		},
		{
			"forge": "display(ItemLike arg0, Component arg1, Component arg2, ResourceLocation arg3, FrameType arg4, boolean arg5, boolean arg6, boolean arg7)",
			"fabric": "display(ItemConvertible icon, Text title, Text description, Identifier background, AdvancementFrame frame, boolean showToast, boolean announceToChat, boolean hidden)"
		},
		{
			"forge": "display(DisplayInfo arg0)",
			"fabric": "display(AdvancementDisplay display)"
		},
		{
			"forge": "rewards(AdvancementRewards$Builder arg0)",
			"fabric": "rewards(AdvancementRewards$Builder builder)"
		},
		{
			"forge": "rewards(AdvancementRewards arg0)",
			"fabric": "rewards(AdvancementRewards rewards)"
		},
		{
			"forge": "addCriterion(String arg0, CriterionTriggerInstance arg1)",
			"fabric": "criterion(String name, CriterionConditions conditions)"
		},
		{
			"forge": "addCriterion(String arg0, Criterion arg1)",
			"fabric": "criterion(String name, AdvancementCriterion criterion)"
		},
		{
			"forge": "requirements(RequirementsStrategy arg0)",
			"fabric": "criteriaMerger(CriterionMerger merger)"
		},
		{
			"forge": "requirements(String[][] arg0)",
			"fabric": "requirements(String[][] requirements)"
		},
		{
			"forge": "canBuild(Function<ResourceLocation, Advancement> arg0)",
			"fabric": "findParent(Function<Identifier, Advancement> parentProvider)"
		},
		{
			"forge": "build(ResourceLocation arg0)",
			"fabric": "build(Identifier id)"
		},
		{
			"forge": "save(Consumer<Advancement> arg0, String arg1)",
			"fabric": "build(Consumer<Advancement> exporter, String id)"
		},
		{
			"forge": "serializeToJson()",
			"fabric": "toJson()"
		},
		{
			"forge": "serializeToNetwork(FriendlyByteBuf arg0)",
			"fabric": "toPacket(PacketByteBuf buf)"
		},
		{
			"forge": "fromJson(com.google.gson.JsonObject arg0, DeserializationContext arg1)",
			"fabric": "fromJson(com.google.gson.JsonObject obj, AdvancementEntityPredicateDeserializer predicateDeserializer)"
		},
		{
			"forge": "fromNetwork(FriendlyByteBuf arg0)",
			"fabric": "fromPacket(PacketByteBuf buf)"
		},
		{
			"forge": "getCriteria()",
			"fabric": "getCriteria()"
		}
	]
}