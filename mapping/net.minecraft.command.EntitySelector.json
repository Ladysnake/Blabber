{
	"title": "net.minecraft.commands.arguments.selector.EntitySelector",
	"items": [
		{
			"forge": "net.minecraft.commands.arguments.selector.EntitySelector",
			"fabric": "net.minecraft.command.EntitySelector"
		},
		{
			"forge": "INFINITE",
			"fabric": "MAX_VALUE"
		},
		{
			"forge": "INFINITE",
			"fabric": "MAX_VALUE"
		},
		{
			"forge": "ORDER_ARBITRARY",
			"fabric": "ARBITRARY"
		},
		{
			"forge": "ANY_TYPE",
			"fabric": "PASSTHROUGH_FILTER"
		},
		{
			"forge": "maxResults",
			"fabric": "limit"
		},
		{
			"forge": "includesEntities",
			"fabric": "includesNonPlayers"
		},
		{
			"forge": "worldLimited",
			"fabric": "localWorldOnly"
		},
		{
			"forge": "predicate",
			"fabric": "basePredicate"
		},
		{
			"forge": "range",
			"fabric": "distance"
		},
		{
			"forge": "position",
			"fabric": "positionOffset"
		},
		{
			"forge": "aabb",
			"fabric": "box"
		},
		{
			"forge": "order",
			"fabric": "sorter"
		},
		{
			"forge": "currentEntity",
			"fabric": "senderOnly"
		},
		{
			"forge": "playerName",
			"fabric": "playerName"
		},
		{
			"forge": "entityUUID",
			"fabric": "uuid"
		},
		{
			"forge": "type",
			"fabric": "entityFilter"
		},
		{
			"forge": "usesSelector",
			"fabric": "usesAt"
		},
		{
			"forge": "getMaxResults()",
			"fabric": "getLimit()"
		},
		{
			"forge": "getMaxResults()",
			"fabric": "getLimit()"
		},
		{
			"forge": "includesEntities()",
			"fabric": "includesNonPlayers()"
		},
		{
			"forge": "isSelfSelector()",
			"fabric": "isSenderOnly()"
		},
		{
			"forge": "isWorldLimited()",
			"fabric": "isLocalWorldOnly()"
		},
		{
			"forge": "usesSelector()",
			"fabric": "usesAt()"
		},
		{
			"forge": "checkPermissions(CommandSourceStack arg0)",
			"fabric": "checkSourcePermission(ServerCommandSource source)"
		},
		{
			"forge": "findSingleEntity(CommandSourceStack arg0)",
			"fabric": "getEntity(ServerCommandSource source)"
		},
		{
			"forge": "findEntities(CommandSourceStack arg0)",
			"fabric": "getEntities(ServerCommandSource source)"
		},
		{
			"forge": "findEntitiesRaw(CommandSourceStack arg0)",
			"fabric": "getUnfilteredEntities(ServerCommandSource source)"
		},
		{
			"forge": "addEntities(List<Entity> arg0, ServerLevel arg1, Vec3 arg2, Predicate<Entity> arg3)",
			"fabric": "appendEntitiesFromWorld(List<Entity> entities, ServerWorld world, Vec3d pos, Predicate<Entity> predicate)"
		},
		{
			"forge": "getResultLimit()",
			"fabric": "getAppendLimit()"
		},
		{
			"forge": "findSinglePlayer(CommandSourceStack arg0)",
			"fabric": "getPlayer(ServerCommandSource source)"
		},
		{
			"forge": "findPlayers(CommandSourceStack arg0)",
			"fabric": "getPlayers(ServerCommandSource source)"
		},
		{
			"forge": "getPredicate(Vec3 arg0)",
			"fabric": "getPositionPredicate(Vec3d pos)"
		},
		{
			"forge": "sortAndLimit(Vec3 arg0, List<T> arg1)",
			"fabric": "getEntities(Vec3d pos, List<T> entities)"
		},
		{
			"forge": "joinNames(List<? extends Entity> arg0)",
			"fabric": "getNames(List<? extends Entity> entities)"
		}
	]
}