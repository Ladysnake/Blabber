{
	"title": "net.minecraft.world.level.gameevent.vibrations.VibrationSystem$Listener",
	"items": [
		{
			"forge": "net.minecraft.world.level.gameevent.vibrations.VibrationSystem$Listener",
			"fabric": "net.minecraft.world.event.Vibrations$VibrationListener"
		},
		{
			"forge": "system",
			"fabric": "receiver"
		},
		{
			"forge": "system",
			"fabric": "receiver"
		},
		{
			"forge": "getListenerSource()",
			"fabric": "getPositionSource()"
		},
		{
			"forge": "getListenerSource()",
			"fabric": "getPositionSource()"
		},
		{
			"forge": "getListenerRadius()",
			"fabric": "getRange()"
		},
		{
			"forge": "handleGameEvent(ServerLevel arg0, GameEvent arg1, GameEvent$Context arg2, Vec3 arg3)",
			"fabric": "listen(ServerWorld arg0, GameEvent arg1, GameEvent$Emitter arg2, Vec3d arg3)"
		},
		{
			"forge": "forceScheduleVibration(ServerLevel arg0, GameEvent arg1, GameEvent$Context arg2, Vec3 arg3)",
			"fabric": "forceListen(ServerWorld world, GameEvent event, GameEvent$Emitter emitter, Vec3d emitterPos)"
		},
		{
			"forge": "scheduleVibration(ServerLevel arg0, VibrationSystem$Data arg1, GameEvent arg2, GameEvent$Context arg3, Vec3 arg4, Vec3 arg5)",
			"fabric": "listen(ServerWorld world, Vibrations$ListenerData listenerData, GameEvent event, GameEvent$Emitter emitter, Vec3d emitterPos, Vec3d listenerPos)"
		},
		{
			"forge": "distanceBetweenInBlocks(BlockPos arg0, BlockPos arg1)",
			"fabric": "getTravelDelay(BlockPos emitterPos, BlockPos listenerPos)"
		},
		{
			"forge": "isOccluded(Level arg0, Vec3 arg1, Vec3 arg2)",
			"fabric": "isOccluded(World world, Vec3d emitterPos, Vec3d listenerPos)"
		}
	]
}