{
	"title": "net.minecraft.server.level.ServerPlayer",
	"items": [
		{
			"forge": "net.minecraft.server.level.ServerPlayer",
			"fabric": "net.minecraft.server.network.ServerPlayerEntity"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_XZ",
			"fabric": "field_29769"
		},
		{
			"forge": "NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_Y",
			"fabric": "field_29770"
		},
		{
			"forge": "connection",
			"fabric": "networkHandler"
		},
		{
			"forge": "server",
			"fabric": "server"
		},
		{
			"forge": "gameMode",
			"fabric": "interactionManager"
		},
		{
			"forge": "advancements",
			"fabric": "advancementTracker"
		},
		{
			"forge": "stats",
			"fabric": "statHandler"
		},
		{
			"forge": "lastRecordedHealthAndAbsorption",
			"fabric": "lastHealthScore"
		},
		{
			"forge": "lastRecordedFoodLevel",
			"fabric": "lastFoodScore"
		},
		{
			"forge": "lastRecordedAirLevel",
			"fabric": "lastAirScore"
		},
		{
			"forge": "lastRecordedArmor",
			"fabric": "lastArmorScore"
		},
		{
			"forge": "lastRecordedLevel",
			"fabric": "lastLevelScore"
		},
		{
			"forge": "lastRecordedExperience",
			"fabric": "lastExperienceScore"
		},
		{
			"forge": "lastSentHealth",
			"fabric": "syncedHealth"
		},
		{
			"forge": "lastSentFood",
			"fabric": "syncedFoodLevel"
		},
		{
			"forge": "lastFoodSaturationZero",
			"fabric": "syncedSaturationIsZero"
		},
		{
			"forge": "lastSentExp",
			"fabric": "syncedExperience"
		},
		{
			"forge": "spawnInvulnerableTime",
			"fabric": "joinInvulnerabilityTicks"
		},
		{
			"forge": "chatVisibility",
			"fabric": "clientChatVisibility"
		},
		{
			"forge": "canChatColor",
			"fabric": "clientChatColorsEnabled"
		},
		{
			"forge": "lastActionTime",
			"fabric": "lastActionTime"
		},
		{
			"forge": "camera",
			"fabric": "cameraEntity"
		},
		{
			"forge": "isChangingDimension",
			"fabric": "inTeleportationState"
		},
		{
			"forge": "seenCredits",
			"fabric": "seenCredits"
		},
		{
			"forge": "recipeBook",
			"fabric": "recipeBook"
		},
		{
			"forge": "levitationStartPos",
			"fabric": "levitationStartPos"
		},
		{
			"forge": "levitationStartTime",
			"fabric": "levitationStartTick"
		},
		{
			"forge": "disconnected",
			"fabric": "disconnected"
		},
		{
			"forge": "startingToFallPosition",
			"fabric": "fallStartPos"
		},
		{
			"forge": "enteredNetherPosition",
			"fabric": "enteredNetherPos"
		},
		{
			"forge": "enteredLavaOnVehiclePosition",
			"fabric": "vehicleInLavaRidingPos"
		},
		{
			"forge": "lastSectionPos",
			"fabric": "watchedSection"
		},
		{
			"forge": "respawnDimension",
			"fabric": "spawnPointDimension"
		},
		{
			"forge": "respawnPosition",
			"fabric": "spawnPointPosition"
		},
		{
			"forge": "respawnForced",
			"fabric": "spawnForced"
		},
		{
			"forge": "respawnAngle",
			"fabric": "spawnAngle"
		},
		{
			"forge": "textFilter",
			"fabric": "textStream"
		},
		{
			"forge": "textFilteringEnabled",
			"fabric": "filterText"
		},
		{
			"forge": "allowsListing",
			"fabric": "allowServerListing"
		},
		{
			"forge": "wardenSpawnTracker",
			"fabric": "sculkShriekerWarningManager"
		},
		{
			"forge": "containerSynchronizer",
			"fabric": "screenHandlerSyncHandler"
		},
		{
			"forge": "containerListener",
			"fabric": "screenHandlerListener"
		},
		{
			"forge": "chatSession",
			"fabric": "session"
		},
		{
			"forge": "containerCounter",
			"fabric": "screenHandlerSyncId"
		},
		{
			"forge": "latency",
			"fabric": "pingMilliseconds"
		},
		{
			"forge": "wonGame",
			"fabric": "notInAnyWorld"
		},
		{
			"forge": "fudgeSpawnLocation(ServerLevel arg0)",
			"fabric": "moveToSpawn(ServerWorld world)"
		},
		{
			"forge": "fudgeSpawnLocation(ServerLevel arg0)",
			"fabric": "moveToSpawn(ServerWorld world)"
		},
		{
			"forge": "getCoprime(int arg0)",
			"fabric": "calculateSpawnOffsetMultiplier(int horizontalSpawnArea)"
		},
		{
			"forge": "readAdditionalSaveData(CompoundTag arg0)",
			"fabric": "readCustomDataFromNbt(NbtCompound arg0)"
		},
		{
			"forge": "addAdditionalSaveData(CompoundTag arg0)",
			"fabric": "writeCustomDataToNbt(NbtCompound arg0)"
		},
		{
			"forge": "setExperiencePoints(int arg0)",
			"fabric": "setExperiencePoints(int points)"
		},
		{
			"forge": "setExperienceLevels(int arg0)",
			"fabric": "setExperienceLevel(int level)"
		},
		{
			"forge": "giveExperienceLevels(int arg0)",
			"fabric": "addExperienceLevels(int arg0)"
		},
		{
			"forge": "onEnchantmentPerformed(ItemStack arg0, int arg1)",
			"fabric": "applyEnchantmentCosts(ItemStack arg0, int arg1)"
		},
		{
			"forge": "initMenu(AbstractContainerMenu arg0)",
			"fabric": "onScreenHandlerOpened(ScreenHandler screenHandler)"
		},
		{
			"forge": "initInventoryMenu()",
			"fabric": "onSpawn()"
		},
		{
			"forge": "onEnterCombat()",
			"fabric": "enterCombat()"
		},
		{
			"forge": "onLeaveCombat()",
			"fabric": "endCombat()"
		},
		{
			"forge": "onInsideBlock(BlockState arg0)",
			"fabric": "onBlockCollision(BlockState arg0)"
		},
		{
			"forge": "createItemCooldowns()",
			"fabric": "createCooldownManager()"
		},
		{
			"forge": "tick()",
			"fabric": "tick()"
		},
		{
			"forge": "doTick()",
			"fabric": "playerTick()"
		},
		{
			"forge": "resetFallDistance()",
			"fabric": "onLanding()"
		},
		{
			"forge": "trackStartFallingPosition()",
			"fabric": "tickFallStartPos()"
		},
		{
			"forge": "trackEnteredOrExitedLavaOnVehicle()",
			"fabric": "tickVehicleInLavaRiding()"
		},
		{
			"forge": "updateScoreForCriteria(ObjectiveCriteria arg0, int arg1)",
			"fabric": "updateScores(ScoreboardCriterion criterion, int score)"
		},
		{
			"forge": "die(DamageSource arg0)",
			"fabric": "onDeath(DamageSource arg0)"
		},
		{
			"forge": "tellNeutralMobsThatIDied()",
			"fabric": "forgiveMobAnger()"
		},
		{
			"forge": "awardKillScore(Entity arg0, int arg1, DamageSource arg2)",
			"fabric": "updateKilledAdvancementCriterion(Entity arg0, int arg1, DamageSource arg2)"
		},
		{
			"forge": "handleTeamKill(String arg0, String arg1, ObjectiveCriteria[] arg2)",
			"fabric": "updateScoreboardScore(String playerName, String team, ScoreboardCriterion[] criterions)"
		},
		{
			"forge": "hurt(DamageSource arg0, float arg1)",
			"fabric": "damage(DamageSource arg0, float arg1)"
		},
		{
			"forge": "canHarmPlayer(Player arg0)",
			"fabric": "shouldDamagePlayer(PlayerEntity arg0)"
		},
		{
			"forge": "isPvpAllowed()",
			"fabric": "isPvpEnabled()"
		},
		{
			"forge": "findDimensionEntryPoint(ServerLevel arg0)",
			"fabric": "getTeleportTarget(ServerWorld arg0)"
		},
		{
			"forge": "changeDimension(ServerLevel arg0)",
			"fabric": "moveToWorld(ServerWorld arg0)"
		},
		{
			"forge": "createEndPlatform(ServerLevel arg0, BlockPos arg1)",
			"fabric": "createEndSpawnPlatform(ServerWorld world, BlockPos centerPos)"
		},
		{
			"forge": "getExitPortal(ServerLevel arg0, BlockPos arg1, boolean arg2, WorldBorder arg3)",
			"fabric": "getPortalRect(ServerWorld arg0, BlockPos arg1, boolean arg2, WorldBorder arg3)"
		},
		{
			"forge": "triggerDimensionChangeTriggers(ServerLevel arg0)",
			"fabric": "worldChanged(ServerWorld origin)"
		},
		{
			"forge": "broadcastToPlayer(ServerPlayer arg0)",
			"fabric": "canBeSpectated(ServerPlayerEntity arg0)"
		},
		{
			"forge": "take(Entity arg0, int arg1)",
			"fabric": "sendPickup(Entity arg0, int arg1)"
		},
		{
			"forge": "startSleepInBed(BlockPos arg0)",
			"fabric": "trySleep(BlockPos arg0)"
		},
		{
			"forge": "startSleeping(BlockPos arg0)",
			"fabric": "sleep(BlockPos arg0)"
		},
		{
			"forge": "bedInRange(BlockPos arg0, Direction arg1)",
			"fabric": "isBedTooFarAway(BlockPos pos, Direction direction)"
		},
		{
			"forge": "isReachableBedBlock(BlockPos arg0)",
			"fabric": "isBedTooFarAway(BlockPos pos)"
		},
		{
			"forge": "bedBlocked(BlockPos arg0, Direction arg1)",
			"fabric": "isBedObstructed(BlockPos pos, Direction direction)"
		},
		{
			"forge": "stopSleepInBed(boolean arg0, boolean arg1)",
			"fabric": "wakeUp(boolean arg0, boolean arg1)"
		},
		{
			"forge": "dismountTo(double arg0, double arg1, double arg2)",
			"fabric": "requestTeleportAndDismount(double arg0, double arg1, double arg2)"
		},
		{
			"forge": "isInvulnerableTo(DamageSource arg0)",
			"fabric": "isInvulnerableTo(DamageSource arg0)"
		},
		{
			"forge": "checkFallDamage(double arg0, boolean arg1, BlockState arg2, BlockPos arg3)",
			"fabric": "fall(double arg0, boolean arg1, BlockState arg2, BlockPos arg3)"
		},
		{
			"forge": "onChangedBlock(BlockPos arg0)",
			"fabric": "applyMovementEffects(BlockPos arg0)"
		},
		{
			"forge": "doCheckFallDamage(double arg0, double arg1, double arg2, boolean arg3)",
			"fabric": "handleFall(double xDifference, double yDifference, double zDifference, boolean onGround)"
		},
		{
			"forge": "openTextEdit(SignBlockEntity arg0, boolean arg1)",
			"fabric": "openEditSignScreen(SignBlockEntity arg0, boolean arg1)"
		},
		{
			"forge": "nextContainerCounter()",
			"fabric": "incrementScreenHandlerSyncId()"
		},
		{
			"forge": "openMenu(MenuProvider arg0)",
			"fabric": "openHandledScreen(NamedScreenHandlerFactory arg0)"
		},
		{
			"forge": "sendMerchantOffers(int arg0, MerchantOffers arg1, int arg2, int arg3, boolean arg4, boolean arg5)",
			"fabric": "sendTradeOffers(int arg0, TradeOfferList arg1, int arg2, int arg3, boolean arg4, boolean arg5)"
		},
		{
			"forge": "openHorseInventory(AbstractHorse arg0, Container arg1)",
			"fabric": "openHorseInventory(AbstractHorseEntity arg0, Inventory arg1)"
		},
		{
			"forge": "openItemGui(ItemStack arg0, InteractionHand arg1)",
			"fabric": "useBook(ItemStack arg0, Hand arg1)"
		},
		{
			"forge": "openCommandBlock(CommandBlockEntity arg0)",
			"fabric": "openCommandBlockScreen(CommandBlockBlockEntity arg0)"
		},
		{
			"forge": "closeContainer()",
			"fabric": "closeHandledScreen()"
		},
		{
			"forge": "doCloseContainer()",
			"fabric": "onHandledScreenClosed()"
		},
		{
			"forge": "setPlayerInput(float arg0, float arg1, boolean arg2, boolean arg3)",
			"fabric": "updateInput(float sidewaysSpeed, float forwardSpeed, boolean jumping, boolean sneaking)"
		},
		{
			"forge": "awardStat(Stat<?> arg0, int arg1)",
			"fabric": "increaseStat(Stat<?> arg0, int arg1)"
		},
		{
			"forge": "resetStat(Stat<?> arg0)",
			"fabric": "resetStat(Stat<?> arg0)"
		},
		{
			"forge": "awardRecipes(Collection<Recipe<?>> arg0)",
			"fabric": "unlockRecipes(Collection<Recipe<?>> arg0)"
		},
		{
			"forge": "triggerRecipeCrafted(Recipe<?> arg0, List<ItemStack> arg1)",
			"fabric": "onRecipeCrafted(Recipe<?> arg0, List<ItemStack> arg1)"
		},
		{
			"forge": "awardRecipesByKey(ResourceLocation[] arg0)",
			"fabric": "unlockRecipes(Identifier[] arg0)"
		},
		{
			"forge": "resetRecipes(Collection<Recipe<?>> arg0)",
			"fabric": "lockRecipes(Collection<Recipe<?>> arg0)"
		},
		{
			"forge": "giveExperiencePoints(int arg0)",
			"fabric": "addExperience(int arg0)"
		},
		{
			"forge": "disconnect()",
			"fabric": "onDisconnect()"
		},
		{
			"forge": "hasDisconnected()",
			"fabric": "isDisconnected()"
		},
		{
			"forge": "resetSentInfo()",
			"fabric": "markHealthDirty()"
		},
		{
			"forge": "displayClientMessage(Component arg0, boolean arg1)",
			"fabric": "sendMessage(Text arg0, boolean arg1)"
		},
		{
			"forge": "completeUsingItem()",
			"fabric": "consumeItem()"
		},
		{
			"forge": "lookAt(EntityAnchorArgument$Anchor arg0, Vec3 arg1)",
			"fabric": "lookAt(EntityAnchorArgumentType$EntityAnchor arg0, Vec3d arg1)"
		},
		{
			"forge": "lookAt(EntityAnchorArgument$Anchor arg0, Entity arg1, EntityAnchorArgument$Anchor arg2)",
			"fabric": "lookAtEntity(EntityAnchorArgumentType$EntityAnchor anchorPoint, Entity targetEntity, EntityAnchorArgumentType$EntityAnchor targetAnchor)"
		},
		{
			"forge": "restoreFrom(ServerPlayer arg0, boolean arg1)",
			"fabric": "copyFrom(ServerPlayerEntity oldPlayer, boolean alive)"
		},
		{
			"forge": "onEffectAdded(MobEffectInstance arg0, Entity arg1)",
			"fabric": "onStatusEffectApplied(StatusEffectInstance arg0, Entity arg1)"
		},
		{
			"forge": "onEffectUpdated(MobEffectInstance arg0, boolean arg1, Entity arg2)",
			"fabric": "onStatusEffectUpgraded(StatusEffectInstance arg0, boolean arg1, Entity arg2)"
		},
		{
			"forge": "onEffectRemoved(MobEffectInstance arg0)",
			"fabric": "onStatusEffectRemoved(StatusEffectInstance arg0)"
		},
		{
			"forge": "teleportTo(double arg0, double arg1, double arg2)",
			"fabric": "requestTeleport(double arg0, double arg1, double arg2)"
		},
		{
			"forge": "teleportRelative(double arg0, double arg1, double arg2)",
			"fabric": "requestTeleportOffset(double arg0, double arg1, double arg2)"
		},
		{
			"forge": "teleportTo(ServerLevel arg0, double arg1, double arg2, double arg3, Set<RelativeMovement> arg4, float arg5, float arg6)",
			"fabric": "teleport(ServerWorld arg0, double arg1, double arg2, double arg3, Set<PositionFlag> arg4, float arg5, float arg6)"
		},
		{
			"forge": "moveTo(double arg0, double arg1, double arg2)",
			"fabric": "refreshPositionAfterTeleport(double arg0, double arg1, double arg2)"
		},
		{
			"forge": "crit(Entity arg0)",
			"fabric": "addCritParticles(Entity arg0)"
		},
		{
			"forge": "magicCrit(Entity arg0)",
			"fabric": "addEnchantedHitParticles(Entity arg0)"
		},
		{
			"forge": "onUpdateAbilities()",
			"fabric": "sendAbilitiesUpdate()"
		},
		{
			"forge": "serverLevel()",
			"fabric": "getServerWorld()"
		},
		{
			"forge": "setGameMode(GameType arg0)",
			"fabric": "changeGameMode(GameMode gameMode)"
		},
		{
			"forge": "isSpectator()",
			"fabric": "isSpectator()"
		},
		{
			"forge": "isCreative()",
			"fabric": "isCreative()"
		},
		{
			"forge": "sendSystemMessage(Component arg0)",
			"fabric": "sendMessage(Text arg0)"
		},
		{
			"forge": "sendSystemMessage(Component arg0, boolean arg1)",
			"fabric": "sendMessageToClient(Text message, boolean overlay)"
		},
		{
			"forge": "sendChatMessage(OutgoingChatMessage arg0, boolean arg1, ChatType$Bound arg2)",
			"fabric": "sendChatMessage(SentMessage message, boolean filterMaskEnabled, MessageType$Parameters params)"
		},
		{
			"forge": "getIpAddress()",
			"fabric": "getIp()"
		},
		{
			"forge": "updateOptions(ServerboundClientInformationPacket arg0)",
			"fabric": "setClientSettings(ClientSettingsC2SPacket packet)"
		},
		{
			"forge": "canChatInColor()",
			"fabric": "areClientChatColorsEnabled()"
		},
		{
			"forge": "getChatVisibility()",
			"fabric": "getClientChatVisibility()"
		},
		{
			"forge": "acceptsSystemMessages(boolean arg0)",
			"fabric": "acceptsMessage(boolean overlay)"
		},
		{
			"forge": "acceptsChatMessages()",
			"fabric": "acceptsChatMessage()"
		},
		{
			"forge": "sendTexturePack(String arg0, String arg1, boolean arg2, Component arg3)",
			"fabric": "sendResourcePackUrl(String url, String hash, boolean required, Text resourcePackPrompt)"
		},
		{
			"forge": "sendServerStatus(ServerStatus arg0)",
			"fabric": "sendServerMetadata(ServerMetadata metadata)"
		},
		{
			"forge": "getPermissionLevel()",
			"fabric": "getPermissionLevel()"
		},
		{
			"forge": "resetLastActionTime()",
			"fabric": "updateLastActionTime()"
		},
		{
			"forge": "getStats()",
			"fabric": "getStatHandler()"
		},
		{
			"forge": "getRecipeBook()",
			"fabric": "getRecipeBook()"
		},
		{
			"forge": "updateInvisibilityStatus()",
			"fabric": "updatePotionVisibility()"
		},
		{
			"forge": "getCamera()",
			"fabric": "getCameraEntity()"
		},
		{
			"forge": "setCamera(Entity arg0)",
			"fabric": "setCameraEntity(Entity entity)"
		},
		{
			"forge": "processPortalCooldown()",
			"fabric": "tickPortalCooldown()"
		},
		{
			"forge": "attack(Entity arg0)",
			"fabric": "attack(Entity arg0)"
		},
		{
			"forge": "getLastActionTime()",
			"fabric": "getLastActionTime()"
		},
		{
			"forge": "getTabListDisplayName()",
			"fabric": "getPlayerListName()"
		},
		{
			"forge": "swing(InteractionHand arg0)",
			"fabric": "swingHand(Hand arg0)"
		},
		{
			"forge": "isChangingDimension()",
			"fabric": "isInTeleportationState()"
		},
		{
			"forge": "hasChangedDimension()",
			"fabric": "onTeleportationDone()"
		},
		{
			"forge": "getAdvancements()",
			"fabric": "getAdvancementTracker()"
		},
		{
			"forge": "teleportTo(ServerLevel arg0, double arg1, double arg2, double arg3, float arg4, float arg5)",
			"fabric": "teleport(ServerWorld targetWorld, double x, double y, double z, float yaw, float pitch)"
		},
		{
			"forge": "getRespawnPosition()",
			"fabric": "getSpawnPointPosition()"
		},
		{
			"forge": "getRespawnAngle()",
			"fabric": "getSpawnAngle()"
		},
		{
			"forge": "getRespawnDimension()",
			"fabric": "getSpawnPointDimension()"
		},
		{
			"forge": "isRespawnForced()",
			"fabric": "isSpawnForced()"
		},
		{
			"forge": "setRespawnPosition(ResourceKey<Level> arg0, BlockPos arg1, float arg2, boolean arg3, boolean arg4)",
			"fabric": "setSpawnPoint(RegistryKey<World> dimension, BlockPos pos, float angle, boolean forced, boolean sendMessage)"
		},
		{
			"forge": "trackChunk(ChunkPos arg0, Packet<?> arg1)",
			"fabric": "sendChunkPacket(ChunkPos chunkPos, Packet<?> chunkDataPacket)"
		},
		{
			"forge": "untrackChunk(ChunkPos arg0)",
			"fabric": "sendUnloadChunkPacket(ChunkPos chunkPos)"
		},
		{
			"forge": "getLastSectionPos()",
			"fabric": "getWatchedSection()"
		},
		{
			"forge": "setLastSectionPos(SectionPos arg0)",
			"fabric": "setWatchedSection(ChunkSectionPos section)"
		},
		{
			"forge": "playNotifySound(SoundEvent arg0, SoundSource arg1, float arg2, float arg3)",
			"fabric": "playSound(SoundEvent arg0, SoundCategory arg1, float arg2, float arg3)"
		},
		{
			"forge": "getAddEntityPacket()",
			"fabric": "createSpawnPacket()"
		},
		{
			"forge": "drop(ItemStack arg0, boolean arg1, boolean arg2)",
			"fabric": "dropItem(ItemStack arg0, boolean arg1, boolean arg2)"
		},
		{
			"forge": "getTextFilter()",
			"fabric": "getTextStream()"
		},
		{
			"forge": "setServerLevel(ServerLevel arg0)",
			"fabric": "setServerWorld(ServerWorld world)"
		},
		{
			"forge": "readPlayerMode(CompoundTag arg0, String arg1)",
			"fabric": "gameModeFromNbt(NbtCompound nbt, String key)"
		},
		{
			"forge": "calculateGameModeForNewPlayer(GameType arg0)",
			"fabric": "getServerGameMode(GameMode backupGameMode)"
		},
		{
			"forge": "loadGameTypes(CompoundTag arg0)",
			"fabric": "setGameMode(NbtCompound nbt)"
		},
		{
			"forge": "storeGameTypes(CompoundTag arg0)",
			"fabric": "writeGameModeNbt(NbtCompound nbt)"
		},
		{
			"forge": "isTextFilteringEnabled()",
			"fabric": "shouldFilterText()"
		},
		{
			"forge": "shouldFilterMessageTo(ServerPlayer arg0)",
			"fabric": "shouldFilterMessagesSentTo(ServerPlayerEntity player)"
		},
		{
			"forge": "mayInteract(Level arg0, BlockPos arg1)",
			"fabric": "canModifyAt(World arg0, BlockPos arg1)"
		},
		{
			"forge": "updateUsingItem(ItemStack arg0)",
			"fabric": "tickItemStackUsage(ItemStack arg0)"
		},
		{
			"forge": "drop(boolean arg0)",
			"fabric": "dropSelectedItem(boolean entireStack)"
		},
		{
			"forge": "allowsListing()",
			"fabric": "allowsServerListing()"
		},
		{
			"forge": "getWardenSpawnTracker()",
			"fabric": "getSculkShriekerWarningManager()"
		},
		{
			"forge": "onItemPickup(ItemEntity arg0)",
			"fabric": "triggerItemPickedUpByEntityCriteria(ItemEntity arg0)"
		},
		{
			"forge": "setChatSession(RemoteChatSession arg0)",
			"fabric": "setSession(PublicPlayerSession session)"
		},
		{
			"forge": "getChatSession()",
			"fabric": "getSession()"
		},
		{
			"forge": "indicateDamage(double arg0, double arg1)",
			"fabric": "tiltScreen(double arg0, double arg1)"
		},
		{
			"forge": "startRiding(Entity arg0, boolean arg1)",
			"fabric": "startRiding(Entity arg0, boolean arg1)"
		},
		{
			"forge": "stopRiding()",
			"fabric": "stopRiding()"
		}
	]
}