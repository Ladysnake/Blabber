{
	"title": "net.minecraft.client.renderer.entity.layers.RenderLayer",
	"items": [
		{
			"forge": "net.minecraft.client.renderer.entity.layers.RenderLayer",
			"fabric": "net.minecraft.client.render.entity.feature.FeatureRenderer"
		},
		{
			"forge": "renderer",
			"fabric": "context"
		},
		{
			"forge": "renderer",
			"fabric": "context"
		},
		{
			"forge": "coloredCutoutModelCopyLayerRender(EntityModel<T> arg0, EntityModel<T> arg1, ResourceLocation arg2, PoseStack arg3, MultiBufferSource arg4, int arg5, T arg6, float arg7, float arg8, float arg9, float arg10, float arg11, float arg12, float arg13, float arg14, float arg15)",
			"fabric": "render(EntityModel<T> contextModel, EntityModel<T> model, Identifier texture, MatrixStack matrices, VertexConsumerProvider vertexConsumers, int light, T entity, float limbAngle, float limbDistance, float age, float headYaw, float headPitch, float tickDelta, float red, float green, float blue)"
		},
		{
			"forge": "coloredCutoutModelCopyLayerRender(EntityModel<T> arg0, EntityModel<T> arg1, ResourceLocation arg2, PoseStack arg3, MultiBufferSource arg4, int arg5, T arg6, float arg7, float arg8, float arg9, float arg10, float arg11, float arg12, float arg13, float arg14, float arg15)",
			"fabric": "render(EntityModel<T> contextModel, EntityModel<T> model, Identifier texture, MatrixStack matrices, VertexConsumerProvider vertexConsumers, int light, T entity, float limbAngle, float limbDistance, float age, float headYaw, float headPitch, float tickDelta, float red, float green, float blue)"
		},
		{
			"forge": "renderColoredCutoutModel(EntityModel<T> arg0, ResourceLocation arg1, PoseStack arg2, MultiBufferSource arg3, int arg4, T arg5, float arg6, float arg7, float arg8)",
			"fabric": "renderModel(EntityModel<T> model, Identifier texture, MatrixStack matrices, VertexConsumerProvider vertexConsumers, int light, T entity, float red, float green, float blue)"
		},
		{
			"forge": "getParentModel()",
			"fabric": "getContextModel()"
		},
		{
			"forge": "getTextureLocation(T arg0)",
			"fabric": "getTexture(T entity)"
		},
		{
			"forge": "render(PoseStack arg0, MultiBufferSource arg1, int arg2, T arg3, float arg4, float arg5, float arg6, float arg7, float arg8, float arg9)",
			"fabric": "render(MatrixStack matrices, VertexConsumerProvider vertexConsumers, int light, T entity, float limbAngle, float limbDistance, float tickDelta, float animationProgress, float headYaw, float headPitch)"
		}
	]
}