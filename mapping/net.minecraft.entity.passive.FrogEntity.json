{
	"title": "net.minecraft.world.entity.animal.frog.Frog",
	"items": [
		{
			"forge": "net.minecraft.world.entity.animal.frog.Frog",
			"fabric": "net.minecraft.entity.passive.FrogEntity"
		},
		{
			"forge": "TEMPTATION_ITEM",
			"fabric": "SLIME_BALL"
		},
		{
			"forge": "TEMPTATION_ITEM",
			"fabric": "SLIME_BALL"
		},
		{
			"forge": "SENSOR_TYPES",
			"fabric": "SENSORS"
		},
		{
			"forge": "MEMORY_TYPES",
			"fabric": "MEMORY_MODULES"
		},
		{
			"forge": "DATA_VARIANT_ID",
			"fabric": "VARIANT"
		},
		{
			"forge": "DATA_TONGUE_TARGET_ID",
			"fabric": "TARGET"
		},
		{
			"forge": "FROG_FALL_DAMAGE_REDUCTION",
			"fabric": "field_37459"
		},
		{
			"forge": "VARIANT_KEY",
			"fabric": "VARIANT_KEY"
		},
		{
			"forge": "jumpAnimationState",
			"fabric": "longJumpingAnimationState"
		},
		{
			"forge": "croakAnimationState",
			"fabric": "croakingAnimationState"
		},
		{
			"forge": "tongueAnimationState",
			"fabric": "usingTongueAnimationState"
		},
		{
			"forge": "swimIdleAnimationState",
			"fabric": "idlingInWaterAnimationState"
		},
		{
			"forge": "brainProvider()",
			"fabric": "createBrainProfile()"
		},
		{
			"forge": "brainProvider()",
			"fabric": "createBrainProfile()"
		},
		{
			"forge": "makeBrain(com.mojang.serialization.Dynamic<?> arg0)",
			"fabric": "deserializeBrain(com.mojang.serialization.Dynamic<?> arg0)"
		},
		{
			"forge": "getBrain()",
			"fabric": "getBrain()"
		},
		{
			"forge": "defineSynchedData()",
			"fabric": "initDataTracker()"
		},
		{
			"forge": "eraseTongueTarget()",
			"fabric": "clearFrogTarget()"
		},
		{
			"forge": "getTongueTarget()",
			"fabric": "getFrogTarget()"
		},
		{
			"forge": "setTongueTarget(Entity arg0)",
			"fabric": "setFrogTarget(Entity entity)"
		},
		{
			"forge": "getHeadRotSpeed()",
			"fabric": "getMaxLookYawChange()"
		},
		{
			"forge": "getMaxHeadYRot()",
			"fabric": "getMaxHeadRotation()"
		},
		{
			"forge": "getVariant()",
			"fabric": "getVariant()"
		},
		{
			"forge": "setVariant(FrogVariant arg0)",
			"fabric": "setVariant(FrogVariant variant)"
		},
		{
			"forge": "addAdditionalSaveData(CompoundTag arg0)",
			"fabric": "writeCustomDataToNbt(NbtCompound arg0)"
		},
		{
			"forge": "readAdditionalSaveData(CompoundTag arg0)",
			"fabric": "readCustomDataFromNbt(NbtCompound arg0)"
		},
		{
			"forge": "canBreatheUnderwater()",
			"fabric": "canBreatheInWater()"
		},
		{
			"forge": "customServerAiStep()",
			"fabric": "mobTick()"
		},
		{
			"forge": "tick()",
			"fabric": "tick()"
		},
		{
			"forge": "onSyncedDataUpdated(EntityDataAccessor<?> arg0)",
			"fabric": "onTrackedDataSet(TrackedData<?> arg0)"
		},
		{
			"forge": "updateWalkAnimation(float arg0)",
			"fabric": "updateLimbs(float arg0)"
		},
		{
			"forge": "getBreedOffspring(ServerLevel arg0, AgeableMob arg1)",
			"fabric": "createChild(ServerWorld arg0, PassiveEntity arg1)"
		},
		{
			"forge": "isBaby()",
			"fabric": "isBaby()"
		},
		{
			"forge": "setBaby(boolean arg0)",
			"fabric": "setBaby(boolean arg0)"
		},
		{
			"forge": "spawnChildFromBreeding(ServerLevel arg0, Animal arg1)",
			"fabric": "breed(ServerWorld arg0, AnimalEntity arg1)"
		},
		{
			"forge": "finalizeSpawn(ServerLevelAccessor arg0, DifficultyInstance arg1, MobSpawnType arg2, SpawnGroupData arg3, CompoundTag arg4)",
			"fabric": "initialize(ServerWorldAccess arg0, LocalDifficulty arg1, SpawnReason arg2, EntityData arg3, NbtCompound arg4)"
		},
		{
			"forge": "createAttributes()",
			"fabric": "createFrogAttributes()"
		},
		{
			"forge": "getAmbientSound()",
			"fabric": "getAmbientSound()"
		},
		{
			"forge": "getHurtSound(DamageSource arg0)",
			"fabric": "getHurtSound(DamageSource arg0)"
		},
		{
			"forge": "getDeathSound()",
			"fabric": "getDeathSound()"
		},
		{
			"forge": "playStepSound(BlockPos arg0, BlockState arg1)",
			"fabric": "playStepSound(BlockPos arg0, BlockState arg1)"
		},
		{
			"forge": "isPushedByFluid()",
			"fabric": "isPushedByFluids()"
		},
		{
			"forge": "sendDebugPackets()",
			"fabric": "sendAiDebugData()"
		},
		{
			"forge": "calculateFallDamage(float arg0, float arg1)",
			"fabric": "computeFallDamage(float arg0, float arg1)"
		},
		{
			"forge": "travel(Vec3 arg0)",
			"fabric": "travel(Vec3d arg0)"
		},
		{
			"forge": "canEat(LivingEntity arg0)",
			"fabric": "isValidFrogFood(LivingEntity entity)"
		},
		{
			"forge": "createNavigation(Level arg0)",
			"fabric": "createNavigation(World arg0)"
		},
		{
			"forge": "isFood(ItemStack arg0)",
			"fabric": "isBreedingItem(ItemStack arg0)"
		},
		{
			"forge": "checkFrogSpawnRules(EntityType<? extends Animal> arg0, LevelAccessor arg1, MobSpawnType arg2, BlockPos arg3, RandomSource arg4)",
			"fabric": "canSpawn(EntityType<? extends AnimalEntity> type, WorldAccess world, SpawnReason reason, BlockPos pos, Random random)"
		}
	]
}