{
	"title": "net.minecraft.server.packs.linkfs.LinkFSProvider",
	"items": [
		{
			"forge": "net.minecraft.server.packs.linkfs.LinkFSProvider",
			"fabric": "net.minecraft.resource.fs.ResourceFileSystemProvider"
		},
		{
			"forge": "SCHEME",
			"fabric": "SCHEME"
		},
		{
			"forge": "SCHEME",
			"fabric": "SCHEME"
		},
		{
			"forge": "getScheme()",
			"fabric": "newFileSystem(URI uri, Map<String, ?> env)"
		},
		{
			"forge": "newFileSystem(URI arg0, Map<String, ?> arg1)",
			"fabric": "newFileSystem(URI uri, Map<String, ?> env)"
		},
		{
			"forge": "getFileSystem(URI arg0)",
			"fabric": "getFileSystem(URI uri)"
		},
		{
			"forge": "getPath(URI arg0)",
			"fabric": "getPath(URI uri)"
		},
		{
			"forge": "newByteChannel(Path arg0, Set<? extends OpenOption> arg1, FileAttribute<?>... arg2)",
			"fabric": "newByteChannel(Path path, Set<? extends OpenOption> options, FileAttribute<?>... attrs)"
		},
		{
			"forge": "newDirectoryStream(Path arg0, DirectoryStream$Filter<? super Path> arg1)",
			"fabric": "newDirectoryStream(Path dir, DirectoryStream$Filter<? super Path> filter)"
		},
		{
			"forge": "createDirectory(Path arg0, FileAttribute<?>... arg1)",
			"fabric": "createDirectory(Path dir, FileAttribute<?>... attrs)"
		},
		{
			"forge": "delete(Path arg0)",
			"fabric": "delete(Path path)"
		},
		{
			"forge": "copy(Path arg0, Path arg1, CopyOption... arg2)",
			"fabric": "copy(Path source, Path target, CopyOption... options)"
		},
		{
			"forge": "move(Path arg0, Path arg1, CopyOption... arg2)",
			"fabric": "move(Path source, Path target, CopyOption... options)"
		},
		{
			"forge": "isSameFile(Path arg0, Path arg1)",
			"fabric": "isSameFile(Path path, Path path2)"
		},
		{
			"forge": "isHidden(Path arg0)",
			"fabric": "isHidden(Path path)"
		},
		{
			"forge": "getFileStore(Path arg0)",
			"fabric": "getFileStore(Path path)"
		},
		{
			"forge": "checkAccess(Path arg0, AccessMode... arg1)",
			"fabric": "checkAccess(Path path, AccessMode... modes)"
		},
		{
			"forge": "getFileAttributeView(Path arg0, Class<V> arg1, LinkOption... arg2)",
			"fabric": "getFileAttributeView(Path path, Class<V> type, LinkOption... options)"
		},
		{
			"forge": "readAttributes(Path arg0, Class<A> arg1, LinkOption... arg2)",
			"fabric": "readAttributes(Path path, Class<A> type, LinkOption... options)"
		},
		{
			"forge": "readAttributes(Path arg0, String arg1, LinkOption... arg2)",
			"fabric": "readAttributes(Path path, String attributes, LinkOption... options)"
		},
		{
			"forge": "setAttribute(Path arg0, String arg1, Object arg2, LinkOption... arg3)",
			"fabric": "setAttribute(Path path, String attribute, Object value, LinkOption... options)"
		},
		{
			"forge": "toLinkPath(Path arg0)",
			"fabric": "toResourcePath(Path path)"
		}
	]
}