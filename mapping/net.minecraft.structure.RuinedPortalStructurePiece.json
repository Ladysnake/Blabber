{
	"title": "net.minecraft.world.level.levelgen.structure.structures.RuinedPortalPiece",
	"items": [
		{
			"forge": "net.minecraft.world.level.levelgen.structure.structures.RuinedPortalPiece",
			"fabric": "net.minecraft.structure.RuinedPortalStructurePiece"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "PROBABILITY_OF_GOLD_GONE",
			"fabric": "field_31620"
		},
		{
			"forge": "PROBABILITY_OF_MAGMA_INSTEAD_OF_NETHERRACK",
			"fabric": "field_31621"
		},
		{
			"forge": "PROBABILITY_OF_MAGMA_INSTEAD_OF_LAVA",
			"fabric": "field_31622"
		},
		{
			"forge": "verticalPlacement",
			"fabric": "verticalPlacement"
		},
		{
			"forge": "properties",
			"fabric": "properties"
		},
		{
			"forge": "addAdditionalSaveData(StructurePieceSerializationContext arg0, CompoundTag arg1)",
			"fabric": "writeNbt(StructureContext arg0, NbtCompound arg1)"
		},
		{
			"forge": "addAdditionalSaveData(StructurePieceSerializationContext arg0, CompoundTag arg1)",
			"fabric": "writeNbt(StructureContext arg0, NbtCompound arg1)"
		},
		{
			"forge": "makeSettings(StructureTemplateManager arg0, CompoundTag arg1, ResourceLocation arg2)",
			"fabric": "createPlacementData(StructureTemplateManager manager, NbtCompound nbt, Identifier id)"
		},
		{
			"forge": "makeSettings(Mirror arg0, Rotation arg1, RuinedPortalPiece$VerticalPlacement arg2, BlockPos arg3, RuinedPortalPiece$Properties arg4)",
			"fabric": "createPlacementData(BlockMirror mirror, BlockRotation rotation, RuinedPortalStructurePiece$VerticalPlacement verticalPlacement, BlockPos pos, RuinedPortalStructurePiece$Properties properties)"
		},
		{
			"forge": "getLavaProcessorRule(RuinedPortalPiece$VerticalPlacement arg0, RuinedPortalPiece$Properties arg1)",
			"fabric": "createLavaReplacementRule(RuinedPortalStructurePiece$VerticalPlacement verticalPlacement, RuinedPortalStructurePiece$Properties properties)"
		},
		{
			"forge": "postProcess(WorldGenLevel arg0, StructureManager arg1, ChunkGenerator arg2, RandomSource arg3, BoundingBox arg4, ChunkPos arg5, BlockPos arg6)",
			"fabric": "generate(StructureWorldAccess arg0, StructureAccessor arg1, ChunkGenerator arg2, Random arg3, BlockBox arg4, ChunkPos arg5, BlockPos arg6)"
		},
		{
			"forge": "handleDataMarker(String arg0, BlockPos arg1, ServerLevelAccessor arg2, RandomSource arg3, BoundingBox arg4)",
			"fabric": "handleMetadata(String arg0, BlockPos arg1, ServerWorldAccess arg2, Random arg3, BlockBox arg4)"
		},
		{
			"forge": "maybeAddVines(RandomSource arg0, LevelAccessor arg1, BlockPos arg2)",
			"fabric": "generateVines(Random random, WorldAccess world, BlockPos pos)"
		},
		{
			"forge": "maybeAddLeavesAbove(RandomSource arg0, LevelAccessor arg1, BlockPos arg2)",
			"fabric": "generateOvergrownLeaves(Random random, WorldAccess world, BlockPos pos)"
		},
		{
			"forge": "addNetherrackDripColumnsBelowPortal(RandomSource arg0, LevelAccessor arg1)",
			"fabric": "updateNetherracksInBound(Random random, WorldAccess world)"
		},
		{
			"forge": "addNetherrackDripColumn(RandomSource arg0, LevelAccessor arg1, BlockPos arg2)",
			"fabric": "updateNetherracks(Random random, WorldAccess world, BlockPos pos)"
		},
		{
			"forge": "spreadNetherrack(RandomSource arg0, LevelAccessor arg1)",
			"fabric": "placeNetherrackBase(Random random, WorldAccess world)"
		},
		{
			"forge": "canBlockBeReplacedByNetherrackOrMagma(LevelAccessor arg0, BlockPos arg1)",
			"fabric": "canFillNetherrack(WorldAccess world, BlockPos pos)"
		},
		{
			"forge": "placeNetherrackOrMagma(RandomSource arg0, LevelAccessor arg1, BlockPos arg2)",
			"fabric": "placeNetherrackBottom(Random random, WorldAccess world, BlockPos pos)"
		},
		{
			"forge": "getSurfaceY(LevelAccessor arg0, int arg1, int arg2, RuinedPortalPiece$VerticalPlacement arg3)",
			"fabric": "getBaseHeight(WorldAccess world, int x, int y, RuinedPortalStructurePiece$VerticalPlacement verticalPlacement)"
		},
		{
			"forge": "getHeightMapType(RuinedPortalPiece$VerticalPlacement arg0)",
			"fabric": "getHeightmapType(RuinedPortalStructurePiece$VerticalPlacement verticalPlacement)"
		},
		{
			"forge": "getBlockReplaceRule(Block arg0, float arg1, Block arg2)",
			"fabric": "createReplacementRule(Block old, float chance, Block updated)"
		},
		{
			"forge": "getBlockReplaceRule(Block arg0, Block arg1)",
			"fabric": "createReplacementRule(Block old, Block updated)"
		}
	]
}