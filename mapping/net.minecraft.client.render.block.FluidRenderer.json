{
	"title": "net.minecraft.client.renderer.block.LiquidBlockRenderer",
	"items": [
		{
			"forge": "net.minecraft.client.renderer.block.LiquidBlockRenderer",
			"fabric": "net.minecraft.client.render.block.FluidRenderer"
		},
		{
			"forge": "MAX_FLUID_HEIGHT",
			"fabric": "field_32781"
		},
		{
			"forge": "MAX_FLUID_HEIGHT",
			"fabric": "field_32781"
		},
		{
			"forge": "lavaIcons",
			"fabric": "lavaSprites"
		},
		{
			"forge": "waterIcons",
			"fabric": "waterSprites"
		},
		{
			"forge": "waterOverlay",
			"fabric": "waterOverlaySprite"
		},
		{
			"forge": "setupSprites()",
			"fabric": "onResourceReload()"
		},
		{
			"forge": "setupSprites()",
			"fabric": "onResourceReload()"
		},
		{
			"forge": "isNeighborSameFluid(FluidState arg0, FluidState arg1)",
			"fabric": "isSameFluid(FluidState a, FluidState b)"
		},
		{
			"forge": "isFaceOccludedByState(BlockGetter arg0, Direction arg1, float arg2, BlockPos arg3, BlockState arg4)",
			"fabric": "isSideCovered(BlockView world, Direction direction, float height, BlockPos pos, BlockState state)"
		},
		{
			"forge": "isFaceOccludedByNeighbor(BlockGetter arg0, BlockPos arg1, Direction arg2, float arg3, BlockState arg4)",
			"fabric": "isSideCovered(BlockView world, BlockPos pos, Direction direction, float maxDeviation, BlockState state)"
		},
		{
			"forge": "isFaceOccludedBySelf(BlockGetter arg0, BlockPos arg1, BlockState arg2, Direction arg3)",
			"fabric": "isOppositeSideCovered(BlockView world, BlockPos pos, BlockState state, Direction direction)"
		},
		{
			"forge": "shouldRenderFace(BlockAndTintGetter arg0, BlockPos arg1, FluidState arg2, BlockState arg3, Direction arg4, FluidState arg5)",
			"fabric": "shouldRenderSide(BlockRenderView world, BlockPos pos, FluidState fluidState, BlockState blockState, Direction direction, FluidState neighborFluidState)"
		},
		{
			"forge": "tesselate(BlockAndTintGetter arg0, BlockPos arg1, VertexConsumer arg2, BlockState arg3, FluidState arg4)",
			"fabric": "render(BlockRenderView world, BlockPos pos, VertexConsumer vertexConsumer, BlockState blockState, FluidState fluidState)"
		},
		{
			"forge": "calculateAverageHeight(BlockAndTintGetter arg0, Fluid arg1, float arg2, float arg3, float arg4, BlockPos arg5)",
			"fabric": "calculateFluidHeight(BlockRenderView world, Fluid fluid, float originHeight, float northSouthHeight, float eastWestHeight, BlockPos pos)"
		},
		{
			"forge": "addWeightedHeight(float[] arg0, float arg1)",
			"fabric": "addHeight(float[] weightedAverageHeight, float height)"
		},
		{
			"forge": "getHeight(BlockAndTintGetter arg0, Fluid arg1, BlockPos arg2)",
			"fabric": "getFluidHeight(BlockRenderView world, Fluid fluid, BlockPos pos)"
		},
		{
			"forge": "getHeight(BlockAndTintGetter arg0, Fluid arg1, BlockPos arg2, BlockState arg3, FluidState arg4)",
			"fabric": "getFluidHeight(BlockRenderView world, Fluid fluid, BlockPos pos, BlockState blockState, FluidState fluidState)"
		},
		{
			"forge": "vertex(VertexConsumer arg0, double arg1, double arg2, double arg3, float arg4, float arg5, float arg6, float arg7, float arg8, int arg9)",
			"fabric": "vertex(VertexConsumer vertexConsumer, double x, double y, double z, float red, float green, float blue, float u, float v, int light)"
		},
		{
			"forge": "getLightColor(BlockAndTintGetter arg0, BlockPos arg1)",
			"fabric": "getLight(BlockRenderView world, BlockPos pos)"
		}
	]
}