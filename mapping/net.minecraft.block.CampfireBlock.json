{
	"title": "net.minecraft.world.level.block.CampfireBlock",
	"items": [
		{
			"forge": "net.minecraft.world.level.block.CampfireBlock",
			"fabric": "net.minecraft.block.CampfireBlock"
		},
		{
			"forge": "SHAPE",
			"fabric": "SHAPE"
		},
		{
			"forge": "SHAPE",
			"fabric": "SHAPE"
		},
		{
			"forge": "LIT",
			"fabric": "LIT"
		},
		{
			"forge": "SIGNAL_FIRE",
			"fabric": "SIGNAL_FIRE"
		},
		{
			"forge": "WATERLOGGED",
			"fabric": "WATERLOGGED"
		},
		{
			"forge": "FACING",
			"fabric": "FACING"
		},
		{
			"forge": "VIRTUAL_FENCE_POST",
			"fabric": "SMOKEY_SHAPE"
		},
		{
			"forge": "SMOKE_DISTANCE",
			"fabric": "field_31049"
		},
		{
			"forge": "spawnParticles",
			"fabric": "emitsParticles"
		},
		{
			"forge": "fireDamage",
			"fabric": "fireDamage"
		},
		{
			"forge": "use(BlockState arg0, Level arg1, BlockPos arg2, Player arg3, InteractionHand arg4, BlockHitResult arg5)",
			"fabric": "onUse(BlockState arg0, World arg1, BlockPos arg2, PlayerEntity arg3, Hand arg4, BlockHitResult arg5)"
		},
		{
			"forge": "use(BlockState arg0, Level arg1, BlockPos arg2, Player arg3, InteractionHand arg4, BlockHitResult arg5)",
			"fabric": "onUse(BlockState arg0, World arg1, BlockPos arg2, PlayerEntity arg3, Hand arg4, BlockHitResult arg5)"
		},
		{
			"forge": "entityInside(BlockState arg0, Level arg1, BlockPos arg2, Entity arg3)",
			"fabric": "onEntityCollision(BlockState arg0, World arg1, BlockPos arg2, Entity arg3)"
		},
		{
			"forge": "onRemove(BlockState arg0, Level arg1, BlockPos arg2, BlockState arg3, boolean arg4)",
			"fabric": "onStateReplaced(BlockState arg0, World arg1, BlockPos arg2, BlockState arg3, boolean arg4)"
		},
		{
			"forge": "getStateForPlacement(BlockPlaceContext arg0)",
			"fabric": "getPlacementState(ItemPlacementContext arg0)"
		},
		{
			"forge": "updateShape(BlockState arg0, Direction arg1, BlockState arg2, LevelAccessor arg3, BlockPos arg4, BlockPos arg5)",
			"fabric": "getStateForNeighborUpdate(BlockState arg0, Direction arg1, BlockState arg2, WorldAccess arg3, BlockPos arg4, BlockPos arg5)"
		},
		{
			"forge": "isSmokeSource(BlockState arg0)",
			"fabric": "isSignalFireBaseBlock(BlockState state)"
		},
		{
			"forge": "getShape(BlockState arg0, BlockGetter arg1, BlockPos arg2, CollisionContext arg3)",
			"fabric": "getOutlineShape(BlockState arg0, BlockView arg1, BlockPos arg2, ShapeContext arg3)"
		},
		{
			"forge": "getRenderShape(BlockState arg0)",
			"fabric": "getRenderType(BlockState arg0)"
		},
		{
			"forge": "animateTick(BlockState arg0, Level arg1, BlockPos arg2, RandomSource arg3)",
			"fabric": "randomDisplayTick(BlockState arg0, World arg1, BlockPos arg2, Random arg3)"
		},
		{
			"forge": "dowse(Entity arg0, LevelAccessor arg1, BlockPos arg2, BlockState arg3)",
			"fabric": "extinguish(Entity entity, WorldAccess world, BlockPos pos, BlockState state)"
		},
		{
			"forge": "placeLiquid(LevelAccessor arg0, BlockPos arg1, BlockState arg2, FluidState arg3)",
			"fabric": "tryFillWithFluid(WorldAccess arg0, BlockPos arg1, BlockState arg2, FluidState arg3)"
		},
		{
			"forge": "onProjectileHit(Level arg0, BlockState arg1, BlockHitResult arg2, Projectile arg3)",
			"fabric": "onProjectileHit(World arg0, BlockState arg1, BlockHitResult arg2, ProjectileEntity arg3)"
		},
		{
			"forge": "makeParticles(Level arg0, BlockPos arg1, boolean arg2, boolean arg3)",
			"fabric": "spawnSmokeParticle(World world, BlockPos pos, boolean isSignal, boolean lotsOfSmoke)"
		},
		{
			"forge": "isSmokeyPos(Level arg0, BlockPos arg1)",
			"fabric": "isLitCampfireInRange(World world, BlockPos pos)"
		},
		{
			"forge": "isLitCampfire(BlockState arg0)",
			"fabric": "isLitCampfire(BlockState state)"
		},
		{
			"forge": "getFluidState(BlockState arg0)",
			"fabric": "getFluidState(BlockState arg0)"
		},
		{
			"forge": "rotate(BlockState arg0, Rotation arg1)",
			"fabric": "rotate(BlockState arg0, BlockRotation arg1)"
		},
		{
			"forge": "mirror(BlockState arg0, Mirror arg1)",
			"fabric": "mirror(BlockState arg0, BlockMirror arg1)"
		},
		{
			"forge": "createBlockStateDefinition(StateDefinition$Builder<Block, BlockState> arg0)",
			"fabric": "appendProperties(StateManager$Builder<Block, BlockState> arg0)"
		},
		{
			"forge": "newBlockEntity(BlockPos arg0, BlockState arg1)",
			"fabric": "createBlockEntity(BlockPos arg0, BlockState arg1)"
		},
		{
			"forge": "getTicker(Level arg0, BlockState arg1, BlockEntityType<T> arg2)",
			"fabric": "getTicker(World arg0, BlockState arg1, BlockEntityType<T> arg2)"
		},
		{
			"forge": "isPathfindable(BlockState arg0, BlockGetter arg1, BlockPos arg2, PathComputationType arg3)",
			"fabric": "canPathfindThrough(BlockState arg0, BlockView arg1, BlockPos arg2, NavigationType arg3)"
		},
		{
			"forge": "canLight(BlockState arg0)",
			"fabric": "canBeLit(BlockState state)"
		}
	]
}