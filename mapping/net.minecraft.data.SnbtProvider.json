{
	"title": "net.minecraft.data.structures.SnbtToNbt",
	"items": [
		{
			"forge": "net.minecraft.data.structures.SnbtToNbt",
			"fabric": "net.minecraft.data.SnbtProvider"
		},
		{
			"forge": "DUMP_SNBT_TO",
			"fabric": "DEBUG_OUTPUT_DIRECTORY"
		},
		{
			"forge": "DUMP_SNBT_TO",
			"fabric": "DEBUG_OUTPUT_DIRECTORY"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "output",
			"fabric": "output"
		},
		{
			"forge": "inputFolders",
			"fabric": "paths"
		},
		{
			"forge": "filters",
			"fabric": "write"
		},
		{
			"forge": "addFilter(SnbtToNbt$Filter arg0)",
			"fabric": "addWriter(SnbtProvider$Tweaker tweaker)"
		},
		{
			"forge": "addFilter(SnbtToNbt$Filter arg0)",
			"fabric": "addWriter(SnbtProvider$Tweaker tweaker)"
		},
		{
			"forge": "applyFilters(String arg0, CompoundTag arg1)",
			"fabric": "write(String key, NbtCompound compound)"
		},
		{
			"forge": "run(CachedOutput arg0)",
			"fabric": "run(DataWriter arg0)"
		},
		{
			"forge": "getName()",
			"fabric": "getName()"
		},
		{
			"forge": "getName(Path arg0, Path arg1)",
			"fabric": "getFileName(Path root, Path file)"
		},
		{
			"forge": "readStructure(Path arg0, String arg1)",
			"fabric": "toCompressedNbt(Path path, String name)"
		},
		{
			"forge": "storeStructureIfChanged(CachedOutput arg0, SnbtToNbt$TaskResult arg1, Path arg2)",
			"fabric": "write(DataWriter cache, SnbtProvider$CompressedData data, Path root)"
		}
	]
}