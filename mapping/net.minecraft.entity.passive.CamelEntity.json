{
	"title": "net.minecraft.world.entity.animal.camel.Camel",
	"items": [
		{
			"forge": "net.minecraft.world.entity.animal.camel.Camel",
			"fabric": "net.minecraft.entity.passive.CamelEntity"
		},
		{
			"forge": "TEMPTATION_ITEM",
			"fabric": "BREEDING_INGREDIENT"
		},
		{
			"forge": "TEMPTATION_ITEM",
			"fabric": "BREEDING_INGREDIENT"
		},
		{
			"forge": "DASH_COOLDOWN_TICKS",
			"fabric": "field_40132"
		},
		{
			"forge": "MAX_HEAD_Y_ROT",
			"fabric": "field_41764"
		},
		{
			"forge": "RUNNING_SPEED_BONUS",
			"fabric": "field_40146"
		},
		{
			"forge": "DASH_VERTICAL_MOMENTUM",
			"fabric": "field_40147"
		},
		{
			"forge": "DASH_HORIZONTAL_MOMENTUM",
			"fabric": "field_40148"
		},
		{
			"forge": "DASH_MINIMUM_DURATION_TICKS",
			"fabric": "field_43388"
		},
		{
			"forge": "SITDOWN_DURATION_TICKS",
			"fabric": "field_40149"
		},
		{
			"forge": "STANDUP_DURATION_TICKS",
			"fabric": "field_40133"
		},
		{
			"forge": "IDLE_MINIMAL_DURATION_TICKS",
			"fabric": "field_40134"
		},
		{
			"forge": "SITTING_HEIGHT_DIFFERENCE",
			"fabric": "field_40135"
		},
		{
			"forge": "DASH",
			"fabric": "DASHING"
		},
		{
			"forge": "LAST_POSE_CHANGE_TICK",
			"fabric": "LAST_POSE_TICK"
		},
		{
			"forge": "sitAnimationState",
			"fabric": "sittingTransitionAnimationState"
		},
		{
			"forge": "sitPoseAnimationState",
			"fabric": "sittingAnimationState"
		},
		{
			"forge": "sitUpAnimationState",
			"fabric": "standingTransitionAnimationState"
		},
		{
			"forge": "idleAnimationState",
			"fabric": "idlingAnimationState"
		},
		{
			"forge": "dashAnimationState",
			"fabric": "dashingAnimationState"
		},
		{
			"forge": "SITTING_DIMENSIONS",
			"fabric": "SITTING_DIMENSIONS"
		},
		{
			"forge": "dashCooldown",
			"fabric": "dashCooldown"
		},
		{
			"forge": "idleAnimationTimeout",
			"fabric": "idleAnimationCooldown"
		},
		{
			"forge": "addAdditionalSaveData(CompoundTag arg0)",
			"fabric": "writeCustomDataToNbt(NbtCompound arg0)"
		},
		{
			"forge": "addAdditionalSaveData(CompoundTag arg0)",
			"fabric": "writeCustomDataToNbt(NbtCompound arg0)"
		},
		{
			"forge": "readAdditionalSaveData(CompoundTag arg0)",
			"fabric": "readCustomDataFromNbt(NbtCompound arg0)"
		},
		{
			"forge": "createAttributes()",
			"fabric": "createCamelAttributes()"
		},
		{
			"forge": "defineSynchedData()",
			"fabric": "initDataTracker()"
		},
		{
			"forge": "finalizeSpawn(ServerLevelAccessor arg0, DifficultyInstance arg1, MobSpawnType arg2, SpawnGroupData arg3, CompoundTag arg4)",
			"fabric": "initialize(ServerWorldAccess arg0, LocalDifficulty arg1, SpawnReason arg2, EntityData arg3, NbtCompound arg4)"
		},
		{
			"forge": "brainProvider()",
			"fabric": "createBrainProfile()"
		},
		{
			"forge": "registerGoals()",
			"fabric": "initGoals()"
		},
		{
			"forge": "makeBrain(com.mojang.serialization.Dynamic<?> arg0)",
			"fabric": "deserializeBrain(com.mojang.serialization.Dynamic<?> arg0)"
		},
		{
			"forge": "getDimensions(Pose arg0)",
			"fabric": "getDimensions(EntityPose arg0)"
		},
		{
			"forge": "getStandingEyeHeight(Pose arg0, EntityDimensions arg1)",
			"fabric": "getActiveEyeHeight(EntityPose arg0, EntityDimensions arg1)"
		},
		{
			"forge": "getRiderShieldingHeight()",
			"fabric": "getPassengerAttackYOffset()"
		},
		{
			"forge": "customServerAiStep()",
			"fabric": "mobTick()"
		},
		{
			"forge": "tick()",
			"fabric": "tick()"
		},
		{
			"forge": "setupAnimationStates()",
			"fabric": "updateAnimations()"
		},
		{
			"forge": "updateWalkAnimation(float arg0)",
			"fabric": "updateLimbs(float arg0)"
		},
		{
			"forge": "travel(Vec3 arg0)",
			"fabric": "travel(Vec3d arg0)"
		},
		{
			"forge": "tickRidden(Player arg0, Vec3 arg1)",
			"fabric": "tickControlled(PlayerEntity arg0, Vec3d arg1)"
		},
		{
			"forge": "refuseToMove()",
			"fabric": "isStationary()"
		},
		{
			"forge": "getRiddenSpeed(Player arg0)",
			"fabric": "getSaddledSpeed(PlayerEntity arg0)"
		},
		{
			"forge": "getRiddenRotation(LivingEntity arg0)",
			"fabric": "getControlledRotation(LivingEntity arg0)"
		},
		{
			"forge": "getRiddenInput(Player arg0, Vec3 arg1)",
			"fabric": "getControlledMovementInput(PlayerEntity arg0, Vec3d arg1)"
		},
		{
			"forge": "canJump()",
			"fabric": "canJump()"
		},
		{
			"forge": "onPlayerJump(int arg0)",
			"fabric": "setJumpStrength(int arg0)"
		},
		{
			"forge": "canSprint()",
			"fabric": "canSprintAsVehicle()"
		},
		{
			"forge": "executeRidersJump(float arg0, Vec3 arg1)",
			"fabric": "jump(float arg0, Vec3d arg1)"
		},
		{
			"forge": "isDashing()",
			"fabric": "isDashing()"
		},
		{
			"forge": "setDashing(boolean arg0)",
			"fabric": "setDashing(boolean dashing)"
		},
		{
			"forge": "isPanicking()",
			"fabric": "isPanicking()"
		},
		{
			"forge": "handleStartJump(int arg0)",
			"fabric": "startJumping(int arg0)"
		},
		{
			"forge": "handleStopJump()",
			"fabric": "stopJumping()"
		},
		{
			"forge": "getJumpCooldown()",
			"fabric": "getJumpCooldown()"
		},
		{
			"forge": "getAmbientSound()",
			"fabric": "getAmbientSound()"
		},
		{
			"forge": "getDeathSound()",
			"fabric": "getDeathSound()"
		},
		{
			"forge": "getHurtSound(DamageSource arg0)",
			"fabric": "getHurtSound(DamageSource arg0)"
		},
		{
			"forge": "playStepSound(BlockPos arg0, BlockState arg1)",
			"fabric": "playStepSound(BlockPos arg0, BlockState arg1)"
		},
		{
			"forge": "isFood(ItemStack arg0)",
			"fabric": "isBreedingItem(ItemStack arg0)"
		},
		{
			"forge": "mobInteract(Player arg0, InteractionHand arg1)",
			"fabric": "interactMob(PlayerEntity arg0, Hand arg1)"
		},
		{
			"forge": "onLeashDistance(float arg0)",
			"fabric": "updateForLeashLength(float arg0)"
		},
		{
			"forge": "handleEating(Player arg0, ItemStack arg1)",
			"fabric": "receiveFood(PlayerEntity arg0, ItemStack arg1)"
		},
		{
			"forge": "canPerformRearing()",
			"fabric": "shouldAmbientStand()"
		},
		{
			"forge": "canMate(Animal arg0)",
			"fabric": "canBreedWith(AnimalEntity arg0)"
		},
		{
			"forge": "getBreedOffspring(ServerLevel arg0, AgeableMob arg1)",
			"fabric": "createChild(ServerWorld arg0, PassiveEntity arg1)"
		},
		{
			"forge": "getEatingSound()",
			"fabric": "getEatSound()"
		},
		{
			"forge": "actuallyHurt(DamageSource arg0, float arg1)",
			"fabric": "applyDamage(DamageSource arg0, float arg1)"
		},
		{
			"forge": "positionRider(Entity arg0, Entity$MoveFunction arg1)",
			"fabric": "updatePassengerPosition(Entity arg0, Entity$PositionUpdater arg1)"
		},
		{
			"forge": "getBodyAnchorAnimationYOffset(boolean arg0, float arg1)",
			"fabric": "method_45346(boolean arg0, float arg1)"
		},
		{
			"forge": "getLeashOffset(float arg0)",
			"fabric": "getLeashOffset(float arg0)"
		},
		{
			"forge": "getPassengersRidingOffset()",
			"fabric": "getMountedHeightOffset()"
		},
		{
			"forge": "onPassengerTurned(Entity arg0)",
			"fabric": "onPassengerLookAround(Entity arg0)"
		},
		{
			"forge": "clampRotation(Entity arg0)",
			"fabric": "clampPassengerYaw(Entity passenger)"
		},
		{
			"forge": "clampHeadRotationToBody(Entity arg0, float arg1)",
			"fabric": "clampHeadYaw(Entity entity, float range)"
		},
		{
			"forge": "getMaxHeadYRot()",
			"fabric": "getMaxHeadRotation()"
		},
		{
			"forge": "canAddPassenger(Entity arg0)",
			"fabric": "canAddPassenger(Entity arg0)"
		},
		{
			"forge": "getControllingPassenger()",
			"fabric": "getControllingPassenger()"
		},
		{
			"forge": "sendDebugPackets()",
			"fabric": "sendAiDebugData()"
		},
		{
			"forge": "isCamelSitting()",
			"fabric": "isSitting()"
		},
		{
			"forge": "isCamelVisuallySitting()",
			"fabric": "shouldUpdateSittingAnimations()"
		},
		{
			"forge": "isInPoseTransition()",
			"fabric": "isChangingPose()"
		},
		{
			"forge": "isVisuallySittingDown()",
			"fabric": "shouldPlaySittingTransitionAnimation()"
		},
		{
			"forge": "sitDown()",
			"fabric": "startSitting()"
		},
		{
			"forge": "standUp()",
			"fabric": "startStanding()"
		},
		{
			"forge": "standUpInstantly()",
			"fabric": "setStanding()"
		},
		{
			"forge": "resetLastPoseChangeTick(long arg0)",
			"fabric": "setLastPoseTick(long lastPoseTick)"
		},
		{
			"forge": "resetLastPoseChangeTickToFullStand(long arg0)",
			"fabric": "initLastPoseTick(long time)"
		},
		{
			"forge": "getPoseTime()",
			"fabric": "getLastPoseTickDelta()"
		},
		{
			"forge": "getSaddleSoundEvent()",
			"fabric": "getSaddleSound()"
		},
		{
			"forge": "onSyncedDataUpdated(EntityDataAccessor<?> arg0)",
			"fabric": "onTrackedDataSet(TrackedData<?> arg0)"
		},
		{
			"forge": "createBodyControl()",
			"fabric": "createBodyControl()"
		},
		{
			"forge": "isTamed()",
			"fabric": "isTame()"
		},
		{
			"forge": "openCustomInventoryScreen(Player arg0)",
			"fabric": "openInventory(PlayerEntity arg0)"
		}
	]
}