{
	"title": "net.minecraft.world.level.lighting.ChunkSkyLightSources",
	"items": [
		{
			"forge": "net.minecraft.world.level.lighting.ChunkSkyLightSources",
			"fabric": "net.minecraft.world.chunk.light.ChunkSkyLight"
		},
		{
			"forge": "SIZE",
			"fabric": "field_44711"
		},
		{
			"forge": "SIZE",
			"fabric": "field_44711"
		},
		{
			"forge": "NEGATIVE_INFINITY",
			"fabric": "field_44710"
		},
		{
			"forge": "minY",
			"fabric": "minY"
		},
		{
			"forge": "heightmap",
			"fabric": "palette"
		},
		{
			"forge": "mutablePos1",
			"fabric": "reusableBlockPos1"
		},
		{
			"forge": "mutablePos2",
			"fabric": "reusableBlockPos2"
		},
		{
			"forge": "fillFrom(ChunkAccess arg0)",
			"fabric": "refreshSurfaceY(Chunk chunk)"
		},
		{
			"forge": "fillFrom(ChunkAccess arg0)",
			"fabric": "refreshSurfaceY(Chunk chunk)"
		},
		{
			"forge": "findLowestSourceY(ChunkAccess arg0, int arg1, int arg2, int arg3)",
			"fabric": "calculateSurfaceY(Chunk chunk, int topSectionIndex, int localX, int localZ)"
		},
		{
			"forge": "update(BlockGetter arg0, int arg1, int arg2, int arg3)",
			"fabric": "isSkyLightAccessible(BlockView blockView, int localX, int y, int localZ)"
		},
		{
			"forge": "updateEdge(BlockGetter arg0, int arg1, int arg2, BlockPos arg3, BlockState arg4, BlockPos arg5, BlockState arg6)",
			"fabric": "isSkyLightAccessible(BlockView blockView, int packedIndex, int value, BlockPos upperPos, BlockState upperState, BlockPos lowerPos, BlockState lowerState)"
		},
		{
			"forge": "findLowestSourceBelow(BlockGetter arg0, BlockPos arg1, BlockState arg2)",
			"fabric": "locateLightBlockingBlockBelow(BlockView blockView, BlockPos pos, BlockState blockState)"
		},
		{
			"forge": "isEdgeOccluded(BlockGetter arg0, BlockPos arg1, BlockState arg2, BlockPos arg3, BlockState arg4)",
			"fabric": "faceBlocksLight(BlockView blockView, BlockPos upperPos, BlockState upperState, BlockPos lowerPos, BlockState lowerState)"
		},
		{
			"forge": "getLowestSourceY(int arg0, int arg1)",
			"fabric": "get(int localX, int localZ)"
		},
		{
			"forge": "getHighestLowestSourceY()",
			"fabric": "getMaxSurfaceY()"
		},
		{
			"forge": "fill(int arg0)",
			"fabric": "fill(int y)"
		},
		{
			"forge": "set(int arg0, int arg1)",
			"fabric": "set(int index, int y)"
		},
		{
			"forge": "get(int arg0)",
			"fabric": "get(int index)"
		},
		{
			"forge": "extendSourcesBelowWorld(int arg0)",
			"fabric": "convertMinY(int y)"
		},
		{
			"forge": "index(int arg0, int arg1)",
			"fabric": "getPackedIndex(int localX, int localZ)"
		}
	]
}