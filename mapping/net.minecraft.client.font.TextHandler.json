{
	"title": "net.minecraft.client.StringSplitter",
	"items": [
		{
			"forge": "net.minecraft.client.StringSplitter",
			"fabric": "net.minecraft.client.font.TextHandler"
		},
		{
			"forge": "widthProvider",
			"fabric": "widthRetriever"
		},
		{
			"forge": "widthProvider",
			"fabric": "widthRetriever"
		},
		{
			"forge": "stringWidth(String arg0)",
			"fabric": "getWidth(String text)"
		},
		{
			"forge": "stringWidth(String arg0)",
			"fabric": "getWidth(String text)"
		},
		{
			"forge": "stringWidth(FormattedText arg0)",
			"fabric": "getWidth(StringVisitable text)"
		},
		{
			"forge": "stringWidth(FormattedCharSequence arg0)",
			"fabric": "getWidth(OrderedText text)"
		},
		{
			"forge": "plainIndexAtWidth(String arg0, int arg1, Style arg2)",
			"fabric": "getTrimmedLength(String text, int maxWidth, Style style)"
		},
		{
			"forge": "plainHeadByWidth(String arg0, int arg1, Style arg2)",
			"fabric": "trimToWidth(String text, int maxWidth, Style style)"
		},
		{
			"forge": "plainTailByWidth(String arg0, int arg1, Style arg2)",
			"fabric": "trimToWidthBackwards(String text, int maxWidth, Style style)"
		},
		{
			"forge": "formattedIndexByWidth(String arg0, int arg1, Style arg2)",
			"fabric": "getLimitedStringLength(String text, int maxWidth, Style style)"
		},
		{
			"forge": "componentStyleAtWidth(FormattedText arg0, int arg1)",
			"fabric": "getStyleAt(StringVisitable text, int x)"
		},
		{
			"forge": "componentStyleAtWidth(FormattedCharSequence arg0, int arg1)",
			"fabric": "getStyleAt(OrderedText text, int x)"
		},
		{
			"forge": "formattedHeadByWidth(String arg0, int arg1, Style arg2)",
			"fabric": "limitString(String text, int maxWidth, Style style)"
		},
		{
			"forge": "headByWidth(FormattedText arg0, int arg1, Style arg2)",
			"fabric": "trimToWidth(StringVisitable text, int width, Style style)"
		},
		{
			"forge": "findLineBreak(String arg0, int arg1, Style arg2)",
			"fabric": "getEndingIndex(String text, int maxWidth, Style style)"
		},
		{
			"forge": "getWordPosition(String arg0, int arg1, int arg2, boolean arg3)",
			"fabric": "moveCursorByWords(String text, int offset, int cursor, boolean consumeSpaceOrBreak)"
		},
		{
			"forge": "splitLines(String arg0, int arg1, Style arg2, boolean arg3, StringSplitter$LinePosConsumer arg4)",
			"fabric": "wrapLines(String text, int maxWidth, Style style, boolean retainTrailingWordSplit, TextHandler$LineWrappingConsumer consumer)"
		},
		{
			"forge": "splitLines(String arg0, int arg1, Style arg2)",
			"fabric": "wrapLines(String text, int maxWidth, Style style)"
		},
		{
			"forge": "splitLines(FormattedText arg0, int arg1, Style arg2)",
			"fabric": "wrapLines(StringVisitable text, int maxWidth, Style style)"
		},
		{
			"forge": "splitLines(FormattedText arg0, int arg1, Style arg2, FormattedText arg3)",
			"fabric": "wrapLines(StringVisitable text, int maxWidth, Style style, StringVisitable wrappedLinePrefix)"
		},
		{
			"forge": "splitLines(FormattedText arg0, int arg1, Style arg2, BiConsumer<FormattedText, Boolean> arg3)",
			"fabric": "wrapLines(StringVisitable text, int maxWidth, Style style, BiConsumer<StringVisitable, Boolean> lineConsumer)"
		}
	]
}