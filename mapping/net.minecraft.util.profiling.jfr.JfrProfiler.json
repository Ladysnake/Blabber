{
	"title": "net.minecraft.util.profiling.jfr.JfrProfiler",
	"items": [
		{
			"forge": "net.minecraft.util.profiling.jfr.JfrProfiler",
			"fabric": "net.minecraft.util.profiling.jfr.JfrProfiler"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "ROOT_CATEGORY",
			"fabric": "MINECRAFT"
		},
		{
			"forge": "WORLD_GEN_CATEGORY",
			"fabric": "WORLD_GENERATION"
		},
		{
			"forge": "TICK_CATEGORY",
			"fabric": "TICKING"
		},
		{
			"forge": "NETWORK_CATEGORY",
			"fabric": "NETWORK"
		},
		{
			"forge": "CUSTOM_EVENTS",
			"fabric": "EVENTS"
		},
		{
			"forge": "FLIGHT_RECORDER_CONFIG",
			"fabric": "CONFIG_PATH"
		},
		{
			"forge": "DATE_TIME_FORMATTER",
			"fabric": "DATE_TIME_FORMAT"
		},
		{
			"forge": "INSTANCE",
			"fabric": "INSTANCE"
		},
		{
			"forge": "recording",
			"fabric": "currentRecording"
		},
		{
			"forge": "currentAverageTickTime",
			"fabric": "tickTime"
		},
		{
			"forge": "networkTrafficByAddress",
			"fabric": "summaryRecorderByAddress"
		},
		{
			"forge": "getInstance()",
			"fabric": "getInstance()"
		},
		{
			"forge": "getInstance()",
			"fabric": "getInstance()"
		},
		{
			"forge": "start(Environment arg0)",
			"fabric": "start(InstanceType arg0)"
		},
		{
			"forge": "stop()",
			"fabric": "stop()"
		},
		{
			"forge": "isRunning()",
			"fabric": "isProfiling()"
		},
		{
			"forge": "isAvailable()",
			"fabric": "isAvailable()"
		},
		{
			"forge": "start(Reader arg0, Environment arg1)",
			"fabric": "start(Reader reader, InstanceType instanceType)"
		},
		{
			"forge": "setupSummaryListener()",
			"fabric": "addListener()"
		},
		{
			"forge": "onServerTick(float arg0)",
			"fabric": "onTick(float arg0)"
		},
		{
			"forge": "onPacketReceived(int arg0, int arg1, SocketAddress arg2, int arg3)",
			"fabric": "onPacketReceived(int arg0, int arg1, SocketAddress arg2, int arg3)"
		},
		{
			"forge": "onPacketSent(int arg0, int arg1, SocketAddress arg2, int arg3)",
			"fabric": "onPacketSent(int arg0, int arg1, SocketAddress arg2, int arg3)"
		},
		{
			"forge": "networkStatFor(SocketAddress arg0)",
			"fabric": "getOrCreateSummaryRecorder(SocketAddress address)"
		},
		{
			"forge": "onWorldLoadedStarted()",
			"fabric": "startWorldLoadProfiling()"
		},
		{
			"forge": "onChunkGenerate(ChunkPos arg0, ResourceKey<Level> arg1, String arg2)",
			"fabric": "startChunkGenerationProfiling(ChunkPos arg0, RegistryKey<World> arg1, String arg2)"
		}
	]
}