{
	"title": "net.minecraft.world.entity.ai.behavior.InteractWithDoor",
	"items": [
		{
			"forge": "net.minecraft.world.entity.ai.behavior.InteractWithDoor",
			"fabric": "net.minecraft.entity.ai.brain.task.OpenDoorsTask"
		},
		{
			"forge": "COOLDOWN_BEFORE_RERUNNING_IN_SAME_NODE",
			"fabric": "RUN_TIME"
		},
		{
			"forge": "COOLDOWN_BEFORE_RERUNNING_IN_SAME_NODE",
			"fabric": "RUN_TIME"
		},
		{
			"forge": "SKIP_CLOSING_DOOR_IF_FURTHER_AWAY_THAN",
			"fabric": "PATHING_DISTANCE"
		},
		{
			"forge": "MAX_DISTANCE_TO_HOLD_DOOR_OPEN_FOR_OTHER_MOBS",
			"fabric": "REACH_DISTANCE"
		},
		{
			"forge": "create()",
			"fabric": "create()"
		},
		{
			"forge": "create()",
			"fabric": "create()"
		},
		{
			"forge": "closeDoorsThatIHaveOpenedOrPassedThrough(ServerLevel arg0, LivingEntity arg1, Node arg2, Node arg3, Set<GlobalPos> arg4, Optional<List<LivingEntity>> arg5)",
			"fabric": "pathToDoor(ServerWorld world, LivingEntity entity, PathNode lastNode, PathNode currentNode, Set<GlobalPos> doors, Optional<List<LivingEntity>> otherMobs)"
		},
		{
			"forge": "areOtherMobsComingThroughDoor(LivingEntity arg0, BlockPos arg1, Optional<List<LivingEntity>> arg2)",
			"fabric": "hasOtherMobReachedDoor(LivingEntity entity, BlockPos pos, Optional<List<LivingEntity>> otherMobs)"
		},
		{
			"forge": "isMobComingThroughDoor(Brain<?> arg0, BlockPos arg1)",
			"fabric": "hasReached(Brain<?> brain, BlockPos pos)"
		},
		{
			"forge": "isDoorTooFarAway(ServerLevel arg0, LivingEntity arg1, GlobalPos arg2)",
			"fabric": "cannotReachDoor(ServerWorld world, LivingEntity entity, GlobalPos doorPos)"
		},
		{
			"forge": "rememberDoorToClose(MemoryAccessor<com.mojang.datafixers.kinds.OptionalBox$Mu, Set<GlobalPos>> arg0, Optional<Set<GlobalPos>> arg1, ServerLevel arg2, BlockPos arg3)",
			"fabric": "storePos(MemoryQueryResult<com.mojang.datafixers.kinds.OptionalBox$Mu, Set<GlobalPos>> queryResult, Optional<Set<GlobalPos>> doors, ServerWorld world, BlockPos pos)"
		}
	]
}