{
	"title": "net.minecraft.server.commands.ScoreboardCommand",
	"items": [
		{
			"forge": "net.minecraft.server.commands.ScoreboardCommand",
			"fabric": "net.minecraft.server.command.ScoreboardCommand"
		},
		{
			"forge": "ERROR_OBJECTIVE_ALREADY_EXISTS",
			"fabric": "OBJECTIVES_ADD_DUPLICATE_EXCEPTION"
		},
		{
			"forge": "ERROR_OBJECTIVE_ALREADY_EXISTS",
			"fabric": "OBJECTIVES_ADD_DUPLICATE_EXCEPTION"
		},
		{
			"forge": "ERROR_DISPLAY_SLOT_ALREADY_EMPTY",
			"fabric": "OBJECTIVES_DISPLAY_ALREADY_EMPTY_EXCEPTION"
		},
		{
			"forge": "ERROR_DISPLAY_SLOT_ALREADY_SET",
			"fabric": "OBJECTIVES_DISPLAY_ALREADY_SET_EXCEPTION"
		},
		{
			"forge": "ERROR_TRIGGER_ALREADY_ENABLED",
			"fabric": "PLAYERS_ENABLE_FAILED_EXCEPTION"
		},
		{
			"forge": "ERROR_NOT_TRIGGER",
			"fabric": "PLAYERS_ENABLE_INVALID_EXCEPTION"
		},
		{
			"forge": "ERROR_NO_VALUE",
			"fabric": "PLAYERS_GET_NULL_EXCEPTION"
		},
		{
			"forge": "register(com.mojang.brigadier.CommandDispatcher<CommandSourceStack> arg0)",
			"fabric": "register(com.mojang.brigadier.CommandDispatcher<ServerCommandSource> dispatcher)"
		},
		{
			"forge": "register(com.mojang.brigadier.CommandDispatcher<CommandSourceStack> arg0)",
			"fabric": "register(com.mojang.brigadier.CommandDispatcher<ServerCommandSource> dispatcher)"
		},
		{
			"forge": "createRenderTypeModify()",
			"fabric": "makeRenderTypeArguments()"
		},
		{
			"forge": "suggestTriggers(CommandSourceStack arg0, Collection<String> arg1, com.mojang.brigadier.suggestion.SuggestionsBuilder arg2)",
			"fabric": "suggestDisabled(ServerCommandSource source, Collection<String> targets, com.mojang.brigadier.suggestion.SuggestionsBuilder builder)"
		},
		{
			"forge": "getScore(CommandSourceStack arg0, String arg1, Objective arg2)",
			"fabric": "executeGet(ServerCommandSource source, String target, ScoreboardObjective objective)"
		},
		{
			"forge": "performOperation(CommandSourceStack arg0, Collection<String> arg1, Objective arg2, OperationArgument$Operation arg3, Collection<String> arg4, Objective arg5)",
			"fabric": "executeOperation(ServerCommandSource source, Collection<String> targets, ScoreboardObjective targetObjective, OperationArgumentType$Operation operation, Collection<String> sources, ScoreboardObjective sourceObjectives)"
		},
		{
			"forge": "enableTrigger(CommandSourceStack arg0, Collection<String> arg1, Objective arg2)",
			"fabric": "executeEnable(ServerCommandSource source, Collection<String> targets, ScoreboardObjective objective)"
		},
		{
			"forge": "resetScores(CommandSourceStack arg0, Collection<String> arg1)",
			"fabric": "executeReset(ServerCommandSource source, Collection<String> targets)"
		},
		{
			"forge": "resetScore(CommandSourceStack arg0, Collection<String> arg1, Objective arg2)",
			"fabric": "executeReset(ServerCommandSource source, Collection<String> targets, ScoreboardObjective objective)"
		},
		{
			"forge": "setScore(CommandSourceStack arg0, Collection<String> arg1, Objective arg2, int arg3)",
			"fabric": "executeSet(ServerCommandSource source, Collection<String> targets, ScoreboardObjective objective, int score)"
		},
		{
			"forge": "addScore(CommandSourceStack arg0, Collection<String> arg1, Objective arg2, int arg3)",
			"fabric": "executeAdd(ServerCommandSource source, Collection<String> targets, ScoreboardObjective objective, int score)"
		},
		{
			"forge": "removeScore(CommandSourceStack arg0, Collection<String> arg1, Objective arg2, int arg3)",
			"fabric": "executeRemove(ServerCommandSource source, Collection<String> targets, ScoreboardObjective objective, int score)"
		},
		{
			"forge": "listTrackedPlayers(CommandSourceStack arg0)",
			"fabric": "executeListPlayers(ServerCommandSource source)"
		},
		{
			"forge": "listTrackedPlayerScores(CommandSourceStack arg0, String arg1)",
			"fabric": "executeListScores(ServerCommandSource source, String target)"
		},
		{
			"forge": "clearDisplaySlot(CommandSourceStack arg0, int arg1)",
			"fabric": "executeClearDisplay(ServerCommandSource source, int slot)"
		},
		{
			"forge": "setDisplaySlot(CommandSourceStack arg0, int arg1, Objective arg2)",
			"fabric": "executeSetDisplay(ServerCommandSource source, int slot, ScoreboardObjective objective)"
		},
		{
			"forge": "setDisplayName(CommandSourceStack arg0, Objective arg1, Component arg2)",
			"fabric": "executeModifyObjective(ServerCommandSource source, ScoreboardObjective objective, Text displayName)"
		},
		{
			"forge": "setRenderType(CommandSourceStack arg0, Objective arg1, ObjectiveCriteria$RenderType arg2)",
			"fabric": "executeModifyRenderType(ServerCommandSource source, ScoreboardObjective objective, ScoreboardCriterion$RenderType type)"
		},
		{
			"forge": "removeObjective(CommandSourceStack arg0, Objective arg1)",
			"fabric": "executeRemoveObjective(ServerCommandSource source, ScoreboardObjective objective)"
		},
		{
			"forge": "addObjective(CommandSourceStack arg0, String arg1, ObjectiveCriteria arg2, Component arg3)",
			"fabric": "executeAddObjective(ServerCommandSource source, String objective, ScoreboardCriterion criteria, Text displayName)"
		},
		{
			"forge": "listObjectives(CommandSourceStack arg0)",
			"fabric": "executeListObjectives(ServerCommandSource source)"
		}
	]
}