{
	"title": "net.minecraft.world.entity.vehicle.DismountHelper",
	"items": [
		{
			"forge": "net.minecraft.world.entity.vehicle.DismountHelper",
			"fabric": "net.minecraft.entity.Dismounting"
		},
		{
			"forge": "offsetsForDirection(Direction arg0)",
			"fabric": "getDismountOffsets(Direction movementDirection)"
		},
		{
			"forge": "offsetsForDirection(Direction arg0)",
			"fabric": "getDismountOffsets(Direction movementDirection)"
		},
		{
			"forge": "isBlockFloorValid(double arg0)",
			"fabric": "canDismountInBlock(double height)"
		},
		{
			"forge": "canDismountTo(CollisionGetter arg0, LivingEntity arg1, AABB arg2)",
			"fabric": "canPlaceEntityAt(CollisionView world, LivingEntity entity, Box targetBox)"
		},
		{
			"forge": "canDismountTo(CollisionGetter arg0, Vec3 arg1, LivingEntity arg2, Pose arg3)",
			"fabric": "canPlaceEntityAt(CollisionView world, Vec3d offset, LivingEntity entity, EntityPose pose)"
		},
		{
			"forge": "nonClimbableShape(BlockGetter arg0, BlockPos arg1)",
			"fabric": "getCollisionShape(BlockView world, BlockPos pos)"
		},
		{
			"forge": "findCeilingFrom(BlockPos arg0, int arg1, Function<BlockPos, VoxelShape> arg2)",
			"fabric": "getCeilingHeight(BlockPos pos, int maxDistance, Function<BlockPos, VoxelShape> collisionShapeGetter)"
		},
		{
			"forge": "findSafeDismountLocation(EntityType<?> arg0, CollisionGetter arg1, BlockPos arg2, boolean arg3)",
			"fabric": "findRespawnPos(EntityType<?> entityType, CollisionView world, BlockPos pos, boolean ignoreInvalidPos)"
		}
	]
}