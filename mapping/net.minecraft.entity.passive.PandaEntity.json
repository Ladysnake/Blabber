{
	"title": "net.minecraft.world.entity.animal.Panda",
	"items": [
		{
			"forge": "net.minecraft.world.entity.animal.Panda",
			"fabric": "net.minecraft.entity.passive.PandaEntity"
		},
		{
			"forge": "UNHAPPY_COUNTER",
			"fabric": "ASK_FOR_BAMBOO_TICKS"
		},
		{
			"forge": "UNHAPPY_COUNTER",
			"fabric": "ASK_FOR_BAMBOO_TICKS"
		},
		{
			"forge": "SNEEZE_COUNTER",
			"fabric": "SNEEZE_PROGRESS"
		},
		{
			"forge": "EAT_COUNTER",
			"fabric": "EATING_TICKS"
		},
		{
			"forge": "MAIN_GENE_ID",
			"fabric": "MAIN_GENE"
		},
		{
			"forge": "HIDDEN_GENE_ID",
			"fabric": "HIDDEN_GENE"
		},
		{
			"forge": "DATA_ID_FLAGS",
			"fabric": "PANDA_FLAGS"
		},
		{
			"forge": "BREED_TARGETING",
			"fabric": "ASK_FOR_BAMBOO_TARGET"
		},
		{
			"forge": "FLAG_SNEEZE",
			"fabric": "SNEEZING_FLAG"
		},
		{
			"forge": "FLAG_ROLL",
			"fabric": "PLAYING_FLAG"
		},
		{
			"forge": "FLAG_SIT",
			"fabric": "SITTING_FLAG"
		},
		{
			"forge": "FLAG_ON_BACK",
			"fabric": "LYING_ON_BACK_FLAG"
		},
		{
			"forge": "EAT_TICK_INTERVAL",
			"fabric": "EATING_ANIMATION_INTERVAL"
		},
		{
			"forge": "TOTAL_ROLL_STEPS",
			"fabric": "MAIN_GENE_MUTATION_CHANCE"
		},
		{
			"forge": "TOTAL_UNHAPPY_TIME",
			"fabric": "HIDDEN_GENE_MUTATION_CHANCE"
		},
		{
			"forge": "gotBamboo",
			"fabric": "shouldGetRevenge"
		},
		{
			"forge": "didBite",
			"fabric": "shouldAttack"
		},
		{
			"forge": "rollCounter",
			"fabric": "playingTicks"
		},
		{
			"forge": "rollDelta",
			"fabric": "playingJump"
		},
		{
			"forge": "sitAmount",
			"fabric": "sittingAnimationProgress"
		},
		{
			"forge": "sitAmountO",
			"fabric": "lastSittingAnimationProgress"
		},
		{
			"forge": "onBackAmount",
			"fabric": "lieOnBackAnimationProgress"
		},
		{
			"forge": "onBackAmountO",
			"fabric": "lastLieOnBackAnimationProgress"
		},
		{
			"forge": "rollAmount",
			"fabric": "rollOverAnimationProgress"
		},
		{
			"forge": "rollAmountO",
			"fabric": "lastRollOverAnimationProgress"
		},
		{
			"forge": "lookAtPlayerGoal",
			"fabric": "lookAtPlayerGoal"
		},
		{
			"forge": "PANDA_ITEMS",
			"fabric": "IS_FOOD"
		},
		{
			"forge": "canTakeItem(ItemStack arg0)",
			"fabric": "canEquip(ItemStack arg0)"
		},
		{
			"forge": "canTakeItem(ItemStack arg0)",
			"fabric": "canEquip(ItemStack arg0)"
		},
		{
			"forge": "getUnhappyCounter()",
			"fabric": "getAskForBambooTicks()"
		},
		{
			"forge": "setUnhappyCounter(int arg0)",
			"fabric": "setAskForBambooTicks(int askForBambooTicks)"
		},
		{
			"forge": "isSneezing()",
			"fabric": "isSneezing()"
		},
		{
			"forge": "isSitting()",
			"fabric": "isSitting()"
		},
		{
			"forge": "sit(boolean arg0)",
			"fabric": "setSitting(boolean sitting)"
		},
		{
			"forge": "isOnBack()",
			"fabric": "isLyingOnBack()"
		},
		{
			"forge": "setOnBack(boolean arg0)",
			"fabric": "setLyingOnBack(boolean lyingOnBack)"
		},
		{
			"forge": "isEating()",
			"fabric": "isEating()"
		},
		{
			"forge": "eat(boolean arg0)",
			"fabric": "setEating(boolean eating)"
		},
		{
			"forge": "getEatCounter()",
			"fabric": "getEatingTicks()"
		},
		{
			"forge": "setEatCounter(int arg0)",
			"fabric": "setEatingTicks(int eatingTicks)"
		},
		{
			"forge": "sneeze(boolean arg0)",
			"fabric": "setSneezing(boolean sneezing)"
		},
		{
			"forge": "getSneezeCounter()",
			"fabric": "getSneezeProgress()"
		},
		{
			"forge": "setSneezeCounter(int arg0)",
			"fabric": "setSneezeProgress(int sneezeProgress)"
		},
		{
			"forge": "getMainGene()",
			"fabric": "getMainGene()"
		},
		{
			"forge": "setMainGene(Panda$Gene arg0)",
			"fabric": "setMainGene(PandaEntity$Gene gene)"
		},
		{
			"forge": "getHiddenGene()",
			"fabric": "getHiddenGene()"
		},
		{
			"forge": "setHiddenGene(Panda$Gene arg0)",
			"fabric": "setHiddenGene(PandaEntity$Gene gene)"
		},
		{
			"forge": "isRolling()",
			"fabric": "isPlaying()"
		},
		{
			"forge": "roll(boolean arg0)",
			"fabric": "setPlaying(boolean playing)"
		},
		{
			"forge": "defineSynchedData()",
			"fabric": "initDataTracker()"
		},
		{
			"forge": "getFlag(int arg0)",
			"fabric": "hasPandaFlag(int bitmask)"
		},
		{
			"forge": "setFlag(int arg0, boolean arg1)",
			"fabric": "setPandaFlag(int mask, boolean value)"
		},
		{
			"forge": "addAdditionalSaveData(CompoundTag arg0)",
			"fabric": "writeCustomDataToNbt(NbtCompound arg0)"
		},
		{
			"forge": "readAdditionalSaveData(CompoundTag arg0)",
			"fabric": "readCustomDataFromNbt(NbtCompound arg0)"
		},
		{
			"forge": "getBreedOffspring(ServerLevel arg0, AgeableMob arg1)",
			"fabric": "createChild(ServerWorld arg0, PassiveEntity arg1)"
		},
		{
			"forge": "registerGoals()",
			"fabric": "initGoals()"
		},
		{
			"forge": "createAttributes()",
			"fabric": "createPandaAttributes()"
		},
		{
			"forge": "getVariant()",
			"fabric": "getProductGene()"
		},
		{
			"forge": "isLazy()",
			"fabric": "isLazy()"
		},
		{
			"forge": "isWorried()",
			"fabric": "isWorried()"
		},
		{
			"forge": "isPlayful()",
			"fabric": "isPlayful()"
		},
		{
			"forge": "isBrown()",
			"fabric": "isBrown()"
		},
		{
			"forge": "isWeak()",
			"fabric": "isWeak()"
		},
		{
			"forge": "isAggressive()",
			"fabric": "isAttacking()"
		},
		{
			"forge": "canBeLeashed(Player arg0)",
			"fabric": "canBeLeashedBy(PlayerEntity arg0)"
		},
		{
			"forge": "doHurtTarget(Entity arg0)",
			"fabric": "tryAttack(Entity arg0)"
		},
		{
			"forge": "tick()",
			"fabric": "tick()"
		},
		{
			"forge": "isScared()",
			"fabric": "isScaredByThunderstorm()"
		},
		{
			"forge": "handleEating()",
			"fabric": "updateEatingAnimation()"
		},
		{
			"forge": "addEatingParticles()",
			"fabric": "playEatingAnimation()"
		},
		{
			"forge": "updateSitAmount()",
			"fabric": "updateSittingAnimation()"
		},
		{
			"forge": "updateOnBackAnimation()",
			"fabric": "updateLieOnBackAnimation()"
		},
		{
			"forge": "updateRollAmount()",
			"fabric": "updateRollOverAnimation()"
		},
		{
			"forge": "getSitAmount(float arg0)",
			"fabric": "getSittingAnimationProgress(float tickDelta)"
		},
		{
			"forge": "getLieOnBackAmount(float arg0)",
			"fabric": "getLieOnBackAnimationProgress(float tickDelta)"
		},
		{
			"forge": "getRollAmount(float arg0)",
			"fabric": "getRollOverAnimationProgress(float tickDelta)"
		},
		{
			"forge": "handleRoll()",
			"fabric": "updatePlaying()"
		},
		{
			"forge": "afterSneeze()",
			"fabric": "sneeze()"
		},
		{
			"forge": "pickUpItem(ItemEntity arg0)",
			"fabric": "loot(ItemEntity arg0)"
		},
		{
			"forge": "hurt(DamageSource arg0, float arg1)",
			"fabric": "damage(DamageSource arg0, float arg1)"
		},
		{
			"forge": "finalizeSpawn(ServerLevelAccessor arg0, DifficultyInstance arg1, MobSpawnType arg2, SpawnGroupData arg3, CompoundTag arg4)",
			"fabric": "initialize(ServerWorldAccess arg0, LocalDifficulty arg1, SpawnReason arg2, EntityData arg3, NbtCompound arg4)"
		},
		{
			"forge": "setGeneFromParents(Panda arg0, Panda arg1)",
			"fabric": "initGenes(PandaEntity mother, PandaEntity father)"
		},
		{
			"forge": "getOneOfGenesRandomly()",
			"fabric": "getRandomGene()"
		},
		{
			"forge": "setAttributes()",
			"fabric": "resetAttributes()"
		},
		{
			"forge": "tryToSit()",
			"fabric": "stop()"
		},
		{
			"forge": "mobInteract(Player arg0, InteractionHand arg1)",
			"fabric": "interactMob(PlayerEntity arg0, Hand arg1)"
		},
		{
			"forge": "getAmbientSound()",
			"fabric": "getAmbientSound()"
		},
		{
			"forge": "playStepSound(BlockPos arg0, BlockState arg1)",
			"fabric": "playStepSound(BlockPos arg0, BlockState arg1)"
		},
		{
			"forge": "isFood(ItemStack arg0)",
			"fabric": "isBreedingItem(ItemStack arg0)"
		},
		{
			"forge": "isFoodOrCake(ItemStack arg0)",
			"fabric": "canEat(ItemStack stack)"
		},
		{
			"forge": "getDeathSound()",
			"fabric": "getDeathSound()"
		},
		{
			"forge": "getHurtSound(DamageSource arg0)",
			"fabric": "getHurtSound(DamageSource arg0)"
		},
		{
			"forge": "canPerformAction()",
			"fabric": "isIdle()"
		}
	]
}