{
	"title": "net.minecraft.core.HolderSet",
	"items": [
		{
			"forge": "net.minecraft.core.HolderSet",
			"fabric": "net.minecraft.registry.entry.RegistryEntryList"
		},
		{
			"forge": "stream()",
			"fabric": "stream()"
		},
		{
			"forge": "stream()",
			"fabric": "stream()"
		},
		{
			"forge": "size()",
			"fabric": "size()"
		},
		{
			"forge": "unwrap()",
			"fabric": "getStorage()"
		},
		{
			"forge": "getRandomElement(RandomSource arg0)",
			"fabric": "getRandom(Random random)"
		},
		{
			"forge": "get(int arg0)",
			"fabric": "get(int index)"
		},
		{
			"forge": "contains(Holder<T> arg0)",
			"fabric": "contains(RegistryEntry<T> entry)"
		},
		{
			"forge": "canSerializeIn(HolderOwner<T> arg0)",
			"fabric": "ownerEquals(RegistryEntryOwner<T> owner)"
		},
		{
			"forge": "unwrapKey()",
			"fabric": "getTagKey()"
		},
		{
			"forge": "emptyNamed(HolderOwner<T> arg0, TagKey<T> arg1)",
			"fabric": "of(RegistryEntryOwner<T> owner, TagKey<T> tagKey)"
		},
		{
			"forge": "direct(Holder<T>... arg0)",
			"fabric": "of(RegistryEntry<T>... entries)"
		},
		{
			"forge": "direct(List<? extends Holder<T>> arg0)",
			"fabric": "of(List<? extends RegistryEntry<T>> entries)"
		},
		{
			"forge": "direct(Function<E, Holder<T>> arg0, E... arg1)",
			"fabric": "of(Function<E, RegistryEntry<T>> mapper, E... values)"
		},
		{
			"forge": "direct(Function<E, Holder<T>> arg0, List<E> arg1)",
			"fabric": "of(Function<E, RegistryEntry<T>> mapper, List<E> values)"
		}
	]
}