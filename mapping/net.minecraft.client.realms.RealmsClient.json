{
	"title": "com.mojang.realmsclient.client.RealmsClient",
	"items": [
		{
			"forge": "com.mojang.realmsclient.client.RealmsClient",
			"fabric": "net.minecraft.client.realms.RealmsClient"
		},
		{
			"forge": "currentEnvironment",
			"fabric": "currentEnvironment"
		},
		{
			"forge": "currentEnvironment",
			"fabric": "currentEnvironment"
		},
		{
			"forge": "initialized",
			"fabric": "initialized"
		},
		{
			"forge": "LOGGER",
			"fabric": "LOGGER"
		},
		{
			"forge": "sessionId",
			"fabric": "sessionId"
		},
		{
			"forge": "username",
			"fabric": "username"
		},
		{
			"forge": "minecraft",
			"fabric": "client"
		},
		{
			"forge": "WORLDS_RESOURCE_PATH",
			"fabric": "WORLDS_ENDPOINT"
		},
		{
			"forge": "INVITES_RESOURCE_PATH",
			"fabric": "INVITES_ENDPOINT"
		},
		{
			"forge": "MCO_RESOURCE_PATH",
			"fabric": "MCO_ENDPOINT"
		},
		{
			"forge": "SUBSCRIPTION_RESOURCE",
			"fabric": "SUBSCRIPTIONS_ENDPOINT"
		},
		{
			"forge": "ACTIVITIES_RESOURCE",
			"fabric": "ACTIVITIES_ENDPOINT"
		},
		{
			"forge": "OPS_RESOURCE",
			"fabric": "OPS_ENDPOINT"
		},
		{
			"forge": "REGIONS_RESOURCE",
			"fabric": "PING_STAT_ENDPOINT"
		},
		{
			"forge": "TRIALS_RESOURCE",
			"fabric": "TRIAL_ENDPOINT"
		},
		{
			"forge": "NOTIFICATIONS_RESOURCE",
			"fabric": "NOTIFICATIONS_ENDPOINT"
		},
		{
			"forge": "PATH_INITIALIZE",
			"fabric": "WORLD_INITIALIZE_ENDPOINT"
		},
		{
			"forge": "PATH_GET_ACTIVTIES",
			"fabric": "WORLD_ENDPOINT"
		},
		{
			"forge": "PATH_GET_LIVESTATS",
			"fabric": "LIVEPLAYERLIST_ENDPOINT"
		},
		{
			"forge": "PATH_GET_SUBSCRIPTION",
			"fabric": "WORLD_ENDPOINT_2"
		},
		{
			"forge": "PATH_OP",
			"fabric": "WORLD_PROFILE_ENDPOINT"
		},
		{
			"forge": "PATH_PUT_INTO_MINIGAMES_MODE",
			"fabric": "MINIGAMES_ENDPOINT"
		},
		{
			"forge": "PATH_AVAILABLE",
			"fabric": "AVAILABLE_ENDPOINT"
		},
		{
			"forge": "PATH_TEMPLATES",
			"fabric": "TEMPLATES_ENDPOINT"
		},
		{
			"forge": "PATH_WORLD_JOIN",
			"fabric": "JOIN_PC_ENDPOINT"
		},
		{
			"forge": "PATH_WORLD_GET",
			"fabric": "ID_ENDPOINT"
		},
		{
			"forge": "PATH_WORLD_INVITES",
			"fabric": "WORLD_ENDPOINT_3"
		},
		{
			"forge": "PATH_WORLD_UNINVITE",
			"fabric": "INVITE_ENDPOINT"
		},
		{
			"forge": "PATH_PENDING_INVITES_COUNT",
			"fabric": "COUNT_PENDING_ENDPOINT"
		},
		{
			"forge": "PATH_PENDING_INVITES",
			"fabric": "PENDING_ENDPOINT"
		},
		{
			"forge": "PATH_ACCEPT_INVITE",
			"fabric": "ACCEPT_INVITATION_ENDPOINT"
		},
		{
			"forge": "PATH_REJECT_INVITE",
			"fabric": "REJECT_INVITATION_ENDPOINT"
		},
		{
			"forge": "PATH_UNINVITE_MYSELF",
			"fabric": "WORLD_ENDPOINT_4"
		},
		{
			"forge": "PATH_WORLD_UPDATE",
			"fabric": "WORLD_ENDPOINT_5"
		},
		{
			"forge": "PATH_SLOT",
			"fabric": "WORLD_SLOT_ENDPOINT"
		},
		{
			"forge": "PATH_WORLD_OPEN",
			"fabric": "WORLD_OPEN_ENDPOINT"
		},
		{
			"forge": "PATH_WORLD_CLOSE",
			"fabric": "WORLD_CLOSE_ENDPOINT"
		},
		{
			"forge": "PATH_WORLD_RESET",
			"fabric": "WORLD_RESET_ENDPOINT"
		},
		{
			"forge": "PATH_DELETE_WORLD",
			"fabric": "WORLD_ENDPOINT_6"
		},
		{
			"forge": "PATH_WORLD_BACKUPS",
			"fabric": "WORLD_BACKUPS_ENDPOINT"
		},
		{
			"forge": "PATH_WORLD_DOWNLOAD",
			"fabric": "WORLD_SLOT_DOWNLOAD_ENDPOINT"
		},
		{
			"forge": "PATH_WORLD_UPLOAD",
			"fabric": "WORLD_BACKUPS_UPLOAD_ENDPOINT"
		},
		{
			"forge": "PATH_CLIENT_COMPATIBLE",
			"fabric": "CLIENT_COMPATIBLE_ENDPOINT"
		},
		{
			"forge": "PATH_TOS_AGREED",
			"fabric": "TOS_AGREED_ENDPOINT"
		},
		{
			"forge": "PATH_NEWS",
			"fabric": "NEWS_ENDPOINT"
		},
		{
			"forge": "PATH_MARK_NOTIFICATIONS_SEEN",
			"fabric": "SEEN_ENDPOINT"
		},
		{
			"forge": "PATH_DISMISS_NOTIFICATIONS",
			"fabric": "DISMISS_ENDPOINT"
		},
		{
			"forge": "PATH_STAGE_AVAILABLE",
			"fabric": "STAGE_AVAILABLE_ENDPOINT"
		},
		{
			"forge": "GSON",
			"fabric": "JSON"
		},
		{
			"forge": "create()",
			"fabric": "create()"
		},
		{
			"forge": "create()",
			"fabric": "create()"
		},
		{
			"forge": "create(Minecraft arg0)",
			"fabric": "createRealmsClient(MinecraftClient client)"
		},
		{
			"forge": "switchToStage()",
			"fabric": "switchToStage()"
		},
		{
			"forge": "switchToProd()",
			"fabric": "switchToProd()"
		},
		{
			"forge": "switchToLocal()",
			"fabric": "switchToLocal()"
		},
		{
			"forge": "listWorlds()",
			"fabric": "listWorlds()"
		},
		{
			"forge": "getNotifications()",
			"fabric": "listNotifications()"
		},
		{
			"forge": "uuidListToJsonArray(List<UUID> arg0)",
			"fabric": "toJsonArray(List<UUID> uuids)"
		},
		{
			"forge": "notificationsSeen(List<UUID> arg0)",
			"fabric": "markNotificationsAsSeen(List<UUID> notifications)"
		},
		{
			"forge": "notificationsDismiss(List<UUID> arg0)",
			"fabric": "dismissNotifications(List<UUID> notifications)"
		},
		{
			"forge": "getOwnWorld(long arg0)",
			"fabric": "getOwnWorld(long worldId)"
		},
		{
			"forge": "getActivity(long arg0)",
			"fabric": "getPlayerActivities(long worldId)"
		},
		{
			"forge": "getLiveStats()",
			"fabric": "getLiveStats()"
		},
		{
			"forge": "join(long arg0)",
			"fabric": "join(long worldId)"
		},
		{
			"forge": "initializeWorld(long arg0, String arg1, String arg2)",
			"fabric": "initializeWorld(long worldId, String name, String motd)"
		},
		{
			"forge": "mcoEnabled()",
			"fabric": "mcoEnabled()"
		},
		{
			"forge": "stageAvailable()",
			"fabric": "stageAvailable()"
		},
		{
			"forge": "clientCompatible()",
			"fabric": "clientCompatible()"
		},
		{
			"forge": "uninvite(long arg0, String arg1)",
			"fabric": "uninvite(long worldId, String profileUuid)"
		},
		{
			"forge": "uninviteMyselfFrom(long arg0)",
			"fabric": "uninviteMyselfFrom(long worldId)"
		},
		{
			"forge": "invite(long arg0, String arg1)",
			"fabric": "invite(long worldId, String profileName)"
		},
		{
			"forge": "backupsFor(long arg0)",
			"fabric": "backupsFor(long worldId)"
		},
		{
			"forge": "update(long arg0, String arg1, String arg2)",
			"fabric": "update(long worldId, String name, String motd)"
		},
		{
			"forge": "updateSlot(long arg0, int arg1, RealmsWorldOptions arg2)",
			"fabric": "updateSlot(long worldId, int slot, RealmsWorldOptions options)"
		},
		{
			"forge": "switchSlot(long arg0, int arg1)",
			"fabric": "switchSlot(long worldId, int slot)"
		},
		{
			"forge": "restoreWorld(long arg0, String arg1)",
			"fabric": "restoreWorld(long worldId, String backupId)"
		},
		{
			"forge": "fetchWorldTemplates(int arg0, int arg1, RealmsServer$WorldType arg2)",
			"fabric": "fetchWorldTemplates(int page, int pageSize, RealmsServer$WorldType type)"
		},
		{
			"forge": "putIntoMinigameMode(long arg0, String arg1)",
			"fabric": "putIntoMinigameMode(long worldId, String minigameId)"
		},
		{
			"forge": "op(long arg0, String arg1)",
			"fabric": "op(long worldId, String profileUuid)"
		},
		{
			"forge": "deop(long arg0, String arg1)",
			"fabric": "deop(long worldId, String profileUuid)"
		},
		{
			"forge": "open(long arg0)",
			"fabric": "open(long worldId)"
		},
		{
			"forge": "close(long arg0)",
			"fabric": "close(long worldId)"
		},
		{
			"forge": "resetWorldWithSeed(long arg0, WorldGenerationInfo arg1)",
			"fabric": "resetWorldWithSeed(long worldId, ResetWorldInfo resetWorldInfo)"
		},
		{
			"forge": "resetWorldWithTemplate(long arg0, String arg1)",
			"fabric": "resetWorldWithTemplate(long worldId, String worldTemplateId)"
		},
		{
			"forge": "subscriptionFor(long arg0)",
			"fabric": "subscriptionFor(long worldId)"
		},
		{
			"forge": "pendingInvitesCount()",
			"fabric": "pendingInvitesCount()"
		},
		{
			"forge": "pendingInvites()",
			"fabric": "pendingInvites()"
		},
		{
			"forge": "isBlocked(PendingInvite arg0)",
			"fabric": "isOwnerBlocked(PendingInvite pendingInvite)"
		},
		{
			"forge": "acceptInvitation(String arg0)",
			"fabric": "acceptInvitation(String invitationId)"
		},
		{
			"forge": "requestDownloadInfo(long arg0, int arg1)",
			"fabric": "download(long worldId, int slotId)"
		},
		{
			"forge": "requestUploadInfo(long arg0, String arg1)",
			"fabric": "upload(long worldId, String token)"
		},
		{
			"forge": "rejectInvitation(String arg0)",
			"fabric": "rejectInvitation(String invitationId)"
		},
		{
			"forge": "agreeToTos()",
			"fabric": "agreeToTos()"
		},
		{
			"forge": "getNews()",
			"fabric": "getNews()"
		},
		{
			"forge": "sendPingResults(PingResult arg0)",
			"fabric": "sendPingResults(PingResult pingResult)"
		},
		{
			"forge": "trialAvailable()",
			"fabric": "trialAvailable()"
		},
		{
			"forge": "deleteWorld(long arg0)",
			"fabric": "deleteWorld(long worldId)"
		},
		{
			"forge": "url(String arg0)",
			"fabric": "url(String path)"
		},
		{
			"forge": "url(String arg0, String arg1)",
			"fabric": "url(String path, String queryString)"
		},
		{
			"forge": "execute(Request<?> arg0)",
			"fabric": "execute(Request<?> r)"
		},
		{
			"forge": "getHttpCodeDescription(int arg0)",
			"fabric": "getErrorMessage(int httpResultCode)"
		}
	]
}