{
	"title": "net.minecraft.world.item.CrossbowItem",
	"items": [
		{
			"forge": "net.minecraft.world.item.CrossbowItem",
			"fabric": "net.minecraft.item.CrossbowItem"
		},
		{
			"forge": "TAG_CHARGED",
			"fabric": "CHARGED_KEY"
		},
		{
			"forge": "TAG_CHARGED",
			"fabric": "CHARGED_KEY"
		},
		{
			"forge": "TAG_CHARGED_PROJECTILES",
			"fabric": "CHARGED_PROJECTILES_KEY"
		},
		{
			"forge": "MAX_CHARGE_DURATION",
			"fabric": "DEFAULT_PULL_TIME"
		},
		{
			"forge": "DEFAULT_RANGE",
			"fabric": "RANGE"
		},
		{
			"forge": "startSoundPlayed",
			"fabric": "charged"
		},
		{
			"forge": "midLoadSoundPlayed",
			"fabric": "loaded"
		},
		{
			"forge": "START_SOUND_PERCENT",
			"fabric": "field_30867"
		},
		{
			"forge": "MID_SOUND_PERCENT",
			"fabric": "field_30868"
		},
		{
			"forge": "ARROW_POWER",
			"fabric": "DEFAULT_SPEED"
		},
		{
			"forge": "FIREWORK_POWER",
			"fabric": "FIREWORK_ROCKET_SPEED"
		},
		{
			"forge": "getSupportedHeldProjectiles()",
			"fabric": "getHeldProjectiles()"
		},
		{
			"forge": "getSupportedHeldProjectiles()",
			"fabric": "getHeldProjectiles()"
		},
		{
			"forge": "getAllSupportedProjectiles()",
			"fabric": "getProjectiles()"
		},
		{
			"forge": "use(Level arg0, Player arg1, InteractionHand arg2)",
			"fabric": "use(World arg0, PlayerEntity arg1, Hand arg2)"
		},
		{
			"forge": "getShootingPower(ItemStack arg0)",
			"fabric": "getSpeed(ItemStack stack)"
		},
		{
			"forge": "releaseUsing(ItemStack arg0, Level arg1, LivingEntity arg2, int arg3)",
			"fabric": "onStoppedUsing(ItemStack arg0, World arg1, LivingEntity arg2, int arg3)"
		},
		{
			"forge": "tryLoadProjectiles(LivingEntity arg0, ItemStack arg1)",
			"fabric": "loadProjectiles(LivingEntity shooter, ItemStack crossbow)"
		},
		{
			"forge": "loadProjectile(LivingEntity arg0, ItemStack arg1, ItemStack arg2, boolean arg3, boolean arg4)",
			"fabric": "loadProjectile(LivingEntity shooter, ItemStack crossbow, ItemStack projectile, boolean simulated, boolean creative)"
		},
		{
			"forge": "isCharged(ItemStack arg0)",
			"fabric": "isCharged(ItemStack stack)"
		},
		{
			"forge": "setCharged(ItemStack arg0, boolean arg1)",
			"fabric": "setCharged(ItemStack stack, boolean charged)"
		},
		{
			"forge": "addChargedProjectile(ItemStack arg0, ItemStack arg1)",
			"fabric": "putProjectile(ItemStack crossbow, ItemStack projectile)"
		},
		{
			"forge": "getChargedProjectiles(ItemStack arg0)",
			"fabric": "getProjectiles(ItemStack crossbow)"
		},
		{
			"forge": "clearChargedProjectiles(ItemStack arg0)",
			"fabric": "clearProjectiles(ItemStack crossbow)"
		},
		{
			"forge": "containsChargedProjectile(ItemStack arg0, Item arg1)",
			"fabric": "hasProjectile(ItemStack crossbow, Item projectile)"
		},
		{
			"forge": "shootProjectile(Level arg0, LivingEntity arg1, InteractionHand arg2, ItemStack arg3, ItemStack arg4, float arg5, boolean arg6, float arg7, float arg8, float arg9)",
			"fabric": "shoot(World world, LivingEntity shooter, Hand hand, ItemStack crossbow, ItemStack projectile, float soundPitch, boolean creative, float speed, float divergence, float simulated)"
		},
		{
			"forge": "getArrow(Level arg0, LivingEntity arg1, ItemStack arg2, ItemStack arg3)",
			"fabric": "createArrow(World world, LivingEntity entity, ItemStack crossbow, ItemStack arrow)"
		},
		{
			"forge": "performShooting(Level arg0, LivingEntity arg1, InteractionHand arg2, ItemStack arg3, float arg4, float arg5)",
			"fabric": "shootAll(World world, LivingEntity entity, Hand hand, ItemStack stack, float speed, float divergence)"
		},
		{
			"forge": "getShotPitches(RandomSource arg0)",
			"fabric": "getSoundPitches(Random random)"
		},
		{
			"forge": "getRandomShotPitch(boolean arg0, RandomSource arg1)",
			"fabric": "getSoundPitch(boolean flag, Random random)"
		},
		{
			"forge": "onCrossbowShot(Level arg0, LivingEntity arg1, ItemStack arg2)",
			"fabric": "postShoot(World world, LivingEntity entity, ItemStack stack)"
		},
		{
			"forge": "onUseTick(Level arg0, LivingEntity arg1, ItemStack arg2, int arg3)",
			"fabric": "usageTick(World arg0, LivingEntity arg1, ItemStack arg2, int arg3)"
		},
		{
			"forge": "getUseDuration(ItemStack arg0)",
			"fabric": "getMaxUseTime(ItemStack arg0)"
		},
		{
			"forge": "getChargeDuration(ItemStack arg0)",
			"fabric": "getPullTime(ItemStack stack)"
		},
		{
			"forge": "getUseAnimation(ItemStack arg0)",
			"fabric": "getUseAction(ItemStack arg0)"
		},
		{
			"forge": "getStartSound(int arg0)",
			"fabric": "getQuickChargeSound(int stage)"
		},
		{
			"forge": "getPowerForTime(int arg0, ItemStack arg1)",
			"fabric": "getPullProgress(int useTicks, ItemStack stack)"
		},
		{
			"forge": "appendHoverText(ItemStack arg0, Level arg1, List<Component> arg2, TooltipFlag arg3)",
			"fabric": "appendTooltip(ItemStack arg0, World arg1, List<Text> arg2, TooltipContext arg3)"
		},
		{
			"forge": "useOnRelease(ItemStack arg0)",
			"fabric": "isUsedOnRelease(ItemStack arg0)"
		},
		{
			"forge": "getDefaultProjectileRange()",
			"fabric": "getRange()"
		}
	]
}