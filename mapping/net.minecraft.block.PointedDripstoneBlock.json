{
	"title": "net.minecraft.world.level.block.PointedDripstoneBlock",
	"items": [
		{
			"forge": "net.minecraft.world.level.block.PointedDripstoneBlock",
			"fabric": "net.minecraft.block.PointedDripstoneBlock"
		},
		{
			"forge": "TIP_DIRECTION",
			"fabric": "VERTICAL_DIRECTION"
		},
		{
			"forge": "TIP_DIRECTION",
			"fabric": "VERTICAL_DIRECTION"
		},
		{
			"forge": "THICKNESS",
			"fabric": "THICKNESS"
		},
		{
			"forge": "WATERLOGGED",
			"fabric": "WATERLOGGED"
		},
		{
			"forge": "MAX_SEARCH_LENGTH_WHEN_CHECKING_DRIP_TYPE",
			"fabric": "field_31205"
		},
		{
			"forge": "DELAY_BEFORE_FALLING",
			"fabric": "field_31207"
		},
		{
			"forge": "DRIP_PROBABILITY_PER_ANIMATE_TICK",
			"fabric": "field_31208"
		},
		{
			"forge": "DRIP_PROBABILITY_PER_ANIMATE_TICK_IF_UNDER_LIQUID_SOURCE",
			"fabric": "field_31209"
		},
		{
			"forge": "MAX_SEARCH_LENGTH_BETWEEN_STALACTITE_TIP_AND_CAULDRON",
			"fabric": "field_31210"
		},
		{
			"forge": "WATER_TRANSFER_PROBABILITY_PER_RANDOM_TICK",
			"fabric": "WATER_DRIP_CHANCE"
		},
		{
			"forge": "LAVA_TRANSFER_PROBABILITY_PER_RANDOM_TICK",
			"fabric": "LAVA_DRIP_CHANCE"
		},
		{
			"forge": "MIN_TRIDENT_VELOCITY_TO_BREAK_DRIPSTONE",
			"fabric": "field_31213"
		},
		{
			"forge": "STALACTITE_DAMAGE_PER_FALL_DISTANCE_AND_SIZE",
			"fabric": "field_31214"
		},
		{
			"forge": "STALACTITE_MAX_DAMAGE",
			"fabric": "field_31215"
		},
		{
			"forge": "MAX_STALACTITE_HEIGHT_FOR_DAMAGE_CALCULATION",
			"fabric": "field_31200"
		},
		{
			"forge": "STALAGMITE_FALL_DISTANCE_OFFSET",
			"fabric": "field_31201"
		},
		{
			"forge": "STALAGMITE_FALL_DAMAGE_MODIFIER",
			"fabric": "field_31202"
		},
		{
			"forge": "AVERAGE_DAYS_PER_GROWTH",
			"fabric": "field_33566"
		},
		{
			"forge": "GROWTH_PROBABILITY_PER_RANDOM_TICK",
			"fabric": "field_33567"
		},
		{
			"forge": "MAX_GROWTH_LENGTH",
			"fabric": "MAX_STALACTITE_GROWTH"
		},
		{
			"forge": "MAX_STALAGMITE_SEARCH_RANGE_WHEN_GROWING",
			"fabric": "STALACTITE_FLOOR_SEARCH_RANGE"
		},
		{
			"forge": "STALACTITE_DRIP_START_PIXEL",
			"fabric": "field_31203"
		},
		{
			"forge": "TIP_MERGE_SHAPE",
			"fabric": "TIP_MERGE_SHAPE"
		},
		{
			"forge": "TIP_SHAPE_UP",
			"fabric": "UP_TIP_SHAPE"
		},
		{
			"forge": "TIP_SHAPE_DOWN",
			"fabric": "DOWN_TIP_SHAPE"
		},
		{
			"forge": "FRUSTUM_SHAPE",
			"fabric": "BASE_SHAPE"
		},
		{
			"forge": "MIDDLE_SHAPE",
			"fabric": "FRUSTUM_SHAPE"
		},
		{
			"forge": "BASE_SHAPE",
			"fabric": "MIDDLE_SHAPE"
		},
		{
			"forge": "MAX_HORIZONTAL_OFFSET",
			"fabric": "field_31204"
		},
		{
			"forge": "REQUIRED_SPACE_TO_DRIP_THROUGH_NON_SOLID_BLOCK",
			"fabric": "DRIP_COLLISION_SHAPE"
		},
		{
			"forge": "createBlockStateDefinition(StateDefinition$Builder<Block, BlockState> arg0)",
			"fabric": "appendProperties(StateManager$Builder<Block, BlockState> arg0)"
		},
		{
			"forge": "createBlockStateDefinition(StateDefinition$Builder<Block, BlockState> arg0)",
			"fabric": "appendProperties(StateManager$Builder<Block, BlockState> arg0)"
		},
		{
			"forge": "canSurvive(BlockState arg0, LevelReader arg1, BlockPos arg2)",
			"fabric": "canPlaceAt(BlockState arg0, WorldView arg1, BlockPos arg2)"
		},
		{
			"forge": "updateShape(BlockState arg0, Direction arg1, BlockState arg2, LevelAccessor arg3, BlockPos arg4, BlockPos arg5)",
			"fabric": "getStateForNeighborUpdate(BlockState arg0, Direction arg1, BlockState arg2, WorldAccess arg3, BlockPos arg4, BlockPos arg5)"
		},
		{
			"forge": "onProjectileHit(Level arg0, BlockState arg1, BlockHitResult arg2, Projectile arg3)",
			"fabric": "onProjectileHit(World arg0, BlockState arg1, BlockHitResult arg2, ProjectileEntity arg3)"
		},
		{
			"forge": "fallOn(Level arg0, BlockState arg1, BlockPos arg2, Entity arg3, float arg4)",
			"fabric": "onLandedUpon(World arg0, BlockState arg1, BlockPos arg2, Entity arg3, float arg4)"
		},
		{
			"forge": "animateTick(BlockState arg0, Level arg1, BlockPos arg2, RandomSource arg3)",
			"fabric": "randomDisplayTick(BlockState arg0, World arg1, BlockPos arg2, Random arg3)"
		},
		{
			"forge": "tick(BlockState arg0, ServerLevel arg1, BlockPos arg2, RandomSource arg3)",
			"fabric": "scheduledTick(BlockState arg0, ServerWorld arg1, BlockPos arg2, Random arg3)"
		},
		{
			"forge": "randomTick(BlockState arg0, ServerLevel arg1, BlockPos arg2, RandomSource arg3)",
			"fabric": "randomTick(BlockState arg0, ServerWorld arg1, BlockPos arg2, Random arg3)"
		},
		{
			"forge": "maybeTransferFluid(BlockState arg0, ServerLevel arg1, BlockPos arg2, float arg3)",
			"fabric": "dripTick(BlockState state, ServerWorld world, BlockPos pos, float dripChance)"
		},
		{
			"forge": "getStateForPlacement(BlockPlaceContext arg0)",
			"fabric": "getPlacementState(ItemPlacementContext arg0)"
		},
		{
			"forge": "getFluidState(BlockState arg0)",
			"fabric": "getFluidState(BlockState arg0)"
		},
		{
			"forge": "getOcclusionShape(BlockState arg0, BlockGetter arg1, BlockPos arg2)",
			"fabric": "getCullingShape(BlockState arg0, BlockView arg1, BlockPos arg2)"
		},
		{
			"forge": "getShape(BlockState arg0, BlockGetter arg1, BlockPos arg2, CollisionContext arg3)",
			"fabric": "getOutlineShape(BlockState arg0, BlockView arg1, BlockPos arg2, ShapeContext arg3)"
		},
		{
			"forge": "isCollisionShapeFullBlock(BlockState arg0, BlockGetter arg1, BlockPos arg2)",
			"fabric": "isShapeFullCube(BlockState arg0, BlockView arg1, BlockPos arg2)"
		},
		{
			"forge": "getMaxHorizontalOffset()",
			"fabric": "getMaxHorizontalModelOffset()"
		},
		{
			"forge": "onBrokenAfterFall(Level arg0, BlockPos arg1, FallingBlockEntity arg2)",
			"fabric": "onDestroyedOnLanding(World arg0, BlockPos arg1, FallingBlockEntity arg2)"
		},
		{
			"forge": "getFallDamageSource(Entity arg0)",
			"fabric": "getDamageSource(Entity arg0)"
		},
		{
			"forge": "spawnFallingStalactite(BlockState arg0, ServerLevel arg1, BlockPos arg2)",
			"fabric": "spawnFallingBlock(BlockState state, ServerWorld world, BlockPos pos)"
		},
		{
			"forge": "growStalactiteOrStalagmiteIfPossible(BlockState arg0, ServerLevel arg1, BlockPos arg2, RandomSource arg3)",
			"fabric": "tryGrow(BlockState state, ServerWorld world, BlockPos pos, Random random)"
		},
		{
			"forge": "growStalagmiteBelow(ServerLevel arg0, BlockPos arg1)",
			"fabric": "tryGrowStalagmite(ServerWorld world, BlockPos pos)"
		},
		{
			"forge": "grow(ServerLevel arg0, BlockPos arg1, Direction arg2)",
			"fabric": "tryGrow(ServerWorld world, BlockPos pos, Direction direction)"
		},
		{
			"forge": "createDripstone(LevelAccessor arg0, BlockPos arg1, Direction arg2, DripstoneThickness arg3)",
			"fabric": "place(WorldAccess world, BlockPos pos, Direction direction, Thickness thickness)"
		},
		{
			"forge": "createMergedTips(BlockState arg0, LevelAccessor arg1, BlockPos arg2)",
			"fabric": "growMerged(BlockState state, WorldAccess world, BlockPos pos)"
		},
		{
			"forge": "spawnDripParticle(Level arg0, BlockPos arg1, BlockState arg2)",
			"fabric": "createParticle(World world, BlockPos pos, BlockState state)"
		},
		{
			"forge": "spawnDripParticle(Level arg0, BlockPos arg1, BlockState arg2, Fluid arg3)",
			"fabric": "createParticle(World world, BlockPos pos, BlockState state, Fluid fluid)"
		},
		{
			"forge": "findTip(BlockState arg0, LevelAccessor arg1, BlockPos arg2, int arg3, boolean arg4)",
			"fabric": "getTipPos(BlockState state, WorldAccess world, BlockPos pos, int range, boolean allowMerged)"
		},
		{
			"forge": "calculateTipDirection(LevelReader arg0, BlockPos arg1, Direction arg2)",
			"fabric": "getDirectionToPlaceAt(WorldView world, BlockPos pos, Direction direction)"
		},
		{
			"forge": "calculateDripstoneThickness(LevelReader arg0, BlockPos arg1, Direction arg2, boolean arg3)",
			"fabric": "getThickness(WorldView world, BlockPos pos, Direction direction, boolean tryMerge)"
		},
		{
			"forge": "canDrip(BlockState arg0)",
			"fabric": "canDrip(BlockState state)"
		},
		{
			"forge": "canTipGrow(BlockState arg0, ServerLevel arg1, BlockPos arg2)",
			"fabric": "canGrow(BlockState state, ServerWorld world, BlockPos pos)"
		},
		{
			"forge": "findRootBlock(Level arg0, BlockPos arg1, BlockState arg2, int arg3)",
			"fabric": "getSupportingPos(World world, BlockPos pos, BlockState state, int range)"
		},
		{
			"forge": "isValidPointedDripstonePlacement(LevelReader arg0, BlockPos arg1, Direction arg2)",
			"fabric": "canPlaceAtWithDirection(WorldView world, BlockPos pos, Direction direction)"
		},
		{
			"forge": "isTip(BlockState arg0, boolean arg1)",
			"fabric": "isTip(BlockState state, boolean allowMerged)"
		},
		{
			"forge": "isUnmergedTipWithDirection(BlockState arg0, Direction arg1)",
			"fabric": "isTip(BlockState state, Direction direction)"
		},
		{
			"forge": "isStalactite(BlockState arg0)",
			"fabric": "isPointingDown(BlockState state)"
		},
		{
			"forge": "isStalagmite(BlockState arg0)",
			"fabric": "isPointingUp(BlockState state)"
		},
		{
			"forge": "isStalactiteStartPos(BlockState arg0, LevelReader arg1, BlockPos arg2)",
			"fabric": "isHeldByPointedDripstone(BlockState state, WorldView world, BlockPos pos)"
		},
		{
			"forge": "isPathfindable(BlockState arg0, BlockGetter arg1, BlockPos arg2, PathComputationType arg3)",
			"fabric": "canPathfindThrough(BlockState arg0, BlockView arg1, BlockPos arg2, NavigationType arg3)"
		},
		{
			"forge": "isPointedDripstoneWithDirection(BlockState arg0, Direction arg1)",
			"fabric": "isPointedDripstoneFacingDirection(BlockState state, Direction direction)"
		},
		{
			"forge": "findFillableCauldronBelowStalactiteTip(Level arg0, BlockPos arg1, Fluid arg2)",
			"fabric": "getCauldronPos(World world, BlockPos pos, Fluid fluid)"
		},
		{
			"forge": "findStalactiteTipAboveCauldron(Level arg0, BlockPos arg1)",
			"fabric": "getDripPos(World world, BlockPos pos)"
		},
		{
			"forge": "getCauldronFillFluidType(ServerLevel arg0, BlockPos arg1)",
			"fabric": "getDripFluid(ServerWorld world, BlockPos pos)"
		},
		{
			"forge": "getFluidAboveStalactite(Level arg0, BlockPos arg1, BlockState arg2)",
			"fabric": "getFluid(World world, BlockPos pos, BlockState state)"
		},
		{
			"forge": "canFillCauldron(Fluid arg0)",
			"fabric": "isFluidLiquid(Fluid fluid)"
		},
		{
			"forge": "canGrow(BlockState arg0, BlockState arg1)",
			"fabric": "canGrow(BlockState dripstoneBlockState, BlockState waterState)"
		},
		{
			"forge": "getDripFluid(Level arg0, Fluid arg1)",
			"fabric": "getDripFluid(World world, Fluid fluid)"
		},
		{
			"forge": "findBlockVertical(LevelAccessor arg0, BlockPos arg1, Direction$AxisDirection arg2, BiPredicate<BlockPos, BlockState> arg3, Predicate<BlockState> arg4, int arg5)",
			"fabric": "searchInDirection(WorldAccess world, BlockPos pos, Direction$AxisDirection direction, BiPredicate<BlockPos, BlockState> continuePredicate, Predicate<BlockState> stopPredicate, int range)"
		},
		{
			"forge": "canDripThrough(BlockGetter arg0, BlockPos arg1, BlockState arg2)",
			"fabric": "canDripThrough(BlockView world, BlockPos pos, BlockState state)"
		}
	]
}