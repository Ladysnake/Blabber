{
	"title": "net.minecraft.world.level.levelgen.feature.VegetationPatchFeature",
	"items": [
		{
			"forge": "net.minecraft.world.level.levelgen.feature.VegetationPatchFeature",
			"fabric": "net.minecraft.world.gen.feature.VegetationPatchFeature"
		},
		{
			"forge": "place(FeaturePlaceContext<VegetationPatchConfiguration> arg0)",
			"fabric": "generate(FeatureContext<VegetationPatchFeatureConfig> arg0)"
		},
		{
			"forge": "place(FeaturePlaceContext<VegetationPatchConfiguration> arg0)",
			"fabric": "generate(FeatureContext<VegetationPatchFeatureConfig> arg0)"
		},
		{
			"forge": "placeGroundPatch(WorldGenLevel arg0, VegetationPatchConfiguration arg1, RandomSource arg2, BlockPos arg3, Predicate<BlockState> arg4, int arg5, int arg6)",
			"fabric": "placeGroundAndGetPositions(StructureWorldAccess world, VegetationPatchFeatureConfig config, Random random, BlockPos pos, Predicate<BlockState> replaceable, int radiusX, int radiusZ)"
		},
		{
			"forge": "distributeVegetation(FeaturePlaceContext<VegetationPatchConfiguration> arg0, WorldGenLevel arg1, VegetationPatchConfiguration arg2, RandomSource arg3, Set<BlockPos> arg4, int arg5, int arg6)",
			"fabric": "generateVegetation(FeatureContext<VegetationPatchFeatureConfig> context, StructureWorldAccess world, VegetationPatchFeatureConfig config, Random random, Set<BlockPos> positions, int radiusX, int radiusZ)"
		},
		{
			"forge": "placeVegetation(WorldGenLevel arg0, VegetationPatchConfiguration arg1, ChunkGenerator arg2, RandomSource arg3, BlockPos arg4)",
			"fabric": "generateVegetationFeature(StructureWorldAccess world, VegetationPatchFeatureConfig config, ChunkGenerator generator, Random random, BlockPos pos)"
		},
		{
			"forge": "placeGround(WorldGenLevel arg0, VegetationPatchConfiguration arg1, Predicate<BlockState> arg2, RandomSource arg3, BlockPos$MutableBlockPos arg4, int arg5)",
			"fabric": "placeGround(StructureWorldAccess world, VegetationPatchFeatureConfig config, Predicate<BlockState> replaceable, Random random, BlockPos$Mutable pos, int depth)"
		}
	]
}