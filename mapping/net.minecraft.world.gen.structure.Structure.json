{
	"title": "net.minecraft.world.level.levelgen.structure.Structure",
	"items": [
		{
			"forge": "net.minecraft.world.level.levelgen.structure.Structure",
			"fabric": "net.minecraft.world.gen.structure.Structure"
		},
		{
			"forge": "DIRECT_CODEC",
			"fabric": "STRUCTURE_CODEC"
		},
		{
			"forge": "DIRECT_CODEC",
			"fabric": "STRUCTURE_CODEC"
		},
		{
			"forge": "CODEC",
			"fabric": "ENTRY_CODEC"
		},
		{
			"forge": "settings",
			"fabric": "config"
		},
		{
			"forge": "settingsCodec(com.mojang.serialization.codecs.RecordCodecBuilder$Instance<S> arg0)",
			"fabric": "configCodecBuilder(com.mojang.serialization.codecs.RecordCodecBuilder$Instance<S> instance)"
		},
		{
			"forge": "settingsCodec(com.mojang.serialization.codecs.RecordCodecBuilder$Instance<S> arg0)",
			"fabric": "configCodecBuilder(com.mojang.serialization.codecs.RecordCodecBuilder$Instance<S> instance)"
		},
		{
			"forge": "simpleCodec(Function<Structure$StructureSettings, S> arg0)",
			"fabric": "createCodec(Function<Structure$Config, S> featureCreator)"
		},
		{
			"forge": "biomes()",
			"fabric": "getValidBiomes()"
		},
		{
			"forge": "spawnOverrides()",
			"fabric": "getStructureSpawns()"
		},
		{
			"forge": "step()",
			"fabric": "getFeatureGenerationStep()"
		},
		{
			"forge": "terrainAdaptation()",
			"fabric": "getTerrainAdaptation()"
		},
		{
			"forge": "adjustBoundingBox(BoundingBox arg0)",
			"fabric": "expandBoxIfShouldAdaptNoise(BlockBox box)"
		},
		{
			"forge": "generate(RegistryAccess arg0, ChunkGenerator arg1, BiomeSource arg2, RandomState arg3, StructureTemplateManager arg4, long arg5, ChunkPos arg6, int arg7, LevelHeightAccessor arg8, Predicate<Holder<Biome>> arg9)",
			"fabric": "createStructureStart(DynamicRegistryManager dynamicRegistryManager, ChunkGenerator chunkGenerator, BiomeSource biomeSource, NoiseConfig noiseConfig, StructureTemplateManager structureTemplateManager, long seed, ChunkPos chunkPos, int references, HeightLimitView world, Predicate<RegistryEntry<Biome>> validBiomes)"
		},
		{
			"forge": "onTopOfChunkCenter(Structure$GenerationContext arg0, Heightmap$Types arg1, Consumer<StructurePiecesBuilder> arg2)",
			"fabric": "getStructurePosition(Structure$Context context, Heightmap$Type heightmap, Consumer<StructurePiecesCollector> generator)"
		},
		{
			"forge": "isValidBiome(Structure$GenerationStub arg0, Structure$GenerationContext arg1)",
			"fabric": "isBiomeValid(Structure$StructurePosition result, Structure$Context context)"
		},
		{
			"forge": "afterPlace(WorldGenLevel arg0, StructureManager arg1, ChunkGenerator arg2, RandomSource arg3, BoundingBox arg4, ChunkPos arg5, PiecesContainer arg6)",
			"fabric": "postPlace(StructureWorldAccess world, StructureAccessor structureAccessor, ChunkGenerator chunkGenerator, Random random, BlockBox box, ChunkPos chunkPos, StructurePiecesList pieces)"
		},
		{
			"forge": "getCornerHeights(Structure$GenerationContext arg0, int arg1, int arg2, int arg3, int arg4)",
			"fabric": "getCornerHeights(Structure$Context context, int x, int width, int z, int height)"
		},
		{
			"forge": "getLowestY(Structure$GenerationContext arg0, int arg1, int arg2)",
			"fabric": "getMinCornerHeight(Structure$Context context, int width, int height)"
		},
		{
			"forge": "getLowestY(Structure$GenerationContext arg0, int arg1, int arg2, int arg3, int arg4)",
			"fabric": "getMinCornerHeight(Structure$Context context, int x, int z, int width, int height)"
		},
		{
			"forge": "getLowestYIn5by5BoxOffset7Blocks(Structure$GenerationContext arg0, Rotation arg1)",
			"fabric": "getShiftedPos(Structure$Context context, BlockRotation rotation)"
		},
		{
			"forge": "findGenerationPoint(Structure$GenerationContext arg0)",
			"fabric": "getStructurePosition(Structure$Context context)"
		},
		{
			"forge": "findValidGenerationPoint(Structure$GenerationContext arg0)",
			"fabric": "getValidStructurePosition(Structure$Context context)"
		},
		{
			"forge": "type()",
			"fabric": "getType()"
		}
	]
}