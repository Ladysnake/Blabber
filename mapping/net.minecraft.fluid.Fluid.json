{
	"title": "net.minecraft.world.level.material.Fluid",
	"items": [
		{
			"forge": "net.minecraft.world.level.material.Fluid",
			"fabric": "net.minecraft.fluid.Fluid"
		},
		{
			"forge": "FLUID_STATE_REGISTRY",
			"fabric": "STATE_IDS"
		},
		{
			"forge": "FLUID_STATE_REGISTRY",
			"fabric": "STATE_IDS"
		},
		{
			"forge": "stateDefinition",
			"fabric": "stateManager"
		},
		{
			"forge": "defaultFluidState",
			"fabric": "defaultState"
		},
		{
			"forge": "builtInRegistryHolder",
			"fabric": "registryEntry"
		},
		{
			"forge": "createFluidStateDefinition(StateDefinition$Builder<Fluid, FluidState> arg0)",
			"fabric": "appendProperties(StateManager$Builder<Fluid, FluidState> builder)"
		},
		{
			"forge": "createFluidStateDefinition(StateDefinition$Builder<Fluid, FluidState> arg0)",
			"fabric": "appendProperties(StateManager$Builder<Fluid, FluidState> builder)"
		},
		{
			"forge": "getStateDefinition()",
			"fabric": "getStateManager()"
		},
		{
			"forge": "registerDefaultState(FluidState arg0)",
			"fabric": "setDefaultState(FluidState state)"
		},
		{
			"forge": "defaultFluidState()",
			"fabric": "getDefaultState()"
		},
		{
			"forge": "getBucket()",
			"fabric": "getBucketItem()"
		},
		{
			"forge": "animateTick(Level arg0, BlockPos arg1, FluidState arg2, RandomSource arg3)",
			"fabric": "randomDisplayTick(World world, BlockPos pos, FluidState state, Random random)"
		},
		{
			"forge": "tick(Level arg0, BlockPos arg1, FluidState arg2)",
			"fabric": "onScheduledTick(World world, BlockPos pos, FluidState state)"
		},
		{
			"forge": "randomTick(Level arg0, BlockPos arg1, FluidState arg2, RandomSource arg3)",
			"fabric": "onRandomTick(World world, BlockPos pos, FluidState state, Random random)"
		},
		{
			"forge": "getDripParticle()",
			"fabric": "getParticle()"
		},
		{
			"forge": "canBeReplacedWith(FluidState arg0, BlockGetter arg1, BlockPos arg2, Fluid arg3, Direction arg4)",
			"fabric": "canBeReplacedWith(FluidState state, BlockView world, BlockPos pos, Fluid fluid, Direction direction)"
		},
		{
			"forge": "getFlow(BlockGetter arg0, BlockPos arg1, FluidState arg2)",
			"fabric": "getVelocity(BlockView world, BlockPos pos, FluidState state)"
		},
		{
			"forge": "getTickDelay(LevelReader arg0)",
			"fabric": "getTickRate(WorldView world)"
		},
		{
			"forge": "isRandomlyTicking()",
			"fabric": "hasRandomTicks()"
		},
		{
			"forge": "isEmpty()",
			"fabric": "isEmpty()"
		},
		{
			"forge": "getExplosionResistance()",
			"fabric": "getBlastResistance()"
		},
		{
			"forge": "getHeight(FluidState arg0, BlockGetter arg1, BlockPos arg2)",
			"fabric": "getHeight(FluidState state, BlockView world, BlockPos pos)"
		},
		{
			"forge": "getOwnHeight(FluidState arg0)",
			"fabric": "getHeight(FluidState state)"
		},
		{
			"forge": "createLegacyBlock(FluidState arg0)",
			"fabric": "toBlockState(FluidState state)"
		},
		{
			"forge": "isSource(FluidState arg0)",
			"fabric": "isStill(FluidState state)"
		},
		{
			"forge": "getAmount(FluidState arg0)",
			"fabric": "getLevel(FluidState state)"
		},
		{
			"forge": "isSame(Fluid arg0)",
			"fabric": "matchesType(Fluid fluid)"
		},
		{
			"forge": "is(TagKey<Fluid> arg0)",
			"fabric": "isIn(TagKey<Fluid> tag)"
		},
		{
			"forge": "getShape(FluidState arg0, BlockGetter arg1, BlockPos arg2)",
			"fabric": "getShape(FluidState state, BlockView world, BlockPos pos)"
		},
		{
			"forge": "getPickupSound()",
			"fabric": "getBucketFillSound()"
		},
		{
			"forge": "builtInRegistryHolder()",
			"fabric": "getRegistryEntry()"
		}
	]
}