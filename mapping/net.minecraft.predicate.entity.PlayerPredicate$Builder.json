{
	"title": "net.minecraft.advancements.critereon.PlayerPredicate$Builder",
	"items": [
		{
			"forge": "net.minecraft.advancements.critereon.PlayerPredicate$Builder",
			"fabric": "net.minecraft.predicate.entity.PlayerPredicate$Builder"
		},
		{
			"forge": "level",
			"fabric": "experienceLevel"
		},
		{
			"forge": "level",
			"fabric": "experienceLevel"
		},
		{
			"forge": "gameType",
			"fabric": "gameMode"
		},
		{
			"forge": "stats",
			"fabric": "stats"
		},
		{
			"forge": "recipes",
			"fabric": "recipes"
		},
		{
			"forge": "advancements",
			"fabric": "advancements"
		},
		{
			"forge": "lookingAt",
			"fabric": "lookingAt"
		},
		{
			"forge": "player()",
			"fabric": "create()"
		},
		{
			"forge": "player()",
			"fabric": "create()"
		},
		{
			"forge": "setLevel(MinMaxBounds$Ints arg0)",
			"fabric": "experienceLevel(NumberRange$IntRange experienceLevel)"
		},
		{
			"forge": "addStat(Stat<?> arg0, MinMaxBounds$Ints arg1)",
			"fabric": "stat(Stat<?> stat, NumberRange$IntRange value)"
		},
		{
			"forge": "addRecipe(ResourceLocation arg0, boolean arg1)",
			"fabric": "recipe(Identifier id, boolean unlocked)"
		},
		{
			"forge": "setGameType(GameType arg0)",
			"fabric": "gameMode(GameMode gameMode)"
		},
		{
			"forge": "setLookingAt(EntityPredicate arg0)",
			"fabric": "lookingAt(EntityPredicate lookingAt)"
		},
		{
			"forge": "checkAdvancementDone(ResourceLocation arg0, boolean arg1)",
			"fabric": "advancement(Identifier id, boolean done)"
		},
		{
			"forge": "checkAdvancementCriterions(ResourceLocation arg0, Map<String, Boolean> arg1)",
			"fabric": "advancement(Identifier id, Map<String, Boolean> criteria)"
		},
		{
			"forge": "build()",
			"fabric": "build()"
		}
	]
}