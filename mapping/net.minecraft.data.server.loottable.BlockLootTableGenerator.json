{
	"title": "net.minecraft.data.loot.BlockLootSubProvider",
	"items": [
		{
			"forge": "net.minecraft.data.loot.BlockLootSubProvider",
			"fabric": "net.minecraft.data.server.loottable.BlockLootTableGenerator"
		},
		{
			"forge": "HAS_SILK_TOUCH",
			"fabric": "WITH_SILK_TOUCH"
		},
		{
			"forge": "HAS_SILK_TOUCH",
			"fabric": "WITH_SILK_TOUCH"
		},
		{
			"forge": "HAS_NO_SILK_TOUCH",
			"fabric": "WITHOUT_SILK_TOUCH"
		},
		{
			"forge": "HAS_SHEARS",
			"fabric": "WITH_SHEARS"
		},
		{
			"forge": "HAS_SHEARS_OR_SILK_TOUCH",
			"fabric": "WITH_SILK_TOUCH_OR_SHEARS"
		},
		{
			"forge": "HAS_NO_SHEARS_OR_SILK_TOUCH",
			"fabric": "WITHOUT_SILK_TOUCH_NOR_SHEARS"
		},
		{
			"forge": "explosionResistant",
			"fabric": "explosionImmuneItems"
		},
		{
			"forge": "enabledFeatures",
			"fabric": "requiredFeatures"
		},
		{
			"forge": "map",
			"fabric": "lootTables"
		},
		{
			"forge": "NORMAL_LEAVES_SAPLING_CHANCES",
			"fabric": "SAPLING_DROP_CHANCE"
		},
		{
			"forge": "NORMAL_LEAVES_STICK_CHANCES",
			"fabric": "LEAVES_STICK_DROP_CHANCE"
		},
		{
			"forge": "applyExplosionDecay(ItemLike arg0, FunctionUserBuilder<T> arg1)",
			"fabric": "applyExplosionDecay(ItemConvertible drop, LootFunctionConsumingBuilder<T> builder)"
		},
		{
			"forge": "applyExplosionDecay(ItemLike arg0, FunctionUserBuilder<T> arg1)",
			"fabric": "applyExplosionDecay(ItemConvertible drop, LootFunctionConsumingBuilder<T> builder)"
		},
		{
			"forge": "applyExplosionCondition(ItemLike arg0, ConditionUserBuilder<T> arg1)",
			"fabric": "addSurvivesExplosionCondition(ItemConvertible drop, LootConditionConsumingBuilder<T> builder)"
		},
		{
			"forge": "createSingleItemTable(ItemLike arg0)",
			"fabric": "drops(ItemConvertible drop)"
		},
		{
			"forge": "createSelfDropDispatchTable(Block arg0, LootItemCondition$Builder arg1, LootPoolEntryContainer$Builder<?> arg2)",
			"fabric": "drops(Block drop, LootCondition$Builder conditionBuilder, LootPoolEntry$Builder<?> child)"
		},
		{
			"forge": "createSilkTouchDispatchTable(Block arg0, LootPoolEntryContainer$Builder<?> arg1)",
			"fabric": "dropsWithSilkTouch(Block drop, LootPoolEntry$Builder<?> child)"
		},
		{
			"forge": "createShearsDispatchTable(Block arg0, LootPoolEntryContainer$Builder<?> arg1)",
			"fabric": "dropsWithShears(Block drop, LootPoolEntry$Builder<?> child)"
		},
		{
			"forge": "createSilkTouchOrShearsDispatchTable(Block arg0, LootPoolEntryContainer$Builder<?> arg1)",
			"fabric": "dropsWithSilkTouchOrShears(Block drop, LootPoolEntry$Builder<?> child)"
		},
		{
			"forge": "createSingleItemTableWithSilkTouch(Block arg0, ItemLike arg1)",
			"fabric": "drops(Block dropWithSilkTouch, ItemConvertible drop)"
		},
		{
			"forge": "createSingleItemTable(ItemLike arg0, NumberProvider arg1)",
			"fabric": "drops(ItemConvertible drop, LootNumberProvider count)"
		},
		{
			"forge": "createSingleItemTableWithSilkTouch(Block arg0, ItemLike arg1, NumberProvider arg2)",
			"fabric": "drops(Block dropWithSilkTouch, ItemConvertible drop, LootNumberProvider count)"
		},
		{
			"forge": "createSilkTouchOnlyTable(ItemLike arg0)",
			"fabric": "dropsWithSilkTouch(ItemConvertible drop)"
		},
		{
			"forge": "createPotFlowerItemTable(ItemLike arg0)",
			"fabric": "pottedPlantDrops(ItemConvertible drop)"
		},
		{
			"forge": "createSlabItemTable(Block arg0)",
			"fabric": "slabDrops(Block drop)"
		},
		{
			"forge": "createSinglePropConditionTable(Block arg0, Property<T> arg1, T arg2)",
			"fabric": "dropsWithProperty(Block drop, Property<T> property, T value)"
		},
		{
			"forge": "createNameableBlockEntityTable(Block arg0)",
			"fabric": "nameableContainerDrops(Block drop)"
		},
		{
			"forge": "createShulkerBoxDrop(Block arg0)",
			"fabric": "shulkerBoxDrops(Block drop)"
		},
		{
			"forge": "createCopperOreDrops(Block arg0)",
			"fabric": "copperOreDrops(Block drop)"
		},
		{
			"forge": "createLapisOreDrops(Block arg0)",
			"fabric": "lapisOreDrops(Block drop)"
		},
		{
			"forge": "createRedstoneOreDrops(Block arg0)",
			"fabric": "redstoneOreDrops(Block drop)"
		},
		{
			"forge": "createBannerDrop(Block arg0)",
			"fabric": "bannerDrops(Block drop)"
		},
		{
			"forge": "createBeeNestDrop(Block arg0)",
			"fabric": "beeNestDrops(Block drop)"
		},
		{
			"forge": "createBeeHiveDrop(Block arg0)",
			"fabric": "beehiveDrops(Block drop)"
		},
		{
			"forge": "createCaveVinesDrop(Block arg0)",
			"fabric": "glowBerryDrops(Block drop)"
		},
		{
			"forge": "createOreDrop(Block arg0, Item arg1)",
			"fabric": "oreDrops(Block dropWithSilkTouch, Item drop)"
		},
		{
			"forge": "createMushroomBlockDrop(Block arg0, ItemLike arg1)",
			"fabric": "mushroomBlockDrops(Block dropWithSilkTouch, ItemConvertible drop)"
		},
		{
			"forge": "createGrassDrops(Block arg0)",
			"fabric": "grassDrops(Block dropWithShears)"
		},
		{
			"forge": "createStemDrops(Block arg0, Item arg1)",
			"fabric": "cropStemDrops(Block stem, Item drop)"
		},
		{
			"forge": "createAttachedStemDrops(Block arg0, Item arg1)",
			"fabric": "attachedCropStemDrops(Block stem, Item drop)"
		},
		{
			"forge": "createShearsOnlyDrop(ItemLike arg0)",
			"fabric": "dropsWithShears(ItemConvertible drop)"
		},
		{
			"forge": "createMultifaceBlockDrops(Block arg0, LootItemCondition$Builder arg1)",
			"fabric": "multifaceGrowthDrops(Block drop, LootCondition$Builder condition)"
		},
		{
			"forge": "createLeavesDrops(Block arg0, Block arg1, float... arg2)",
			"fabric": "leavesDrops(Block leaves, Block drop, float... chance)"
		},
		{
			"forge": "createOakLeavesDrops(Block arg0, Block arg1, float... arg2)",
			"fabric": "oakLeavesDrops(Block leaves, Block drop, float... chance)"
		},
		{
			"forge": "createMangroveLeavesDrops(Block arg0)",
			"fabric": "mangroveLeavesDrops(Block leaves)"
		},
		{
			"forge": "createCropDrops(Block arg0, Item arg1, Item arg2, LootItemCondition$Builder arg3)",
			"fabric": "cropDrops(Block crop, Item product, Item seeds, LootCondition$Builder condition)"
		},
		{
			"forge": "createDoublePlantShearsDrop(Block arg0)",
			"fabric": "seagrassDrops(Block seagrass)"
		},
		{
			"forge": "createDoublePlantWithSeedDrops(Block arg0, Block arg1)",
			"fabric": "tallGrassDrops(Block tallGrass, Block grass)"
		},
		{
			"forge": "createCandleDrops(Block arg0)",
			"fabric": "candleDrops(Block candle)"
		},
		{
			"forge": "createPetalsDrops(Block arg0)",
			"fabric": "flowerbedDrops(Block flowerbed)"
		},
		{
			"forge": "createCandleCakeDrops(Block arg0)",
			"fabric": "candleCakeDrops(Block candleCake)"
		},
		{
			"forge": "noDrop()",
			"fabric": "dropsNothing()"
		},
		{
			"forge": "generate()",
			"fabric": "generate()"
		},
		{
			"forge": "generate(BiConsumer<ResourceLocation, LootTable$Builder> arg0)",
			"fabric": "accept(BiConsumer<Identifier, LootTable$Builder> arg0)"
		},
		{
			"forge": "addNetherVinesDropTable(Block arg0, Block arg1)",
			"fabric": "addVinePlantDrop(Block block, Block drop)"
		},
		{
			"forge": "createDoorTable(Block arg0)",
			"fabric": "doorDrops(Block block)"
		},
		{
			"forge": "dropPottedContents(Block arg0)",
			"fabric": "addPottedPlantDrops(Block block)"
		},
		{
			"forge": "otherWhenSilkTouch(Block arg0, Block arg1)",
			"fabric": "addDropWithSilkTouch(Block block, Block drop)"
		},
		{
			"forge": "dropOther(Block arg0, ItemLike arg1)",
			"fabric": "addDrop(Block block, ItemConvertible drop)"
		},
		{
			"forge": "dropWhenSilkTouch(Block arg0)",
			"fabric": "addDropWithSilkTouch(Block block)"
		},
		{
			"forge": "dropSelf(Block arg0)",
			"fabric": "addDrop(Block block)"
		},
		{
			"forge": "add(Block arg0, Function<Block, LootTable$Builder> arg1)",
			"fabric": "addDrop(Block block, Function<Block, LootTable$Builder> lootTableFunction)"
		},
		{
			"forge": "add(Block arg0, LootTable$Builder arg1)",
			"fabric": "addDrop(Block block, LootTable$Builder lootTable)"
		}
	]
}