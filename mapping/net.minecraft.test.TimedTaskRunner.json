{
	"title": "net.minecraft.gametest.framework.GameTestSequence",
	"items": [
		{
			"forge": "net.minecraft.gametest.framework.GameTestSequence",
			"fabric": "net.minecraft.test.TimedTaskRunner"
		},
		{
			"forge": "parent",
			"fabric": "test"
		},
		{
			"forge": "parent",
			"fabric": "test"
		},
		{
			"forge": "events",
			"fabric": "tasks"
		},
		{
			"forge": "lastTick",
			"fabric": "tick"
		},
		{
			"forge": "thenWaitUntil(Runnable arg0)",
			"fabric": "createAndAdd(Runnable task)"
		},
		{
			"forge": "thenWaitUntil(Runnable arg0)",
			"fabric": "createAndAdd(Runnable task)"
		},
		{
			"forge": "thenWaitUntil(long arg0, Runnable arg1)",
			"fabric": "createAndAdd(long duration, Runnable task)"
		},
		{
			"forge": "thenIdle(int arg0)",
			"fabric": "expectMinDuration(int minDuration)"
		},
		{
			"forge": "thenExecute(Runnable arg0)",
			"fabric": "createAndAddReported(Runnable task)"
		},
		{
			"forge": "thenExecuteAfter(int arg0, Runnable arg1)",
			"fabric": "expectMinDurationAndRun(int minDuration, Runnable task)"
		},
		{
			"forge": "thenExecuteFor(int arg0, Runnable arg1)",
			"fabric": "expectMinDurationOrRun(int minDuration, Runnable task)"
		},
		{
			"forge": "thenSucceed()",
			"fabric": "completeIfSuccessful()"
		},
		{
			"forge": "thenFail(Supplier<Exception> arg0)",
			"fabric": "fail(Supplier<Exception> exceptionSupplier)"
		},
		{
			"forge": "thenTrigger()",
			"fabric": "createAndAddTrigger()"
		},
		{
			"forge": "tickAndContinue(long arg0)",
			"fabric": "runSilently(long tick)"
		},
		{
			"forge": "tickAndFailIfNotComplete(long arg0)",
			"fabric": "runReported(long tick)"
		},
		{
			"forge": "executeWithoutFail(Runnable arg0)",
			"fabric": "tryRun(Runnable task)"
		},
		{
			"forge": "tick(long arg0)",
			"fabric": "runTasks(long tick)"
		}
	]
}