import net.fabricmc.loom.task.RemapJarTask

plugins {
	id 'fabric-loom' version "1.10-SNAPSHOT"
	id 'io.github.ladysnake.chenille' version '0.14.0'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

chenille {
	configureTestmod {
		withBaseTestRuns()
        withDependencyConfiguration()
	}

	license = project.license_header
	javaVersion = project.java_version.toInteger()
}

java {
	withSourcesJar()
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"blabber" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
		"babblings" {
			sourceSet sourceSets.testmod
		}
	}
}

sourceSets {
	reiDummy
	testmod {
		compileClasspath += client.compileClasspath
		runtimeClasspath += client.runtimeClasspath
	}
	test {
		compileClasspath += testmod.compileClasspath
		runtimeClasspath += testmod.runtimeClasspath
	}
}

repositories {
	chenille.repositories.allCommonRepositories()
	maven {
		url "https://maven.shedaniel.me"
		content {
			includeGroup("me.shedaniel")
			includeGroup("dev.architectury")
		}
	}
	mavenLocal()
}

dependencies {
	testmodImplementation(sourceSets.client.output)

	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modIncludeImplementation(libs.cca.base)
	modIncludeImplementation(libs.cca.entity)
	modIncludeImplementation(libs.permissionsApi)
	modLocalImplementation(libs.rei.api)
	compileOnly(sourceSets.reiDummy.output)
    modCompileOnly(libs.emi)
	modCompileOnly(libs.jei)

	compileOnly(libs.mcAnnotations)

//	modLocalImplementation(libs.modmenu)

	// Test dependencies
	modLocalImplementation(libs.elmendorf)

	testImplementation("org.junit.jupiter:junit-jupiter:5.10.0")
	testImplementation "net.fabricmc:fabric-loader-junit:${project.loader_version}"
	testImplementation(sourceSets.testmod.output)
}

test {
	useJUnitPlatform()
	maxHeapSize = '1G'
	workingDir(project.layout.buildDirectory)
	testLogging {
		events("passed", "skipped", "failed")
	}
}

license {
	exclude 'me/shedaniel/**/*'
	exclude 'org/ladysnake/blabber/impl/common/validation/EitherCodecButGood.java'
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

jar {
	from("COPYING.LESSER") {
		rename { "LICENSE_${project.archivesBaseName}"}
	}
}

remapJar {
	addNestedDependencies.set(false)
}

tasks.register("standaloneJar", Jar) {
	from sourceSets.main.output
	from sourceSets.client.output
	archiveClassifier.set('standalone-dev')
	dependsOn project.classes
}

tasks.register("remapStandaloneJar", RemapJarTask) {
	archiveClassifier.set('standalone')
	inputFile.set(standaloneJar.archiveFile)
	addNestedDependencies.set(true)
	dependsOn project.standaloneJar
}

assemble.dependsOn(remapStandaloneJar)


var testmodJar = tasks.register('testmodJar', Jar) {
	dependsOn testmodClasses

	archiveBaseName.set('Babblings')
	archiveClassifier.set('dev')
	from(sourceSets.testmod.output) {
		include 'fabric.mod.json'
		expand 'version': project.version
	}
	from(sourceSets.testmod.output) {
		exclude 'fabric.mod.json'
	}
}

var remapTestmodJar = tasks.register('remapTestmodJar', RemapJarTask) {
	dependsOn project.testmodJar

	archiveBaseName.set('Babblings')
	inputFile.set(testmodJar.get().archiveFile)
	addNestedDependencies = false
}

build.dependsOn(remapTestmodJar)

chenille {
	configurePublishing {
		mainArtifact = remapStandaloneJar.archiveFile
		withLadysnakeMaven()
		withCurseforgeRelease()
		withGithubRelease()
		withModrinthRelease()
	}
}

publishing {
	publications {
		create("relocation", MavenPublication) {
			pom {
				// Old artifact coordinates
				groupId = "io.github.ladysnake"

				distributionManagement {
					relocation {
						// New artifact coordinates
						groupId = "org.ladysnake"
						message = "groupId has been changed"
					}
				}
			}
		}
	}
}
